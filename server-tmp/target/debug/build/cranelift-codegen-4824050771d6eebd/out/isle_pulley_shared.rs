// GENERATED BY ISLE. DO NOT EDIT!
//
// Generated automatically from the instruction-selection DSL code in:
// - src/prelude.isle
// - src/prelude_lower.isle
// - src/isa/pulley_shared/inst.isle
// - src/isa/pulley_shared/lower.isle
// - /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle
// - /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/clif_lower.isle

use super::*;  // Pulls in all external types.
use std::marker::PhantomData;

/// Context during lowering: an implementation of this trait
/// must be provided with all external constructors and extractors.
/// A mutable borrow is passed along through all lowering logic.
pub trait Context {
    fn unit(&mut self, ) -> Unit;
    fn value_type(&mut self, arg0: Value) -> Type;
    fn u32_nonnegative(&mut self, arg0: u32) -> Option<u32>;
    fn offset32(&mut self, arg0: Offset32) -> i32;
    fn u32_lteq(&mut self, arg0: u32, arg1: u32) -> Option<Unit>;
    fn u8_lteq(&mut self, arg0: u8, arg1: u8) -> Option<Unit>;
    fn u8_lt(&mut self, arg0: u8, arg1: u8) -> Option<Unit>;
    fn u8_as_i8(&mut self, arg0: u8) -> i8;
    fn u8_as_u32(&mut self, arg0: u8) -> u32;
    fn u8_as_u64(&mut self, arg0: u8) -> u64;
    fn u16_as_i16(&mut self, arg0: u16) -> i16;
    fn u16_as_u32(&mut self, arg0: u16) -> u32;
    fn u16_as_u64(&mut self, arg0: u16) -> u64;
    fn u64_as_u8(&mut self, arg0: u64) -> u8;
    fn u64_as_u16(&mut self, arg0: u64) -> u16;
    fn u64_as_i64(&mut self, arg0: u64) -> i64;
    fn u8_try_from_u64(&mut self, arg0: u64) -> Option<u8>;
    fn u8_try_from_u16(&mut self, arg0: u16) -> Option<u8>;
    fn u8_try_from_i32(&mut self, arg0: i32) -> Option<u8>;
    fn u16_try_from_u64(&mut self, arg0: u64) -> Option<u16>;
    fn u32_try_from_u64(&mut self, arg0: u64) -> Option<u32>;
    fn u64_try_from_i64(&mut self, arg0: i64) -> Option<u64>;
    fn i8_try_from_u64(&mut self, arg0: u64) -> Option<i8>;
    fn i16_try_from_u64(&mut self, arg0: u64) -> Option<i16>;
    fn i32_try_from_u64(&mut self, arg0: u64) -> Option<i32>;
    fn u32_as_u64(&mut self, arg0: u32) -> u64;
    fn i32_as_i64(&mut self, arg0: i32) -> i64;
    fn i64_as_u64(&mut self, arg0: i64) -> u64;
    fn i64_neg(&mut self, arg0: i64) -> i64;
    fn i8_neg(&mut self, arg0: i8) -> i8;
    fn u128_as_u64(&mut self, arg0: u128) -> Option<u64>;
    fn u64_as_u32(&mut self, arg0: u64) -> Option<u32>;
    fn u32_as_u16(&mut self, arg0: u32) -> Option<u16>;
    fn i32_as_i8(&mut self, arg0: i32) -> Option<i8>;
    fn u64_as_i32(&mut self, arg0: u64) -> i32;
    fn u8_and(&mut self, arg0: u8, arg1: u8) -> u8;
    fn u8_shl(&mut self, arg0: u8, arg1: u8) -> u8;
    fn u8_shr(&mut self, arg0: u8, arg1: u8) -> u8;
    fn u8_sub(&mut self, arg0: u8, arg1: u8) -> u8;
    fn u32_add(&mut self, arg0: u32, arg1: u32) -> u32;
    fn u32_sub(&mut self, arg0: u32, arg1: u32) -> u32;
    fn u32_and(&mut self, arg0: u32, arg1: u32) -> u32;
    fn u32_shl(&mut self, arg0: u32, arg1: u32) -> u32;
    fn s32_add_fallible(&mut self, arg0: i32, arg1: i32) -> Option<i32>;
    fn u64_add(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_sub(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_mul(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_sdiv(&mut self, arg0: u64, arg1: u64) -> Option<u64>;
    fn u64_udiv(&mut self, arg0: u64, arg1: u64) -> Option<u64>;
    fn u64_and(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_or(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_xor(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_shl(&mut self, arg0: u64, arg1: u64) -> u64;
    fn imm64_shl(&mut self, arg0: Type, arg1: Imm64, arg2: Imm64) -> Imm64;
    fn imm64_ushr(&mut self, arg0: Type, arg1: Imm64, arg2: Imm64) -> Imm64;
    fn imm64_sshr(&mut self, arg0: Type, arg1: Imm64, arg2: Imm64) -> Imm64;
    fn u64_not(&mut self, arg0: u64) -> u64;
    fn u64_eq(&mut self, arg0: u64, arg1: u64) -> bool;
    fn u64_le(&mut self, arg0: u64, arg1: u64) -> bool;
    fn u64_lt(&mut self, arg0: u64, arg1: u64) -> bool;
    fn i64_shr(&mut self, arg0: i64, arg1: i64) -> i64;
    fn i64_ctz(&mut self, arg0: i64) -> i64;
    fn i64_sextend_u64(&mut self, arg0: Type, arg1: u64) -> i64;
    fn i64_sextend_imm64(&mut self, arg0: Type, arg1: Imm64) -> i64;
    fn u64_uextend_imm64(&mut self, arg0: Type, arg1: Imm64) -> u64;
    fn imm64_icmp(&mut self, arg0: Type, arg1: &IntCC, arg2: Imm64, arg3: Imm64) -> Imm64;
    fn u64_is_zero(&mut self, arg0: u64) -> bool;
    fn i64_is_zero(&mut self, arg0: i64) -> bool;
    fn u64_is_odd(&mut self, arg0: u64) -> bool;
    fn u128_replicated_u64(&mut self, arg0: u128) -> Option<u64>;
    fn u64_replicated_u32(&mut self, arg0: u64) -> Option<u64>;
    fn u32_replicated_u16(&mut self, arg0: u64) -> Option<u64>;
    fn u16_replicated_u8(&mut self, arg0: u64) -> Option<u8>;
    fn f16_min(&mut self, arg0: Ieee16, arg1: Ieee16) -> Option<Ieee16>;
    fn f16_max(&mut self, arg0: Ieee16, arg1: Ieee16) -> Option<Ieee16>;
    fn f16_neg(&mut self, arg0: Ieee16) -> Ieee16;
    fn f16_abs(&mut self, arg0: Ieee16) -> Ieee16;
    fn f16_copysign(&mut self, arg0: Ieee16, arg1: Ieee16) -> Ieee16;
    fn f32_add(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_sub(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_mul(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_div(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_sqrt(&mut self, arg0: Ieee32) -> Option<Ieee32>;
    fn f32_ceil(&mut self, arg0: Ieee32) -> Option<Ieee32>;
    fn f32_floor(&mut self, arg0: Ieee32) -> Option<Ieee32>;
    fn f32_trunc(&mut self, arg0: Ieee32) -> Option<Ieee32>;
    fn f32_nearest(&mut self, arg0: Ieee32) -> Option<Ieee32>;
    fn f32_min(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_max(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_neg(&mut self, arg0: Ieee32) -> Ieee32;
    fn f32_abs(&mut self, arg0: Ieee32) -> Ieee32;
    fn f32_copysign(&mut self, arg0: Ieee32, arg1: Ieee32) -> Ieee32;
    fn f64_add(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_sub(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_mul(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_div(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_sqrt(&mut self, arg0: Ieee64) -> Option<Ieee64>;
    fn f64_ceil(&mut self, arg0: Ieee64) -> Option<Ieee64>;
    fn f64_floor(&mut self, arg0: Ieee64) -> Option<Ieee64>;
    fn f64_trunc(&mut self, arg0: Ieee64) -> Option<Ieee64>;
    fn f64_nearest(&mut self, arg0: Ieee64) -> Option<Ieee64>;
    fn f64_min(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_max(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_neg(&mut self, arg0: Ieee64) -> Ieee64;
    fn f64_abs(&mut self, arg0: Ieee64) -> Ieee64;
    fn f64_copysign(&mut self, arg0: Ieee64, arg1: Ieee64) -> Ieee64;
    fn f128_min(&mut self, arg0: Ieee128, arg1: Ieee128) -> Option<Ieee128>;
    fn f128_max(&mut self, arg0: Ieee128, arg1: Ieee128) -> Option<Ieee128>;
    fn f128_neg(&mut self, arg0: Ieee128) -> Ieee128;
    fn f128_abs(&mut self, arg0: Ieee128) -> Ieee128;
    fn f128_copysign(&mut self, arg0: Ieee128, arg1: Ieee128) -> Ieee128;
    fn ty_umin(&mut self, arg0: Type) -> u64;
    fn ty_umax(&mut self, arg0: Type) -> u64;
    fn ty_smin(&mut self, arg0: Type) -> u64;
    fn ty_smax(&mut self, arg0: Type) -> u64;
    fn ty_bits(&mut self, arg0: Type) -> u8;
    fn ty_bits_u16(&mut self, arg0: Type) -> u16;
    fn ty_bits_u64(&mut self, arg0: Type) -> u64;
    fn ty_mask(&mut self, arg0: Type) -> u64;
    fn ty_lane_mask(&mut self, arg0: Type) -> u64;
    fn ty_lane_count(&mut self, arg0: Type) -> u64;
    fn ty_bytes(&mut self, arg0: Type) -> u16;
    fn lane_type(&mut self, arg0: Type) -> Type;
    fn ty_half_lanes(&mut self, arg0: Type) -> Option<Type>;
    fn ty_half_width(&mut self, arg0: Type) -> Option<Type>;
    fn ty_equal(&mut self, arg0: Type, arg1: Type) -> bool;
    fn mem_flags_trusted(&mut self, ) -> MemFlags;
    fn intcc_swap_args(&mut self, arg0: &IntCC) -> IntCC;
    fn intcc_complement(&mut self, arg0: &IntCC) -> IntCC;
    fn intcc_without_eq(&mut self, arg0: &IntCC) -> IntCC;
    fn floatcc_swap_args(&mut self, arg0: &FloatCC) -> FloatCC;
    fn floatcc_complement(&mut self, arg0: &FloatCC) -> FloatCC;
    fn floatcc_unordered(&mut self, arg0: &FloatCC) -> bool;
    fn fits_in_16(&mut self, arg0: Type) -> Option<Type>;
    fn fits_in_32(&mut self, arg0: Type) -> Option<Type>;
    fn lane_fits_in_32(&mut self, arg0: Type) -> Option<Type>;
    fn fits_in_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_32(&mut self, arg0: Type) -> Option<Type>;
    fn ty_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_int_ref_scalar_64_extract(&mut self, arg0: Type) -> Option<Type>;
    fn ty_int_ref_scalar_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_32_or_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_8_or_16(&mut self, arg0: Type) -> Option<Type>;
    fn ty_16_or_32(&mut self, arg0: Type) -> Option<Type>;
    fn int_fits_in_32(&mut self, arg0: Type) -> Option<Type>;
    fn ty_int_ref_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_int_ref_16_to_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_int(&mut self, arg0: Type) -> Option<Type>;
    fn ty_scalar(&mut self, arg0: Type) -> Option<Type>;
    fn ty_scalar_float(&mut self, arg0: Type) -> Option<Type>;
    fn ty_float_or_vec(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vector_float(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vector_not_float(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vec64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vec64_ctor(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vec128(&mut self, arg0: Type) -> Option<Type>;
    fn ty_dyn_vec64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_dyn_vec128(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vec64_int(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vec128_int(&mut self, arg0: Type) -> Option<Type>;
    fn ty_addr64(&mut self, arg0: Type) -> Option<Type>;
    fn not_vec32x2(&mut self, arg0: Type) -> Option<Type>;
    fn not_i64x2(&mut self, arg0: Type) -> Option<()>;
    fn u8_from_uimm8(&mut self, arg0: Uimm8) -> u8;
    fn u64_from_bool(&mut self, arg0: bool) -> u64;
    fn u64_from_imm64(&mut self, arg0: Imm64) -> u64;
    fn nonzero_u64_from_imm64(&mut self, arg0: Imm64) -> Option<u64>;
    fn imm64_power_of_two(&mut self, arg0: Imm64) -> Option<u64>;
    fn imm64(&mut self, arg0: u64) -> Imm64;
    fn imm64_masked(&mut self, arg0: Type, arg1: u64) -> Imm64;
    fn u16_from_ieee16(&mut self, arg0: Ieee16) -> u16;
    fn u32_from_ieee32(&mut self, arg0: Ieee32) -> u32;
    fn u64_from_ieee64(&mut self, arg0: Ieee64) -> u64;
    fn multi_lane(&mut self, arg0: Type) -> Option<(u32, u32)>;
    fn dynamic_lane(&mut self, arg0: Type) -> Option<(u32, u32)>;
    fn ty_dyn64_int(&mut self, arg0: Type) -> Option<Type>;
    fn ty_dyn128_int(&mut self, arg0: Type) -> Option<Type>;
    fn offset32_to_i32(&mut self, arg0: Offset32) -> i32;
    fn i32_to_offset32(&mut self, arg0: i32) -> Offset32;
    fn intcc_unsigned(&mut self, arg0: &IntCC) -> IntCC;
    fn signed_cond_code(&mut self, arg0: &IntCC) -> Option<IntCC>;
    fn trap_code_division_by_zero(&mut self, ) -> TrapCode;
    fn trap_code_integer_overflow(&mut self, ) -> TrapCode;
    fn trap_code_bad_conversion_to_integer(&mut self, ) -> TrapCode;
    fn range(&mut self, arg0: usize, arg1: usize) -> Range;
    fn range_view(&mut self, arg0: Range) -> RangeView;
    fn value_reg(&mut self, arg0: Reg) -> ValueRegs;
    fn writable_value_reg(&mut self, arg0: WritableReg) -> WritableValueRegs;
    fn value_regs(&mut self, arg0: Reg, arg1: Reg) -> ValueRegs;
    fn writable_value_regs(&mut self, arg0: WritableReg, arg1: WritableReg) -> WritableValueRegs;
    fn value_regs_invalid(&mut self, ) -> ValueRegs;
    fn output_none(&mut self, ) -> InstOutput;
    fn output(&mut self, arg0: ValueRegs) -> InstOutput;
    fn output_pair(&mut self, arg0: ValueRegs, arg1: ValueRegs) -> InstOutput;
    fn output_builder_new(&mut self, ) -> InstOutputBuilder;
    fn output_builder_push(&mut self, arg0: &InstOutputBuilder, arg1: ValueRegs) -> Unit;
    fn output_builder_finish(&mut self, arg0: &InstOutputBuilder) -> InstOutput;
    fn temp_writable_reg(&mut self, arg0: Type) -> WritableReg;
    fn is_valid_reg(&mut self, arg0: Reg) -> bool;
    fn invalid_reg(&mut self, ) -> Reg;
    fn mark_value_used(&mut self, arg0: Value) -> Unit;
    fn put_in_reg(&mut self, arg0: Value) -> Reg;
    fn put_in_regs(&mut self, arg0: Value) -> ValueRegs;
    fn ensure_in_vreg(&mut self, arg0: Reg, arg1: Type) -> Reg;
    fn value_regs_get(&mut self, arg0: ValueRegs, arg1: usize) -> Reg;
    fn value_regs_len(&mut self, arg0: ValueRegs) -> usize;
    fn preg_to_reg(&mut self, arg0: PReg) -> Reg;
    fn add_range_fact(&mut self, arg0: Reg, arg1: u16, arg2: u64, arg3: u64) -> Reg;
    fn single_target(&mut self, arg0: &MachLabelSlice) -> Option<MachLabel>;
    fn two_targets(&mut self, arg0: &MachLabelSlice) -> Option<(MachLabel, MachLabel)>;
    fn jump_table_targets(&mut self, arg0: &MachLabelSlice) -> Option<(MachLabel, BoxVecMachLabel)>;
    fn jump_table_size(&mut self, arg0: &BoxVecMachLabel) -> u32;
    fn value_list_slice(&mut self, arg0: ValueList) -> ValueSlice;
    fn value_slice_empty(&mut self, arg0: ValueSlice) -> Option<()>;
    fn value_slice_unwrap(&mut self, arg0: ValueSlice) -> Option<(Value, ValueSlice)>;
    fn value_slice_len(&mut self, arg0: ValueSlice) -> usize;
    fn value_slice_get(&mut self, arg0: ValueSlice, arg1: usize) -> Value;
    fn writable_reg_to_reg(&mut self, arg0: WritableReg) -> Reg;
    fn inst_results(&mut self, arg0: Inst) -> ValueSlice;
    fn value_is_unused(&mut self, arg0: Value) -> bool;
    fn first_result(&mut self, arg0: Inst) -> Option<Value>;
    fn inst_data(&mut self, arg0: Inst) -> InstructionData;
    fn def_inst(&mut self, arg0: Value) -> Option<Inst>;
    fn i32_from_iconst(&mut self, arg0: Value) -> Option<i32>;
    fn i64_from_iconst(&mut self, arg0: Value) -> Option<i64>;
    fn zero_value(&mut self, arg0: Value) -> Option<Value>;
    fn is_sinkable_inst(&mut self, arg0: Value) -> Option<Inst>;
    fn maybe_uextend(&mut self, arg0: Value) -> Option<Value>;
    fn uimm8(&mut self, arg0: Imm64) -> Option<u8>;
    fn emit(&mut self, arg0: &MInst) -> Unit;
    fn sink_inst(&mut self, arg0: Inst) -> Unit;
    fn emit_u64_le_const(&mut self, arg0: u64) -> VCodeConstant;
    fn emit_u128_le_const(&mut self, arg0: u128) -> VCodeConstant;
    fn const_to_vconst(&mut self, arg0: Constant) -> VCodeConstant;
    fn tls_model(&mut self, arg0: Type) -> TlsModel;
    fn tls_model_is_elf_gd(&mut self, ) -> Option<Unit>;
    fn tls_model_is_macho(&mut self, ) -> Option<Unit>;
    fn tls_model_is_coff(&mut self, ) -> Option<Unit>;
    fn preserve_frame_pointers(&mut self, ) -> Option<Unit>;
    fn stack_switch_model(&mut self, ) -> Option<StackSwitchModel>;
    fn box_external_name(&mut self, arg0: ExternalName) -> BoxExternalName;
    fn func_ref_data(&mut self, arg0: FuncRef) -> (SigRef, ExternalName, RelocDistance);
    fn symbol_value_data(&mut self, arg0: GlobalValue) -> Option<(ExternalName, RelocDistance, i64)>;
    fn reloc_distance_near(&mut self, arg0: RelocDistance) -> Option<()>;
    fn vec_mask_from_immediate(&mut self, arg0: Immediate) -> Option<VecMask>;
    fn u128_from_immediate(&mut self, arg0: Immediate) -> Option<u128>;
    fn vconst_from_immediate(&mut self, arg0: Immediate) -> Option<VCodeConstant>;
    fn u128_from_constant(&mut self, arg0: Constant) -> Option<u128>;
    fn u64_from_constant(&mut self, arg0: Constant) -> Option<u64>;
    fn shuffle64_from_imm(&mut self, arg0: Immediate) -> Option<(u8, u8)>;
    fn shuffle32_from_imm(&mut self, arg0: Immediate) -> Option<(u8, u8, u8, u8)>;
    fn shuffle16_from_imm(&mut self, arg0: Immediate) -> Option<(u8, u8, u8, u8, u8, u8, u8, u8)>;
    fn only_writable_reg(&mut self, arg0: WritableValueRegs) -> Option<WritableReg>;
    fn writable_regs_get(&mut self, arg0: WritableValueRegs, arg1: usize) -> WritableReg;
    fn abi_num_args(&mut self, arg0: Sig) -> usize;
    fn abi_get_arg(&mut self, arg0: Sig, arg1: usize) -> ABIArg;
    fn abi_num_rets(&mut self, arg0: Sig) -> usize;
    fn abi_get_ret(&mut self, arg0: Sig, arg1: usize) -> ABIArg;
    fn abi_ret_arg(&mut self, arg0: Sig) -> Option<ABIArg>;
    fn abi_no_ret_arg(&mut self, arg0: Sig) -> Option<()>;
    fn abi_unwrap_ret_area_ptr(&mut self, ) -> Reg;
    fn abi_stackslot_addr(&mut self, arg0: WritableReg, arg1: StackSlot, arg2: Offset32) -> MInst;
    fn abi_dynamic_stackslot_addr(&mut self, arg0: WritableReg, arg1: DynamicStackSlot) -> MInst;
    fn abi_arg_only_slot(&mut self, arg0: &ABIArg) -> Option<ABIArgSlot>;
    fn abi_arg_implicit_pointer(&mut self, arg0: &ABIArg) -> Option<(ABIArgSlot, i64, Type)>;
    fn real_reg_to_reg(&mut self, arg0: RealReg) -> Reg;
    fn real_reg_to_writable_reg(&mut self, arg0: RealReg) -> WritableReg;
    fn gen_move(&mut self, arg0: Type, arg1: WritableReg, arg2: Reg) -> MInst;
    fn gen_return(&mut self, arg0: ValueSlice) -> Unit;
    fn gen_return_call(&mut self, arg0: SigRef, arg1: ExternalName, arg2: RelocDistance, arg3: ValueSlice) -> InstOutput;
    fn gen_return_call_indirect(&mut self, arg0: SigRef, arg1: Value, arg2: ValueSlice) -> InstOutput;
    fn safe_divisor_from_imm64(&mut self, arg0: Type, arg1: Imm64) -> Option<u64>;
    fn cond_invert(&mut self, arg0: &Cond) -> Cond;
    fn endianness(&mut self, arg0: MemFlags) -> Endianness;
    fn is_native_endianness(&mut self, arg0: &Endianness) -> bool;
    fn pointer_width(&mut self, ) -> PointerWidth;
    fn memflags_nontrapping(&mut self, arg0: MemFlags) -> bool;
    fn memflags_is_wasm(&mut self, arg0: MemFlags) -> bool;
    fn g32_offset(&mut self, arg0: i32, arg1: Type, arg2: u64) -> Option<u16>;
    fn xreg_new(&mut self, arg0: Reg) -> XReg;
    fn writable_xreg_new(&mut self, arg0: WritableReg) -> WritableXReg;
    fn writable_xreg_to_xreg(&mut self, arg0: WritableXReg) -> XReg;
    fn writable_xreg_to_writable_reg(&mut self, arg0: WritableXReg) -> WritableReg;
    fn xreg_to_reg(&mut self, arg0: XReg) -> Reg;
    fn freg_new(&mut self, arg0: Reg) -> FReg;
    fn writable_freg_new(&mut self, arg0: WritableReg) -> WritableFReg;
    fn writable_freg_to_freg(&mut self, arg0: WritableFReg) -> FReg;
    fn writable_freg_to_writable_reg(&mut self, arg0: WritableFReg) -> WritableReg;
    fn freg_to_reg(&mut self, arg0: FReg) -> Reg;
    fn vreg_new(&mut self, arg0: Reg) -> VReg;
    fn writable_vreg_new(&mut self, arg0: WritableReg) -> WritableVReg;
    fn writable_vreg_to_vreg(&mut self, arg0: WritableVReg) -> VReg;
    fn writable_vreg_to_writable_reg(&mut self, arg0: WritableVReg) -> WritableReg;
    fn vreg_to_reg(&mut self, arg0: VReg) -> Reg;
    fn sp_reg(&mut self, ) -> XReg;
    fn gen_call(&mut self, arg0: SigRef, arg1: ExternalName, arg2: RelocDistance, arg3: ValueSlice) -> InstOutput;
    fn gen_call_indirect(&mut self, arg0: SigRef, arg1: Value, arg2: ValueSlice) -> InstOutput;
    fn u6_from_u8(&mut self, arg0: u8) -> Option<U6>;
    fn unpack_value_array_2(&mut self, arg0: &ValueArray2) -> (Value, Value);
    fn pack_value_array_2(&mut self, arg0: Value, arg1: Value) -> ValueArray2;
    fn unpack_value_array_3(&mut self, arg0: &ValueArray3) -> (Value, Value, Value);
    fn pack_value_array_3(&mut self, arg0: Value, arg1: Value, arg2: Value) -> ValueArray3;
    fn unpack_block_array_2(&mut self, arg0: &BlockArray2) -> (BlockCall, BlockCall);
    fn pack_block_array_2(&mut self, arg0: BlockCall, arg1: BlockCall) -> BlockArray2;
}

pub trait ContextIter {
    type Context;
    type Output;
    fn next(&mut self, ctx: &mut Self::Context) -> Option<Self::Output>;
    fn size_hint(&self) -> (usize, Option<usize>) { (0, None) }
}

pub trait IntoContextIter {
    type Context;
    type Output;
    type IntoIter: ContextIter<Context = Self::Context, Output = Self::Output>;
    fn into_context_iter(self) -> Self::IntoIter;
}

pub trait Length {
    fn len(&self) -> usize;
}

impl<T> Length for std::vec::Vec<T> {
    fn len(&self) -> usize {
        std::vec::Vec::len(self)
    }
}

pub struct ContextIterWrapper<I, C> {
    iter: I,
    _ctx: std::marker::PhantomData<C>,
}
impl<I: Default, C> Default for ContextIterWrapper<I, C> {
    fn default() -> Self {
        ContextIterWrapper {
            iter: I::default(),
            _ctx: std::marker::PhantomData
        }
    }
}
impl<I, C> std::ops::Deref for ContextIterWrapper<I, C> {
    type Target = I;
    fn deref(&self) -> &I {
        &self.iter
    }
}
impl<I, C> std::ops::DerefMut for ContextIterWrapper<I, C> {
    fn deref_mut(&mut self) -> &mut I {
        &mut self.iter
    }
}
impl<I: Iterator, C: Context> From<I> for ContextIterWrapper<I, C> {
    fn from(iter: I) -> Self {
        Self { iter, _ctx: std::marker::PhantomData }
    }
}
impl<I: Iterator, C: Context> ContextIter for ContextIterWrapper<I, C> {
    type Context = C;
    type Output = I::Item;
    fn next(&mut self, _ctx: &mut Self::Context) -> Option<Self::Output> {
        self.iter.next()
    }
    fn size_hint(&self) -> (usize, Option<usize>) {
        self.iter.size_hint()
    }
}
impl<I: IntoIterator, C: Context> IntoContextIter for ContextIterWrapper<I, C> {
    type Context = C;
    type Output = I::Item;
    type IntoIter = ContextIterWrapper<I::IntoIter, C>;
    fn into_context_iter(self) -> Self::IntoIter {
        ContextIterWrapper {
            iter: self.iter.into_iter(),
            _ctx: std::marker::PhantomData
        }
    }
}
impl<T, E: Extend<T>, C> Extend<T> for ContextIterWrapper<E, C> {
    fn extend<I: IntoIterator<Item = T>>(&mut self, iter: I) {
        self.iter.extend(iter);
    }
}
impl<L: Length, C> Length for ContextIterWrapper<L, C> {
    fn len(&self) -> usize {
        self.iter.len()
    }
}
           

/// Internal type MultiReg: defined at src/prelude_lower.isle line 20.
#[derive(Clone, Debug)]
pub enum MultiReg {
    Empty,
    One {
        a: Reg,
    },
    Two {
        a: Reg,
        b: Reg,
    },
    Three {
        a: Reg,
        b: Reg,
        c: Reg,
    },
    Four {
        a: Reg,
        b: Reg,
        c: Reg,
        d: Reg,
    },
}

/// Internal type SideEffectNoResult: defined at src/prelude_lower.isle line 430.
#[derive(Clone, Debug)]
pub enum SideEffectNoResult {
    Inst {
        inst: MInst,
    },
    Inst2 {
        inst1: MInst,
        inst2: MInst,
    },
    Inst3 {
        inst1: MInst,
        inst2: MInst,
        inst3: MInst,
    },
}

/// Internal type ProducesFlags: defined at src/prelude_lower.isle line 476.
#[derive(Clone, Debug)]
pub enum ProducesFlags {
    AlreadyExistingFlags,
    ProducesFlagsSideEffect {
        inst: MInst,
    },
    ProducesFlagsTwiceSideEffect {
        inst1: MInst,
        inst2: MInst,
    },
    ProducesFlagsReturnsReg {
        inst: MInst,
        result: Reg,
    },
    ProducesFlagsReturnsResultWithConsumer {
        inst: MInst,
        result: Reg,
    },
}

/// Internal type ConsumesAndProducesFlags: defined at src/prelude_lower.isle line 495.
#[derive(Clone, Debug)]
pub enum ConsumesAndProducesFlags {
    SideEffect {
        inst: MInst,
    },
    ReturnsReg {
        inst: MInst,
        result: Reg,
    },
}

/// Internal type ConsumesFlags: defined at src/prelude_lower.isle line 503.
#[derive(Clone, Debug)]
pub enum ConsumesFlags {
    ConsumesFlagsSideEffect {
        inst: MInst,
    },
    ConsumesFlagsSideEffect2 {
        inst1: MInst,
        inst2: MInst,
    },
    ConsumesFlagsReturnsResultWithProducer {
        inst: MInst,
        result: Reg,
    },
    ConsumesFlagsReturnsReg {
        inst: MInst,
        result: Reg,
    },
    ConsumesFlagsTwiceReturnsValueRegs {
        inst1: MInst,
        inst2: MInst,
        result: ValueRegs,
    },
    ConsumesFlagsFourTimesReturnsValueRegs {
        inst1: MInst,
        inst2: MInst,
        inst3: MInst,
        inst4: MInst,
        result: ValueRegs,
    },
}

/// Internal type MInst: defined at src/isa/pulley_shared/inst.isle line 10.
#[derive(Clone, Debug)]
pub enum MInst {
    Args {
        args: VecArgPair,
    },
    Rets {
        rets: VecRetPair,
    },
    DummyUse {
        reg: Reg,
    },
    BrTable {
        idx: XReg,
        default: MachLabel,
        targets: BoxVecMachLabel,
    },
    TrapIf {
        cond: Cond,
        code: TrapCode,
    },
    Nop,
    GetSpecial {
        dst: WritableXReg,
        reg: XReg,
    },
    LoadExtName {
        dst: WritableXReg,
        name: BoxExternalName,
        offset: i64,
    },
    Call {
        info: BoxCallInfo,
    },
    IndirectCall {
        info: BoxCallIndInfo,
    },
    ReturnCall {
        info: BoxReturnCallInfo,
    },
    ReturnIndirectCall {
        info: BoxReturnCallIndInfo,
    },
    IndirectCallHost {
        info: BoxCallIndirectHostInfo,
    },
    Jump {
        label: MachLabel,
    },
    BrIf {
        cond: Cond,
        taken: MachLabel,
        not_taken: MachLabel,
    },
    LoadAddr {
        dst: WritableXReg,
        mem: Amode,
    },
    XLoad {
        dst: WritableXReg,
        mem: Amode,
        ty: Type,
        flags: MemFlags,
    },
    FLoad {
        dst: WritableFReg,
        mem: Amode,
        ty: Type,
        flags: MemFlags,
    },
    VLoad {
        dst: WritableVReg,
        mem: Amode,
        ty: Type,
        flags: MemFlags,
    },
    XStore {
        mem: Amode,
        src: XReg,
        ty: Type,
        flags: MemFlags,
    },
    FStore {
        mem: Amode,
        src: FReg,
        ty: Type,
        flags: MemFlags,
    },
    VStore {
        mem: Amode,
        src: VReg,
        ty: Type,
        flags: MemFlags,
    },
    Raw {
        raw: RawInst,
    },
}

/// Internal type Cond: defined at src/isa/pulley_shared/inst.isle line 98.
#[derive(Clone, Debug)]
pub enum Cond {
    If32 {
        reg: XReg,
    },
    IfNot32 {
        reg: XReg,
    },
    IfXeq32 {
        src1: XReg,
        src2: XReg,
    },
    IfXneq32 {
        src1: XReg,
        src2: XReg,
    },
    IfXslt32 {
        src1: XReg,
        src2: XReg,
    },
    IfXslteq32 {
        src1: XReg,
        src2: XReg,
    },
    IfXult32 {
        src1: XReg,
        src2: XReg,
    },
    IfXulteq32 {
        src1: XReg,
        src2: XReg,
    },
    IfXeq32I32 {
        src1: XReg,
        src2: i32,
    },
    IfXneq32I32 {
        src1: XReg,
        src2: i32,
    },
    IfXslt32I32 {
        src1: XReg,
        src2: i32,
    },
    IfXslteq32I32 {
        src1: XReg,
        src2: i32,
    },
    IfXult32I32 {
        src1: XReg,
        src2: u32,
    },
    IfXulteq32I32 {
        src1: XReg,
        src2: u32,
    },
    IfXsgt32I32 {
        src1: XReg,
        src2: i32,
    },
    IfXsgteq32I32 {
        src1: XReg,
        src2: i32,
    },
    IfXugt32I32 {
        src1: XReg,
        src2: u32,
    },
    IfXugteq32I32 {
        src1: XReg,
        src2: u32,
    },
    IfXeq64 {
        src1: XReg,
        src2: XReg,
    },
    IfXneq64 {
        src1: XReg,
        src2: XReg,
    },
    IfXslt64 {
        src1: XReg,
        src2: XReg,
    },
    IfXslteq64 {
        src1: XReg,
        src2: XReg,
    },
    IfXult64 {
        src1: XReg,
        src2: XReg,
    },
    IfXulteq64 {
        src1: XReg,
        src2: XReg,
    },
    IfXeq64I32 {
        src1: XReg,
        src2: i32,
    },
    IfXneq64I32 {
        src1: XReg,
        src2: i32,
    },
    IfXslt64I32 {
        src1: XReg,
        src2: i32,
    },
    IfXslteq64I32 {
        src1: XReg,
        src2: i32,
    },
    IfXult64I32 {
        src1: XReg,
        src2: u32,
    },
    IfXulteq64I32 {
        src1: XReg,
        src2: u32,
    },
    IfXsgt64I32 {
        src1: XReg,
        src2: i32,
    },
    IfXsgteq64I32 {
        src1: XReg,
        src2: i32,
    },
    IfXugt64I32 {
        src1: XReg,
        src2: u32,
    },
    IfXugteq64I32 {
        src1: XReg,
        src2: u32,
    },
}

/// Internal type ExtKind: defined at src/isa/pulley_shared/inst.isle line 162.
#[derive(Copy, Clone, PartialEq, Eq, Debug)]
pub enum ExtKind {
    None,
    Sign32,
    Sign64,
    Zero32,
    Zero64,
}

/// Internal type VExtKind: defined at src/isa/pulley_shared/inst.isle line 163.
#[derive(Copy, Clone, PartialEq, Eq, Debug)]
pub enum VExtKind {
    None,
    S8x8,
    U8x8,
    S16x4,
    U16x4,
    S32x2,
    U32x2,
}

/// Internal type ValueOffset: defined at src/isa/pulley_shared/inst.isle line 171.
#[derive(Clone, Debug)]
pub enum ValueOffset {
    Both {
        value: Value,
        offset: i32,
    },
}

/// Internal type Amode: defined at src/isa/pulley_shared/inst.isle line 180.
#[derive(Clone, Debug)]
pub enum Amode {
    SpOffset {
        offset: i32,
    },
    RegOffset {
        base: XReg,
        offset: i32,
    },
    Stack {
        amode: StackAMode,
    },
}

/// Internal type AddrO32: defined at src/isa/pulley_shared/inst.isle line 194.
#[derive(Clone, Debug)]
pub enum AddrO32 {
    Base {
        addr: XReg,
        offset: i32,
    },
}

/// Internal type AddrZ: defined at src/isa/pulley_shared/inst.isle line 207.
#[derive(Clone, Debug)]
pub enum AddrZ {
    Base {
        addr: XReg,
        offset: i32,
    },
}

/// Internal type AddrG32: defined at src/isa/pulley_shared/inst.isle line 220.
#[derive(Clone, Debug)]
pub enum AddrG32 {
    RegisterBound {
        host_heap_base: XReg,
        host_heap_bound: XReg,
        wasm_addr: XReg,
        offset: u16,
    },
}

/// Internal type AddrG32Bne: defined at src/isa/pulley_shared/inst.isle line 229.
#[derive(Clone, Debug)]
pub enum AddrG32Bne {
    BoundNe {
        host_heap_base: XReg,
        host_heap_bound_addr: XReg,
        host_heap_bound_offset: u8,
        wasm_addr: XReg,
        offset: u8,
    },
}

/// Internal type SinkableLoad: defined at src/isa/pulley_shared/inst.isle line 259.
#[derive(Clone, Debug)]
pub enum SinkableLoad {
    Load {
        inst: Inst,
        ty: Type,
        addr: Value,
        offset: u8,
    },
}

/// Internal type SunkLoad: defined at src/isa/pulley_shared/inst.isle line 274.
#[derive(Clone, Debug)]
pub enum SunkLoad {
    Load {
        ty: Type,
        addr: Value,
        offset: u8,
    },
}

/// Internal type G32: defined at src/isa/pulley_shared/inst.isle line 294.
#[derive(Clone, Debug)]
pub enum G32 {
    All {
        heap_base: Value,
        heap_bound: Value,
        wasm_addr: Value,
        offset: u16,
    },
}

/// Internal type G32Bne: defined at src/isa/pulley_shared/inst.isle line 303.
#[derive(Clone, Debug)]
pub enum G32Bne {
    All {
        heap_base: Value,
        heap_bound: SinkableLoad,
        wasm_addr: Value,
        offset: u8,
    },
}

/// Internal type HostOffset: defined at src/isa/pulley_shared/inst.isle line 371.
#[derive(Clone, Debug)]
pub enum HostOffset {
    All {
        a: Value,
        b: i32,
    },
}

/// Internal type OobSelect: defined at src/isa/pulley_shared/inst.isle line 380.
#[derive(Clone, Debug)]
pub enum OobSelect {
    All {
        a: Value,
        b: Value,
        c: Value,
        d: u64,
    },
}

/// Internal type OobCond: defined at src/isa/pulley_shared/inst.isle line 418.
#[derive(Clone, Debug)]
pub enum OobCond {
    All {
        a: Value,
        b: u64,
    },
}

/// Internal type RawInst: defined at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 0.
#[derive(Clone, Debug)]
pub enum RawInst {
    Ret,
    XJump {
        reg: XReg,
    },
    Xmov {
        dst: WritableXReg,
        src: XReg,
    },
    Xzero {
        dst: WritableXReg,
    },
    Xone {
        dst: WritableXReg,
    },
    Xconst8 {
        dst: WritableXReg,
        imm: i8,
    },
    Xconst16 {
        dst: WritableXReg,
        imm: i16,
    },
    Xconst32 {
        dst: WritableXReg,
        imm: i32,
    },
    Xconst64 {
        dst: WritableXReg,
        imm: i64,
    },
    Xadd32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xadd32U8 {
        dst: WritableXReg,
        src1: XReg,
        src2: u8,
    },
    Xadd32U32 {
        dst: WritableXReg,
        src1: XReg,
        src2: u32,
    },
    Xadd64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xadd64U8 {
        dst: WritableXReg,
        src1: XReg,
        src2: u8,
    },
    Xadd64U32 {
        dst: WritableXReg,
        src1: XReg,
        src2: u32,
    },
    Xmadd32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
        src3: XReg,
    },
    Xmadd64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
        src3: XReg,
    },
    Xsub32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xsub32U8 {
        dst: WritableXReg,
        src1: XReg,
        src2: u8,
    },
    Xsub32U32 {
        dst: WritableXReg,
        src1: XReg,
        src2: u32,
    },
    Xsub64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xsub64U8 {
        dst: WritableXReg,
        src1: XReg,
        src2: u8,
    },
    Xsub64U32 {
        dst: WritableXReg,
        src1: XReg,
        src2: u32,
    },
    XMul32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmul32S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xmul32S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    XMul64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmul64S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xmul64S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    Xctz32 {
        dst: WritableXReg,
        src: XReg,
    },
    Xctz64 {
        dst: WritableXReg,
        src: XReg,
    },
    Xclz32 {
        dst: WritableXReg,
        src: XReg,
    },
    Xclz64 {
        dst: WritableXReg,
        src: XReg,
    },
    Xpopcnt32 {
        dst: WritableXReg,
        src: XReg,
    },
    Xpopcnt64 {
        dst: WritableXReg,
        src: XReg,
    },
    Xrotl32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xrotl64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xrotr32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xrotr64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshl32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshr32S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshr32U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshl64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshr64S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshr64U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshl32U6 {
        dst: WritableXReg,
        src1: XReg,
        src2: U6,
    },
    Xshr32SU6 {
        dst: WritableXReg,
        src1: XReg,
        src2: U6,
    },
    Xshr32UU6 {
        dst: WritableXReg,
        src1: XReg,
        src2: U6,
    },
    Xshl64U6 {
        dst: WritableXReg,
        src1: XReg,
        src2: U6,
    },
    Xshr64SU6 {
        dst: WritableXReg,
        src1: XReg,
        src2: U6,
    },
    Xshr64UU6 {
        dst: WritableXReg,
        src1: XReg,
        src2: U6,
    },
    Xneg32 {
        dst: WritableXReg,
        src: XReg,
    },
    Xneg64 {
        dst: WritableXReg,
        src: XReg,
    },
    Xeq64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xneq64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xslt64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xslteq64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xult64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xulteq64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xeq32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xneq32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xslt32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xslteq32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xult32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xulteq32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XLoad8U32O32 {
        dst: WritableXReg,
        addr: AddrO32,
    },
    XLoad8S32O32 {
        dst: WritableXReg,
        addr: AddrO32,
    },
    XLoad16LeU32O32 {
        dst: WritableXReg,
        addr: AddrO32,
    },
    XLoad16LeS32O32 {
        dst: WritableXReg,
        addr: AddrO32,
    },
    XLoad32LeO32 {
        dst: WritableXReg,
        addr: AddrO32,
    },
    XLoad64LeO32 {
        dst: WritableXReg,
        addr: AddrO32,
    },
    XStore8O32 {
        addr: AddrO32,
        src: XReg,
    },
    XStore16LeO32 {
        addr: AddrO32,
        src: XReg,
    },
    XStore32LeO32 {
        addr: AddrO32,
        src: XReg,
    },
    XStore64LeO32 {
        addr: AddrO32,
        src: XReg,
    },
    XLoad8U32Z {
        dst: WritableXReg,
        addr: AddrZ,
    },
    XLoad8S32Z {
        dst: WritableXReg,
        addr: AddrZ,
    },
    XLoad16LeU32Z {
        dst: WritableXReg,
        addr: AddrZ,
    },
    XLoad16LeS32Z {
        dst: WritableXReg,
        addr: AddrZ,
    },
    XLoad32LeZ {
        dst: WritableXReg,
        addr: AddrZ,
    },
    XLoad64LeZ {
        dst: WritableXReg,
        addr: AddrZ,
    },
    XStore8Z {
        addr: AddrZ,
        src: XReg,
    },
    XStore16LeZ {
        addr: AddrZ,
        src: XReg,
    },
    XStore32LeZ {
        addr: AddrZ,
        src: XReg,
    },
    XStore64LeZ {
        addr: AddrZ,
        src: XReg,
    },
    XLoad8U32G32 {
        dst: WritableXReg,
        addr: AddrG32,
    },
    XLoad8S32G32 {
        dst: WritableXReg,
        addr: AddrG32,
    },
    XLoad16LeU32G32 {
        dst: WritableXReg,
        addr: AddrG32,
    },
    XLoad16LeS32G32 {
        dst: WritableXReg,
        addr: AddrG32,
    },
    XLoad32LeG32 {
        dst: WritableXReg,
        addr: AddrG32,
    },
    XLoad64LeG32 {
        dst: WritableXReg,
        addr: AddrG32,
    },
    XStore8G32 {
        addr: AddrG32,
        src: XReg,
    },
    XStore16LeG32 {
        addr: AddrG32,
        src: XReg,
    },
    XStore32LeG32 {
        addr: AddrG32,
        src: XReg,
    },
    XStore64LeG32 {
        addr: AddrG32,
        src: XReg,
    },
    XLoad8U32G32Bne {
        dst: WritableXReg,
        addr: AddrG32Bne,
    },
    XLoad8S32G32Bne {
        dst: WritableXReg,
        addr: AddrG32Bne,
    },
    XLoad16LeU32G32Bne {
        dst: WritableXReg,
        addr: AddrG32Bne,
    },
    XLoad16LeS32G32Bne {
        dst: WritableXReg,
        addr: AddrG32Bne,
    },
    XLoad32LeG32Bne {
        dst: WritableXReg,
        addr: AddrG32Bne,
    },
    XLoad64LeG32Bne {
        dst: WritableXReg,
        addr: AddrG32Bne,
    },
    XStore8G32Bne {
        addr: AddrG32Bne,
        src: XReg,
    },
    XStore16LeG32Bne {
        addr: AddrG32Bne,
        src: XReg,
    },
    XStore32LeG32Bne {
        addr: AddrG32Bne,
        src: XReg,
    },
    XStore64LeG32Bne {
        addr: AddrG32Bne,
        src: XReg,
    },
    PushFrame,
    PopFrame,
    PushFrameSave {
        amt: u16,
        regs: UpperXRegSet,
    },
    PopFrameRestore {
        amt: u16,
        regs: UpperXRegSet,
    },
    StackAlloc32 {
        amt: u32,
    },
    StackFree32 {
        amt: u32,
    },
    Zext8 {
        dst: WritableXReg,
        src: XReg,
    },
    Zext16 {
        dst: WritableXReg,
        src: XReg,
    },
    Zext32 {
        dst: WritableXReg,
        src: XReg,
    },
    Sext8 {
        dst: WritableXReg,
        src: XReg,
    },
    Sext16 {
        dst: WritableXReg,
        src: XReg,
    },
    Sext32 {
        dst: WritableXReg,
        src: XReg,
    },
    XAbs32 {
        dst: WritableXReg,
        src: XReg,
    },
    XAbs64 {
        dst: WritableXReg,
        src: XReg,
    },
    XDiv32S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XDiv64S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XDiv32U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XDiv64U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XRem32S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XRem64S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XRem32U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XRem64U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XBand32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xband32S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xband32S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    XBand64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xband64S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xband64S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    XBor32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xbor32S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xbor32S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    XBor64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xbor64S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xbor64S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    XBxor32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xbxor32S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xbxor32S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    XBxor64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xbxor64S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xbxor64S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    XBnot32 {
        dst: WritableXReg,
        src: XReg,
    },
    XBnot64 {
        dst: WritableXReg,
        src: XReg,
    },
    Xmin32U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmin32S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmax32U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmax32S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmin64U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmin64S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmax64U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmax64S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XSelect32 {
        dst: WritableXReg,
        cond: XReg,
        if_nonzero: XReg,
        if_zero: XReg,
    },
    XSelect64 {
        dst: WritableXReg,
        cond: XReg,
        if_nonzero: XReg,
        if_zero: XReg,
    },
    Trap {
        code: TrapCode,
    },
    Nop,
    XmovFp {
        dst: WritableXReg,
    },
    XmovLr {
        dst: WritableXReg,
    },
    Bswap32 {
        dst: WritableXReg,
        src: XReg,
    },
    Bswap64 {
        dst: WritableXReg,
        src: XReg,
    },
    Xadd32UoverflowTrap {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
        code: TrapCode,
    },
    Xadd64UoverflowTrap {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
        code: TrapCode,
    },
    XMulHi64S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XMulHi64U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xbmask32 {
        dst: WritableXReg,
        src: XReg,
    },
    Xbmask64 {
        dst: WritableXReg,
        src: XReg,
    },
    XLoad16BeU32O32 {
        dst: WritableXReg,
        addr: AddrO32,
    },
    XLoad16BeS32O32 {
        dst: WritableXReg,
        addr: AddrO32,
    },
    XLoad32BeO32 {
        dst: WritableXReg,
        addr: AddrO32,
    },
    XLoad64BeO32 {
        dst: WritableXReg,
        addr: AddrO32,
    },
    XStore16BeO32 {
        addr: AddrO32,
        src: XReg,
    },
    XStore32BeO32 {
        addr: AddrO32,
        src: XReg,
    },
    XStore64BeO32 {
        addr: AddrO32,
        src: XReg,
    },
    Fload32BeO32 {
        dst: WritableFReg,
        addr: AddrO32,
    },
    Fload64BeO32 {
        dst: WritableFReg,
        addr: AddrO32,
    },
    Fstore32BeO32 {
        addr: AddrO32,
        src: FReg,
    },
    Fstore64BeO32 {
        addr: AddrO32,
        src: FReg,
    },
    Fload32LeO32 {
        dst: WritableFReg,
        addr: AddrO32,
    },
    Fload64LeO32 {
        dst: WritableFReg,
        addr: AddrO32,
    },
    Fstore32LeO32 {
        addr: AddrO32,
        src: FReg,
    },
    Fstore64LeO32 {
        addr: AddrO32,
        src: FReg,
    },
    Fload32LeZ {
        dst: WritableFReg,
        addr: AddrZ,
    },
    Fload64LeZ {
        dst: WritableFReg,
        addr: AddrZ,
    },
    Fstore32LeZ {
        addr: AddrZ,
        src: FReg,
    },
    Fstore64LeZ {
        addr: AddrZ,
        src: FReg,
    },
    Fload32LeG32 {
        dst: WritableFReg,
        addr: AddrG32,
    },
    Fload64LeG32 {
        dst: WritableFReg,
        addr: AddrG32,
    },
    Fstore32LeG32 {
        addr: AddrG32,
        src: FReg,
    },
    Fstore64LeG32 {
        addr: AddrG32,
        src: FReg,
    },
    VLoad128O32 {
        dst: WritableVReg,
        addr: AddrO32,
    },
    Vstore128LeO32 {
        addr: AddrO32,
        src: VReg,
    },
    VLoad128Z {
        dst: WritableVReg,
        addr: AddrZ,
    },
    Vstore128LeZ {
        addr: AddrZ,
        src: VReg,
    },
    VLoad128G32 {
        dst: WritableVReg,
        addr: AddrG32,
    },
    Vstore128LeG32 {
        addr: AddrG32,
        src: VReg,
    },
    Fmov {
        dst: WritableFReg,
        src: FReg,
    },
    Vmov {
        dst: WritableVReg,
        src: VReg,
    },
    BitcastIntFromFloat32 {
        dst: WritableXReg,
        src: FReg,
    },
    BitcastIntFromFloat64 {
        dst: WritableXReg,
        src: FReg,
    },
    BitcastFloatFromInt32 {
        dst: WritableFReg,
        src: XReg,
    },
    BitcastFloatFromInt64 {
        dst: WritableFReg,
        src: XReg,
    },
    FConst32 {
        dst: WritableFReg,
        bits: u32,
    },
    FConst64 {
        dst: WritableFReg,
        bits: u64,
    },
    Feq32 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Fneq32 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Flt32 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Flteq32 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Feq64 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Fneq64 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Flt64 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Flteq64 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    FSelect32 {
        dst: WritableFReg,
        cond: XReg,
        if_nonzero: FReg,
        if_zero: FReg,
    },
    FSelect64 {
        dst: WritableFReg,
        cond: XReg,
        if_nonzero: FReg,
        if_zero: FReg,
    },
    F32FromF64 {
        dst: WritableFReg,
        src: FReg,
    },
    F64FromF32 {
        dst: WritableFReg,
        src: FReg,
    },
    F32FromX32S {
        dst: WritableFReg,
        src: XReg,
    },
    F32FromX32U {
        dst: WritableFReg,
        src: XReg,
    },
    F32FromX64S {
        dst: WritableFReg,
        src: XReg,
    },
    F32FromX64U {
        dst: WritableFReg,
        src: XReg,
    },
    F64FromX32S {
        dst: WritableFReg,
        src: XReg,
    },
    F64FromX32U {
        dst: WritableFReg,
        src: XReg,
    },
    F64FromX64S {
        dst: WritableFReg,
        src: XReg,
    },
    F64FromX64U {
        dst: WritableFReg,
        src: XReg,
    },
    X32FromF32S {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF32U {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF64S {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF64U {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF32S {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF32U {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF64S {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF64U {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF32SSat {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF32USat {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF64SSat {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF64USat {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF32SSat {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF32USat {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF64SSat {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF64USat {
        dst: WritableXReg,
        src: FReg,
    },
    FCopySign32 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    FCopySign64 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Fadd32 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Fsub32 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Vsubf32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Fmul32 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Vmulf32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Fdiv32 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Vdivf32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Fmaximum32 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Fminimum32 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Ftrunc32 {
        dst: WritableFReg,
        src: FReg,
    },
    Vtrunc32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vtrunc64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Ffloor32 {
        dst: WritableFReg,
        src: FReg,
    },
    Vfloor32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vfloor64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Fceil32 {
        dst: WritableFReg,
        src: FReg,
    },
    Vceil32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vceil64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Fnearest32 {
        dst: WritableFReg,
        src: FReg,
    },
    Fsqrt32 {
        dst: WritableFReg,
        src: FReg,
    },
    Vsqrt32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vsqrt64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Fneg32 {
        dst: WritableFReg,
        src: FReg,
    },
    Vnegf32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Fabs32 {
        dst: WritableFReg,
        src: FReg,
    },
    Fadd64 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Fsub64 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Fmul64 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Fdiv64 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    VDivF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Fmaximum64 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Fminimum64 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Ftrunc64 {
        dst: WritableFReg,
        src: FReg,
    },
    Ffloor64 {
        dst: WritableFReg,
        src: FReg,
    },
    Fceil64 {
        dst: WritableFReg,
        src: FReg,
    },
    Fnearest64 {
        dst: WritableFReg,
        src: FReg,
    },
    Vnearest32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vnearest64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Fsqrt64 {
        dst: WritableFReg,
        src: FReg,
    },
    Fneg64 {
        dst: WritableFReg,
        src: FReg,
    },
    Fabs64 {
        dst: WritableFReg,
        src: FReg,
    },
    Vconst128 {
        dst: WritableVReg,
        imm: u128,
    },
    VAddI8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddI16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddI32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddI64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddF32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddI8x16Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddU8x16Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddI16x8Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddU16x8Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddpairwiseI16x8S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddpairwiseI32x4S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VShlI8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShlI16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShlI32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShlI64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI8x16S {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI16x8S {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI32x4S {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI64x2S {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI8x16U {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI16x8U {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI32x4U {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI64x2U {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VSplatX8 {
        dst: WritableVReg,
        src: XReg,
    },
    VSplatX16 {
        dst: WritableVReg,
        src: XReg,
    },
    VSplatX32 {
        dst: WritableVReg,
        src: XReg,
    },
    VSplatX64 {
        dst: WritableVReg,
        src: XReg,
    },
    VSplatF32 {
        dst: WritableVReg,
        src: FReg,
    },
    VSplatF64 {
        dst: WritableVReg,
        src: FReg,
    },
    VLoad8x8SZ {
        dst: WritableVReg,
        addr: AddrZ,
    },
    VLoad8x8UZ {
        dst: WritableVReg,
        addr: AddrZ,
    },
    VLoad16x4LeSZ {
        dst: WritableVReg,
        addr: AddrZ,
    },
    VLoad16x4LeUZ {
        dst: WritableVReg,
        addr: AddrZ,
    },
    VLoad32x2LeSZ {
        dst: WritableVReg,
        addr: AddrZ,
    },
    VLoad32x2LeUZ {
        dst: WritableVReg,
        addr: AddrZ,
    },
    VBand128 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VBor128 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VBxor128 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VBnot128 {
        dst: WritableVReg,
        src: VReg,
    },
    VBitselect128 {
        dst: WritableVReg,
        c: VReg,
        x: VReg,
        y: VReg,
    },
    Vbitmask8x16 {
        dst: WritableXReg,
        src: VReg,
    },
    Vbitmask16x8 {
        dst: WritableXReg,
        src: VReg,
    },
    Vbitmask32x4 {
        dst: WritableXReg,
        src: VReg,
    },
    Vbitmask64x2 {
        dst: WritableXReg,
        src: VReg,
    },
    Valltrue8x16 {
        dst: WritableXReg,
        src: VReg,
    },
    Valltrue16x8 {
        dst: WritableXReg,
        src: VReg,
    },
    Valltrue32x4 {
        dst: WritableXReg,
        src: VReg,
    },
    Valltrue64x2 {
        dst: WritableXReg,
        src: VReg,
    },
    Vanytrue8x16 {
        dst: WritableXReg,
        src: VReg,
    },
    Vanytrue16x8 {
        dst: WritableXReg,
        src: VReg,
    },
    Vanytrue32x4 {
        dst: WritableXReg,
        src: VReg,
    },
    Vanytrue64x2 {
        dst: WritableXReg,
        src: VReg,
    },
    VF32x4FromI32x4S {
        dst: WritableVReg,
        src: VReg,
    },
    VF32x4FromI32x4U {
        dst: WritableVReg,
        src: VReg,
    },
    VF64x2FromI64x2S {
        dst: WritableVReg,
        src: VReg,
    },
    VF64x2FromI64x2U {
        dst: WritableVReg,
        src: VReg,
    },
    VI32x4FromF32x4S {
        dst: WritableVReg,
        src: VReg,
    },
    VI32x4FromF32x4U {
        dst: WritableVReg,
        src: VReg,
    },
    VI64x2FromF64x2S {
        dst: WritableVReg,
        src: VReg,
    },
    VI64x2FromF64x2U {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenLow8x16S {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenLow8x16U {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenLow16x8S {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenLow16x8U {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenLow32x4S {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenLow32x4U {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenHigh8x16S {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenHigh8x16U {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenHigh16x8S {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenHigh16x8U {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenHigh32x4S {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenHigh32x4U {
        dst: WritableVReg,
        src: VReg,
    },
    Vnarrow16x8S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vnarrow16x8U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vnarrow32x4S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vnarrow32x4U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vnarrow64x2S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vnarrow64x2U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vunarrow64x2U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VFpromoteLow {
        dst: WritableVReg,
        src: VReg,
    },
    VFdemote {
        dst: WritableVReg,
        src: VReg,
    },
    VSubI8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubI16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubI32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubI64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubI8x16Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubU8x16Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubI16x8Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubU16x8Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VMulI8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VMulI16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VMulI32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VMulI64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VMulF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VQmulrsI16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VPopcnt8x16 {
        dst: WritableVReg,
        src: VReg,
    },
    XExtractV8x16 {
        dst: WritableXReg,
        src: VReg,
        lane: u8,
    },
    XExtractV16x8 {
        dst: WritableXReg,
        src: VReg,
        lane: u8,
    },
    XExtractV32x4 {
        dst: WritableXReg,
        src: VReg,
        lane: u8,
    },
    XExtractV64x2 {
        dst: WritableXReg,
        src: VReg,
        lane: u8,
    },
    FExtractV32x4 {
        dst: WritableFReg,
        src: VReg,
        lane: u8,
    },
    FExtractV64x2 {
        dst: WritableFReg,
        src: VReg,
        lane: u8,
    },
    VInsertX8 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
        lane: u8,
    },
    VInsertX16 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
        lane: u8,
    },
    VInsertX32 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
        lane: u8,
    },
    VInsertX64 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
        lane: u8,
    },
    VInsertF32 {
        dst: WritableVReg,
        src1: VReg,
        src2: FReg,
        lane: u8,
    },
    VInsertF64 {
        dst: WritableVReg,
        src1: VReg,
        src2: FReg,
        lane: u8,
    },
    Veq8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vneq8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslt8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslteq8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vult8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vulteq8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Veq16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vneq16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslt16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslteq16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vult16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vulteq16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Veq32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vneq32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslt32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslteq32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vult32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vulteq32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Veq64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vneq64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslt64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslteq64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vult64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vulteq64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vneg8x16 {
        dst: WritableVReg,
        src: VReg,
    },
    Vneg16x8 {
        dst: WritableVReg,
        src: VReg,
    },
    Vneg32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vneg64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    VnegF64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Vmin8x16S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmin8x16U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmin16x8S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmin16x8U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmax8x16S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmax8x16U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmax16x8S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmax16x8U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmin32x4S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmin32x4U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmax32x4S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmax32x4U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vabs8x16 {
        dst: WritableVReg,
        src: VReg,
    },
    Vabs16x8 {
        dst: WritableVReg,
        src: VReg,
    },
    Vabs32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vabs64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Vabsf32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vabsf64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Vmaximumf32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmaximumf64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vminimumf32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vminimumf64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VShuffle {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
        mask: u128,
    },
    Vswizzlei8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vavground8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vavground16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VeqF32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VneqF32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VltF32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VlteqF32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VeqF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VneqF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VltF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VlteqF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vfma32x4 {
        dst: WritableVReg,
        a: VReg,
        b: VReg,
        c: VReg,
    },
    Vfma64x2 {
        dst: WritableVReg,
        a: VReg,
        b: VReg,
        c: VReg,
    },
    Vselect {
        dst: WritableVReg,
        cond: XReg,
        if_nonzero: VReg,
        if_zero: VReg,
    },
    Xadd128 {
        dst_lo: WritableXReg,
        dst_hi: WritableXReg,
        lhs_lo: XReg,
        lhs_hi: XReg,
        rhs_lo: XReg,
        rhs_hi: XReg,
    },
    Xsub128 {
        dst_lo: WritableXReg,
        dst_hi: WritableXReg,
        lhs_lo: XReg,
        lhs_hi: XReg,
        rhs_lo: XReg,
        rhs_hi: XReg,
    },
    Xwidemul64S {
        dst_lo: WritableXReg,
        dst_hi: WritableXReg,
        lhs: XReg,
        rhs: XReg,
    },
    Xwidemul64U {
        dst_lo: WritableXReg,
        dst_hi: WritableXReg,
        lhs: XReg,
        rhs: XReg,
    },
}

// Generated as internal constructor for term ty_shift_mask.
pub fn constructor_ty_shift_mask<C: Context>(
    ctx: &mut C,
    arg0: Type,
) -> u64 {
    let v1 = C::lane_type(ctx, arg0);
    let v2 = C::ty_bits(ctx, v1);
    let v3 = C::u8_as_u64(ctx, v2);
    let v5 = C::u64_sub(ctx, v3, 0x1_u64);
    // Rule at src/prelude.isle line 476.
    return v5;
}

// Generated as internal constructor for term output_reg.
pub fn constructor_output_reg<C: Context>(
    ctx: &mut C,
    arg0: Reg,
) -> InstOutput {
    let v1 = C::value_reg(ctx, arg0);
    let v2 = C::output(ctx, v1);
    // Rule at src/prelude_lower.isle line 85.
    return v2;
}

// Generated as internal constructor for term output_value.
pub fn constructor_output_value<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> InstOutput {
    let v1 = C::put_in_regs(ctx, arg0);
    let v2 = C::output(ctx, v1);
    // Rule at src/prelude_lower.isle line 89.
    return v2;
}

// Generated as internal constructor for term temp_reg.
pub fn constructor_temp_reg<C: Context>(
    ctx: &mut C,
    arg0: Type,
) -> Reg {
    let v1 = C::temp_writable_reg(ctx, arg0);
    let v2 = C::writable_reg_to_reg(ctx, v1);
    // Rule at src/prelude_lower.isle line 109.
    return v2;
}

// Generated as internal constructor for term value_regs_range.
pub fn constructor_value_regs_range<C: Context>(
    ctx: &mut C,
    arg0: ValueRegs,
) -> Range {
    let v2 = C::value_regs_len(ctx, arg0);
    let v3 = C::range(ctx, 0x0_usize, v2);
    // Rule at src/prelude_lower.isle line 163.
    return v3;
}

// Generated as internal constructor for term lo_reg.
pub fn constructor_lo_reg<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> Reg {
    let v1 = C::put_in_regs(ctx, arg0);
    let v3 = C::value_regs_get(ctx, v1, 0x0_usize);
    // Rule at src/prelude_lower.isle line 174.
    return v3;
}

// Generated as internal constructor for term multi_reg_to_pair_and_single.
pub fn constructor_multi_reg_to_pair_and_single<C: Context>(
    ctx: &mut C,
    arg0: &MultiReg,
) -> InstOutput {
    if let &MultiReg::Three {
        a: v1,
        b: v2,
        c: v3,
    } = arg0 {
        let v4 = C::value_regs(ctx, v1, v2);
        let v5 = C::value_reg(ctx, v3);
        let v6 = C::output_pair(ctx, v4, v5);
        // Rule at src/prelude_lower.isle line 185.
        return v6;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "multi_reg_to_pair_and_single", "src/prelude_lower.isle line 184")
}

// Generated as internal constructor for term multi_reg_to_pair.
pub fn constructor_multi_reg_to_pair<C: Context>(
    ctx: &mut C,
    arg0: &MultiReg,
) -> InstOutput {
    if let &MultiReg::Two {
        a: v1,
        b: v2,
    } = arg0 {
        let v3 = C::value_regs(ctx, v1, v2);
        let v4 = C::output(ctx, v3);
        // Rule at src/prelude_lower.isle line 190.
        return v4;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "multi_reg_to_pair", "src/prelude_lower.isle line 189")
}

// Generated as internal constructor for term multi_reg_to_single.
pub fn constructor_multi_reg_to_single<C: Context>(
    ctx: &mut C,
    arg0: &MultiReg,
) -> InstOutput {
    if let &MultiReg::One {
        a: v1,
    } = arg0 {
        let v2 = C::value_reg(ctx, v1);
        let v3 = C::output(ctx, v2);
        // Rule at src/prelude_lower.isle line 195.
        return v3;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "multi_reg_to_single", "src/prelude_lower.isle line 194")
}

// Generated as internal constructor for term emit_side_effect.
pub fn constructor_emit_side_effect<C: Context>(
    ctx: &mut C,
    arg0: &SideEffectNoResult,
) -> Unit {
    match arg0 {
        &SideEffectNoResult::Inst {
            inst: ref v1,
        } => {
            let v2 = C::emit(ctx, v1);
            // Rule at src/prelude_lower.isle line 442.
            return v2;
        }
        &SideEffectNoResult::Inst2 {
            inst1: ref v3,
            inst2: ref v4,
        } => {
            let v5 = C::emit(ctx, v3);
            let v6 = C::emit(ctx, v4);
            // Rule at src/prelude_lower.isle line 444.
            return v6;
        }
        &SideEffectNoResult::Inst3 {
            inst1: ref v7,
            inst2: ref v8,
            inst3: ref v9,
        } => {
            let v10 = C::emit(ctx, v7);
            let v11 = C::emit(ctx, v8);
            let v12 = C::emit(ctx, v9);
            // Rule at src/prelude_lower.isle line 447.
            return v12;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_side_effect", "src/prelude_lower.isle line 441")
}

// Generated as internal constructor for term side_effect.
pub fn constructor_side_effect<C: Context>(
    ctx: &mut C,
    arg0: &SideEffectNoResult,
) -> InstOutput {
    let v1 = constructor_emit_side_effect(ctx, arg0);
    let v2 = C::output_none(ctx);
    // Rule at src/prelude_lower.isle line 457.
    return v2;
}

// Generated as internal constructor for term side_effect_concat.
pub fn constructor_side_effect_concat<C: Context>(
    ctx: &mut C,
    arg0: &SideEffectNoResult,
    arg1: &SideEffectNoResult,
) -> SideEffectNoResult {
    match arg0 {
        &SideEffectNoResult::Inst {
            inst: ref v1,
        } => {
            match arg1 {
                &SideEffectNoResult::Inst {
                    inst: ref v3,
                } => {
                    let v4 = SideEffectNoResult::Inst2 {
                        inst1: v1.clone(),
                        inst2: v3.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 462.
                    return v4;
                }
                &SideEffectNoResult::Inst2 {
                    inst1: ref v5,
                    inst2: ref v6,
                } => {
                    let v7 = SideEffectNoResult::Inst3 {
                        inst1: v1.clone(),
                        inst2: v5.clone(),
                        inst3: v6.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 464.
                    return v7;
                }
                _ => {}
            }
        }
        &SideEffectNoResult::Inst2 {
            inst1: ref v8,
            inst2: ref v9,
        } => {
            if let &SideEffectNoResult::Inst {
                inst: ref v3,
            } = arg1 {
                let v10 = SideEffectNoResult::Inst3 {
                    inst1: v8.clone(),
                    inst2: v9.clone(),
                    inst3: v3.clone(),
                };
                // Rule at src/prelude_lower.isle line 466.
                return v10;
            }
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "side_effect_concat", "src/prelude_lower.isle line 461")
}

// Generated as internal constructor for term produces_flags_concat.
pub fn constructor_produces_flags_concat<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
    arg1: &ProducesFlags,
) -> ProducesFlags {
    if let &ProducesFlags::ProducesFlagsSideEffect {
        inst: ref v1,
    } = arg0 {
        if let &ProducesFlags::ProducesFlagsSideEffect {
            inst: ref v3,
        } = arg1 {
            let v4 = ProducesFlags::ProducesFlagsTwiceSideEffect {
                inst1: v1.clone(),
                inst2: v3.clone(),
            };
            // Rule at src/prelude_lower.isle line 491.
            return v4;
        }
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "produces_flags_concat", "src/prelude_lower.isle line 490")
}

// Generated as internal constructor for term produces_flags_get_reg.
pub fn constructor_produces_flags_get_reg<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
) -> Reg {
    match arg0 {
        &ProducesFlags::ProducesFlagsReturnsReg {
            inst: ref v1,
            result: v2,
        } => {
            // Rule at src/prelude_lower.isle line 521.
            return v2;
        }
        &ProducesFlags::ProducesFlagsReturnsResultWithConsumer {
            inst: ref v3,
            result: v4,
        } => {
            // Rule at src/prelude_lower.isle line 522.
            return v4;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "produces_flags_get_reg", "src/prelude_lower.isle line 520")
}

// Generated as internal constructor for term produces_flags_ignore.
pub fn constructor_produces_flags_ignore<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
) -> ProducesFlags {
    match arg0 {
        &ProducesFlags::ProducesFlagsReturnsReg {
            inst: ref v1,
            result: v2,
        } => {
            let v3 = ProducesFlags::ProducesFlagsSideEffect {
                inst: v1.clone(),
            };
            // Rule at src/prelude_lower.isle line 527.
            return v3;
        }
        &ProducesFlags::ProducesFlagsReturnsResultWithConsumer {
            inst: ref v4,
            result: v5,
        } => {
            let v6 = ProducesFlags::ProducesFlagsSideEffect {
                inst: v4.clone(),
            };
            // Rule at src/prelude_lower.isle line 529.
            return v6;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "produces_flags_ignore", "src/prelude_lower.isle line 526")
}

// Generated as internal constructor for term consumes_flags_concat.
pub fn constructor_consumes_flags_concat<C: Context>(
    ctx: &mut C,
    arg0: &ConsumesFlags,
    arg1: &ConsumesFlags,
) -> ConsumesFlags {
    match arg0 {
        &ConsumesFlags::ConsumesFlagsSideEffect {
            inst: ref v8,
        } => {
            if let &ConsumesFlags::ConsumesFlagsSideEffect {
                inst: ref v9,
            } = arg1 {
                let v10 = ConsumesFlags::ConsumesFlagsSideEffect2 {
                    inst1: v8.clone(),
                    inst2: v9.clone(),
                };
                // Rule at src/prelude_lower.isle line 542.
                return v10;
            }
        }
        &ConsumesFlags::ConsumesFlagsReturnsReg {
            inst: ref v1,
            result: v2,
        } => {
            if let &ConsumesFlags::ConsumesFlagsReturnsReg {
                inst: ref v4,
                result: v5,
            } = arg1 {
                let v6 = C::value_regs(ctx, v2, v5);
                let v7 = ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                    inst1: v1.clone(),
                    inst2: v4.clone(),
                    result: v6,
                };
                // Rule at src/prelude_lower.isle line 536.
                return v7;
            }
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "consumes_flags_concat", "src/prelude_lower.isle line 535")
}

// Generated as internal constructor for term with_flags.
pub fn constructor_with_flags<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
    arg1: &ConsumesFlags,
) -> ValueRegs {
    match arg0 {
        &ProducesFlags::ProducesFlagsSideEffect {
            inst: ref v12,
        } => {
            match arg1 {
                &ConsumesFlags::ConsumesFlagsReturnsReg {
                    inst: ref v13,
                    result: v14,
                } => {
                    let v15 = C::emit(ctx, v12);
                    let v16 = C::emit(ctx, v13);
                    let v17 = C::value_reg(ctx, v14);
                    // Rule at src/prelude_lower.isle line 573.
                    return v17;
                }
                &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                    inst1: ref v18,
                    inst2: ref v19,
                    result: v20,
                } => {
                    let v15 = C::emit(ctx, v12);
                    let v21 = C::emit(ctx, v18);
                    let v22 = C::emit(ctx, v19);
                    // Rule at src/prelude_lower.isle line 579.
                    return v20;
                }
                &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                    inst1: ref v23,
                    inst2: ref v24,
                    inst3: ref v25,
                    inst4: ref v26,
                    result: v27,
                } => {
                    let v15 = C::emit(ctx, v12);
                    let v28 = C::emit(ctx, v23);
                    let v29 = C::emit(ctx, v24);
                    let v30 = C::emit(ctx, v25);
                    let v31 = C::emit(ctx, v26);
                    // Rule at src/prelude_lower.isle line 591.
                    return v27;
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsTwiceSideEffect {
            inst1: ref v32,
            inst2: ref v33,
        } => {
            match arg1 {
                &ConsumesFlags::ConsumesFlagsReturnsReg {
                    inst: ref v13,
                    result: v14,
                } => {
                    let v34 = C::emit(ctx, v32);
                    let v35 = C::emit(ctx, v33);
                    let v36 = C::emit(ctx, v13);
                    let v37 = C::value_reg(ctx, v14);
                    // Rule at src/prelude_lower.isle line 607.
                    return v37;
                }
                &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                    inst1: ref v18,
                    inst2: ref v19,
                    result: v20,
                } => {
                    let v34 = C::emit(ctx, v32);
                    let v35 = C::emit(ctx, v33);
                    let v38 = C::emit(ctx, v18);
                    let v39 = C::emit(ctx, v19);
                    // Rule at src/prelude_lower.isle line 614.
                    return v20;
                }
                &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                    inst1: ref v23,
                    inst2: ref v24,
                    inst3: ref v25,
                    inst4: ref v26,
                    result: v27,
                } => {
                    let v34 = C::emit(ctx, v32);
                    let v35 = C::emit(ctx, v33);
                    let v40 = C::emit(ctx, v23);
                    let v41 = C::emit(ctx, v24);
                    let v42 = C::emit(ctx, v25);
                    let v43 = C::emit(ctx, v26);
                    // Rule at src/prelude_lower.isle line 627.
                    return v27;
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsReturnsResultWithConsumer {
            inst: ref v1,
            result: v2,
        } => {
            match arg1 {
                &ConsumesFlags::ConsumesFlagsSideEffect {
                    inst: ref v9,
                } => {
                    let v6 = C::emit(ctx, v1);
                    let v10 = C::emit(ctx, v9);
                    let v11 = C::value_reg(ctx, v2);
                    // Rule at src/prelude_lower.isle line 567.
                    return v11;
                }
                &ConsumesFlags::ConsumesFlagsReturnsResultWithProducer {
                    inst: ref v4,
                    result: v5,
                } => {
                    let v6 = C::emit(ctx, v1);
                    let v7 = C::emit(ctx, v4);
                    let v8 = C::value_regs(ctx, v2, v5);
                    // Rule at src/prelude_lower.isle line 559.
                    return v8;
                }
                _ => {}
            }
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "with_flags", "src/prelude_lower.isle line 557")
}

// Generated as internal constructor for term with_flags_reg.
pub fn constructor_with_flags_reg<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
    arg1: &ConsumesFlags,
) -> Reg {
    let v2 = constructor_with_flags(ctx, arg0, arg1);
    let v4 = C::value_regs_get(ctx, v2, 0x0_usize);
    // Rule at src/prelude_lower.isle line 645.
    return v4;
}

// Generated as internal constructor for term flags_to_producesflags.
pub fn constructor_flags_to_producesflags<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> ProducesFlags {
    let v1 = C::mark_value_used(ctx, arg0);
    // Rule at src/prelude_lower.isle line 652.
    return ProducesFlags::AlreadyExistingFlags;
}

// Generated as internal constructor for term with_flags_side_effect.
pub fn constructor_with_flags_side_effect<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
    arg1: &ConsumesFlags,
) -> SideEffectNoResult {
    match arg0 {
        &ProducesFlags::AlreadyExistingFlags => {
            match arg1 {
                &ConsumesFlags::ConsumesFlagsSideEffect {
                    inst: ref v2,
                } => {
                    let v3 = SideEffectNoResult::Inst {
                        inst: v2.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 663.
                    return v3;
                }
                &ConsumesFlags::ConsumesFlagsSideEffect2 {
                    inst1: ref v4,
                    inst2: ref v5,
                } => {
                    let v6 = SideEffectNoResult::Inst2 {
                        inst1: v4.clone(),
                        inst2: v5.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 668.
                    return v6;
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsSideEffect {
            inst: ref v7,
        } => {
            match arg1 {
                &ConsumesFlags::ConsumesFlagsSideEffect {
                    inst: ref v2,
                } => {
                    let v8 = SideEffectNoResult::Inst2 {
                        inst1: v7.clone(),
                        inst2: v2.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 673.
                    return v8;
                }
                &ConsumesFlags::ConsumesFlagsSideEffect2 {
                    inst1: ref v4,
                    inst2: ref v5,
                } => {
                    let v9 = SideEffectNoResult::Inst3 {
                        inst1: v7.clone(),
                        inst2: v4.clone(),
                        inst3: v5.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 678.
                    return v9;
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsTwiceSideEffect {
            inst1: ref v10,
            inst2: ref v11,
        } => {
            if let &ConsumesFlags::ConsumesFlagsSideEffect {
                inst: ref v2,
            } = arg1 {
                let v12 = SideEffectNoResult::Inst3 {
                    inst1: v10.clone(),
                    inst2: v11.clone(),
                    inst3: v2.clone(),
                };
                // Rule at src/prelude_lower.isle line 683.
                return v12;
            }
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "with_flags_side_effect", "src/prelude_lower.isle line 661")
}

// Generated as internal constructor for term with_flags_chained.
pub fn constructor_with_flags_chained<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
    arg1: &ConsumesAndProducesFlags,
    arg2: &ConsumesFlags,
) -> MultiReg {
    match arg0 {
        &ProducesFlags::ProducesFlagsSideEffect {
            inst: ref v1,
        } => {
            match arg1 {
                &ConsumesAndProducesFlags::SideEffect {
                    inst: ref v3,
                } => {
                    match arg2 {
                        &ConsumesFlags::ConsumesFlagsSideEffect {
                            inst: ref v5,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v7 = C::emit(ctx, v3);
                            let v8 = C::emit(ctx, v5);
                            // Rule at src/prelude_lower.isle line 692.
                            return MultiReg::Empty;
                        }
                        &ConsumesFlags::ConsumesFlagsSideEffect2 {
                            inst1: ref v10,
                            inst2: ref v11,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v7 = C::emit(ctx, v3);
                            let v12 = C::emit(ctx, v10);
                            let v13 = C::emit(ctx, v11);
                            // Rule at src/prelude_lower.isle line 700.
                            return MultiReg::Empty;
                        }
                        &ConsumesFlags::ConsumesFlagsReturnsReg {
                            inst: ref v14,
                            result: v15,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v7 = C::emit(ctx, v3);
                            let v16 = C::emit(ctx, v14);
                            let v17 = MultiReg::One {
                                a: v15,
                            };
                            // Rule at src/prelude_lower.isle line 709.
                            return v17;
                        }
                        &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                            inst1: ref v18,
                            inst2: ref v19,
                            result: v20,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v7 = C::emit(ctx, v3);
                            let v21 = C::emit(ctx, v18);
                            let v22 = C::emit(ctx, v19);
                            let v24 = C::value_regs_get(ctx, v20, 0x0_usize);
                            let v26 = C::value_regs_get(ctx, v20, 0x1_usize);
                            let v27 = MultiReg::Two {
                                a: v24,
                                b: v26,
                            };
                            // Rule at src/prelude_lower.isle line 717.
                            return v27;
                        }
                        &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                            inst1: ref v28,
                            inst2: ref v29,
                            inst3: ref v30,
                            inst4: ref v31,
                            result: v32,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v7 = C::emit(ctx, v3);
                            let v33 = C::emit(ctx, v28);
                            let v34 = C::emit(ctx, v29);
                            let v35 = C::emit(ctx, v30);
                            let v36 = C::emit(ctx, v31);
                            let v37 = C::value_regs_get(ctx, v32, 0x0_usize);
                            let v38 = C::value_regs_get(ctx, v32, 0x1_usize);
                            let v39 = MultiReg::Two {
                                a: v37,
                                b: v38,
                            };
                            // Rule at src/prelude_lower.isle line 726.
                            return v39;
                        }
                        _ => {}
                    }
                }
                &ConsumesAndProducesFlags::ReturnsReg {
                    inst: ref v47,
                    result: v48,
                } => {
                    match arg2 {
                        &ConsumesFlags::ConsumesFlagsSideEffect {
                            inst: ref v5,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v49 = C::emit(ctx, v47);
                            let v8 = C::emit(ctx, v5);
                            let v50 = MultiReg::One {
                                a: v48,
                            };
                            // Rule at src/prelude_lower.isle line 786.
                            return v50;
                        }
                        &ConsumesFlags::ConsumesFlagsSideEffect2 {
                            inst1: ref v10,
                            inst2: ref v11,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v49 = C::emit(ctx, v47);
                            let v12 = C::emit(ctx, v10);
                            let v13 = C::emit(ctx, v11);
                            let v50 = MultiReg::One {
                                a: v48,
                            };
                            // Rule at src/prelude_lower.isle line 794.
                            return v50;
                        }
                        &ConsumesFlags::ConsumesFlagsReturnsReg {
                            inst: ref v14,
                            result: v15,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v49 = C::emit(ctx, v47);
                            let v16 = C::emit(ctx, v14);
                            let v51 = MultiReg::Two {
                                a: v48,
                                b: v15,
                            };
                            // Rule at src/prelude_lower.isle line 803.
                            return v51;
                        }
                        &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                            inst1: ref v18,
                            inst2: ref v19,
                            result: v20,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v49 = C::emit(ctx, v47);
                            let v21 = C::emit(ctx, v18);
                            let v22 = C::emit(ctx, v19);
                            let v24 = C::value_regs_get(ctx, v20, 0x0_usize);
                            let v26 = C::value_regs_get(ctx, v20, 0x1_usize);
                            let v52 = MultiReg::Three {
                                a: v48,
                                b: v24,
                                c: v26,
                            };
                            // Rule at src/prelude_lower.isle line 811.
                            return v52;
                        }
                        &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                            inst1: ref v28,
                            inst2: ref v29,
                            inst3: ref v30,
                            inst4: ref v31,
                            result: v32,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v49 = C::emit(ctx, v47);
                            let v33 = C::emit(ctx, v28);
                            let v34 = C::emit(ctx, v29);
                            let v35 = C::emit(ctx, v30);
                            let v36 = C::emit(ctx, v31);
                            let v37 = C::value_regs_get(ctx, v32, 0x0_usize);
                            let v38 = C::value_regs_get(ctx, v32, 0x1_usize);
                            let v53 = MultiReg::Three {
                                a: v48,
                                b: v37,
                                c: v38,
                            };
                            // Rule at src/prelude_lower.isle line 820.
                            return v53;
                        }
                        _ => {}
                    }
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsReturnsReg {
            inst: ref v40,
            result: v41,
        } => {
            match arg1 {
                &ConsumesAndProducesFlags::SideEffect {
                    inst: ref v3,
                } => {
                    match arg2 {
                        &ConsumesFlags::ConsumesFlagsSideEffect {
                            inst: ref v5,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v7 = C::emit(ctx, v3);
                            let v8 = C::emit(ctx, v5);
                            let v43 = MultiReg::One {
                                a: v41,
                            };
                            // Rule at src/prelude_lower.isle line 739.
                            return v43;
                        }
                        &ConsumesFlags::ConsumesFlagsSideEffect2 {
                            inst1: ref v10,
                            inst2: ref v11,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v7 = C::emit(ctx, v3);
                            let v12 = C::emit(ctx, v10);
                            let v13 = C::emit(ctx, v11);
                            let v43 = MultiReg::One {
                                a: v41,
                            };
                            // Rule at src/prelude_lower.isle line 747.
                            return v43;
                        }
                        &ConsumesFlags::ConsumesFlagsReturnsReg {
                            inst: ref v14,
                            result: v15,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v7 = C::emit(ctx, v3);
                            let v16 = C::emit(ctx, v14);
                            let v44 = MultiReg::Two {
                                a: v41,
                                b: v15,
                            };
                            // Rule at src/prelude_lower.isle line 756.
                            return v44;
                        }
                        &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                            inst1: ref v18,
                            inst2: ref v19,
                            result: v20,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v7 = C::emit(ctx, v3);
                            let v21 = C::emit(ctx, v18);
                            let v22 = C::emit(ctx, v19);
                            let v24 = C::value_regs_get(ctx, v20, 0x0_usize);
                            let v26 = C::value_regs_get(ctx, v20, 0x1_usize);
                            let v45 = MultiReg::Three {
                                a: v41,
                                b: v24,
                                c: v26,
                            };
                            // Rule at src/prelude_lower.isle line 764.
                            return v45;
                        }
                        &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                            inst1: ref v28,
                            inst2: ref v29,
                            inst3: ref v30,
                            inst4: ref v31,
                            result: v32,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v7 = C::emit(ctx, v3);
                            let v33 = C::emit(ctx, v28);
                            let v34 = C::emit(ctx, v29);
                            let v35 = C::emit(ctx, v30);
                            let v36 = C::emit(ctx, v31);
                            let v37 = C::value_regs_get(ctx, v32, 0x0_usize);
                            let v38 = C::value_regs_get(ctx, v32, 0x1_usize);
                            let v46 = MultiReg::Three {
                                a: v41,
                                b: v37,
                                c: v38,
                            };
                            // Rule at src/prelude_lower.isle line 773.
                            return v46;
                        }
                        _ => {}
                    }
                }
                &ConsumesAndProducesFlags::ReturnsReg {
                    inst: ref v47,
                    result: v48,
                } => {
                    match arg2 {
                        &ConsumesFlags::ConsumesFlagsSideEffect {
                            inst: ref v5,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v49 = C::emit(ctx, v47);
                            let v8 = C::emit(ctx, v5);
                            let v54 = MultiReg::Two {
                                a: v41,
                                b: v48,
                            };
                            // Rule at src/prelude_lower.isle line 833.
                            return v54;
                        }
                        &ConsumesFlags::ConsumesFlagsSideEffect2 {
                            inst1: ref v10,
                            inst2: ref v11,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v49 = C::emit(ctx, v47);
                            let v12 = C::emit(ctx, v10);
                            let v13 = C::emit(ctx, v11);
                            let v54 = MultiReg::Two {
                                a: v41,
                                b: v48,
                            };
                            // Rule at src/prelude_lower.isle line 841.
                            return v54;
                        }
                        &ConsumesFlags::ConsumesFlagsReturnsReg {
                            inst: ref v14,
                            result: v15,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v49 = C::emit(ctx, v47);
                            let v16 = C::emit(ctx, v14);
                            let v55 = MultiReg::Three {
                                a: v41,
                                b: v48,
                                c: v15,
                            };
                            // Rule at src/prelude_lower.isle line 850.
                            return v55;
                        }
                        &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                            inst1: ref v18,
                            inst2: ref v19,
                            result: v20,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v49 = C::emit(ctx, v47);
                            let v21 = C::emit(ctx, v18);
                            let v22 = C::emit(ctx, v19);
                            let v24 = C::value_regs_get(ctx, v20, 0x0_usize);
                            let v26 = C::value_regs_get(ctx, v20, 0x1_usize);
                            let v56 = MultiReg::Four {
                                a: v41,
                                b: v48,
                                c: v24,
                                d: v26,
                            };
                            // Rule at src/prelude_lower.isle line 858.
                            return v56;
                        }
                        &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                            inst1: ref v28,
                            inst2: ref v29,
                            inst3: ref v30,
                            inst4: ref v31,
                            result: v32,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v49 = C::emit(ctx, v47);
                            let v33 = C::emit(ctx, v28);
                            let v34 = C::emit(ctx, v29);
                            let v35 = C::emit(ctx, v30);
                            let v36 = C::emit(ctx, v31);
                            let v37 = C::value_regs_get(ctx, v32, 0x0_usize);
                            let v38 = C::value_regs_get(ctx, v32, 0x1_usize);
                            let v57 = MultiReg::Four {
                                a: v41,
                                b: v48,
                                c: v37,
                                d: v38,
                            };
                            // Rule at src/prelude_lower.isle line 867.
                            return v57;
                        }
                        _ => {}
                    }
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsReturnsResultWithConsumer {
            inst: ref v58,
            result: v59,
        } => {
            if let &ConsumesAndProducesFlags::ReturnsReg {
                inst: ref v47,
                result: v48,
            } = arg1 {
                match arg2 {
                    &ConsumesFlags::ConsumesFlagsSideEffect {
                        inst: ref v5,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v8 = C::emit(ctx, v5);
                        let v61 = MultiReg::Two {
                            a: v59,
                            b: v48,
                        };
                        // Rule at src/prelude_lower.isle line 879.
                        return v61;
                    }
                    &ConsumesFlags::ConsumesFlagsSideEffect2 {
                        inst1: ref v10,
                        inst2: ref v11,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v12 = C::emit(ctx, v10);
                        let v13 = C::emit(ctx, v11);
                        let v61 = MultiReg::Two {
                            a: v59,
                            b: v48,
                        };
                        // Rule at src/prelude_lower.isle line 887.
                        return v61;
                    }
                    &ConsumesFlags::ConsumesFlagsReturnsResultWithProducer {
                        inst: ref v63,
                        result: v64,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v65 = C::emit(ctx, v63);
                        let v66 = MultiReg::Three {
                            a: v59,
                            b: v48,
                            c: v64,
                        };
                        // Rule at src/prelude_lower.isle line 904.
                        return v66;
                    }
                    &ConsumesFlags::ConsumesFlagsReturnsReg {
                        inst: ref v14,
                        result: v15,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v16 = C::emit(ctx, v14);
                        let v62 = MultiReg::Three {
                            a: v59,
                            b: v48,
                            c: v15,
                        };
                        // Rule at src/prelude_lower.isle line 896.
                        return v62;
                    }
                    &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                        inst1: ref v18,
                        inst2: ref v19,
                        result: v20,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v21 = C::emit(ctx, v18);
                        let v22 = C::emit(ctx, v19);
                        let v24 = C::value_regs_get(ctx, v20, 0x0_usize);
                        let v26 = C::value_regs_get(ctx, v20, 0x1_usize);
                        let v67 = MultiReg::Four {
                            a: v59,
                            b: v48,
                            c: v24,
                            d: v26,
                        };
                        // Rule at src/prelude_lower.isle line 912.
                        return v67;
                    }
                    &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                        inst1: ref v28,
                        inst2: ref v29,
                        inst3: ref v30,
                        inst4: ref v31,
                        result: v32,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v33 = C::emit(ctx, v28);
                        let v34 = C::emit(ctx, v29);
                        let v35 = C::emit(ctx, v30);
                        let v36 = C::emit(ctx, v31);
                        let v37 = C::value_regs_get(ctx, v32, 0x0_usize);
                        let v38 = C::value_regs_get(ctx, v32, 0x1_usize);
                        let v68 = MultiReg::Four {
                            a: v59,
                            b: v48,
                            c: v37,
                            d: v38,
                        };
                        // Rule at src/prelude_lower.isle line 921.
                        return v68;
                    }
                    _ => {}
                }
            }
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "with_flags_chained", "src/prelude_lower.isle line 689")
}

// Generated as internal constructor for term lower_return.
pub fn constructor_lower_return<C: Context>(
    ctx: &mut C,
    arg0: ValueSlice,
) -> InstOutput {
    let v1 = C::gen_return(ctx, arg0);
    let v2 = C::output_none(ctx);
    // Rule at src/prelude_lower.isle line 1124.
    return v2;
}

// Generated as internal constructor for term ty_to_operand_size.
pub fn constructor_ty_to_operand_size<C: Context>(
    ctx: &mut C,
    arg0: Type,
) -> OperandSize {
    match arg0 {
        I32 => {
            // Rule at src/isa/pulley_shared/inst.isle line 5.
            return OperandSize::Size32;
        }
        I64 => {
            // Rule at src/isa/pulley_shared/inst.isle line 6.
            return OperandSize::Size64;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "ty_to_operand_size", "src/isa/pulley_shared/inst.isle line 4")
}

// Generated as internal constructor for term raw_inst_to_inst.
pub fn constructor_raw_inst_to_inst<C: Context>(
    ctx: &mut C,
    arg0: &RawInst,
) -> MInst {
    let v1 = MInst::Raw {
        raw: arg0.clone(),
    };
    // Rule at src/isa/pulley_shared/inst.isle line 149.
    return v1;
}

// Generated as internal constructor for term amode_base.
pub fn constructor_amode_base<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Offset32,
) -> ValueOffset {
    let v4 = C::def_inst(ctx, arg0);
    if let Some(v5) = v4 {
        let v6 = &C::inst_data(ctx, v5);
        if let &InstructionData::Binary {
            opcode: ref v7,
            args: ref v8,
        } = v6 {
            if let &Opcode::Iadd = v7 {
                let v9 = C::unpack_value_array_2(ctx, v8);
                let v12 = C::i32_from_iconst(ctx, v9.1);
                if let Some(v13) = v12 {
                    let v2 = C::offset32(ctx, arg1);
                    let v14 = C::s32_add_fallible(ctx, v13, v2);
                    if let Some(v15) = v14 {
                        let v16 = ValueOffset::Both {
                            value: v9.0,
                            offset: v15,
                        };
                        // Rule at src/isa/pulley_shared/inst.isle line 174.
                        return v16;
                    }
                }
            }
        }
    }
    let v2 = C::offset32(ctx, arg1);
    let v3 = ValueOffset::Both {
        value: arg0,
        offset: v2,
    };
    // Rule at src/isa/pulley_shared/inst.isle line 173.
    return v3;
}

// Generated as internal constructor for term amode.
pub fn constructor_amode<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Offset32,
) -> Amode {
    let v2 = &constructor_amode_base(ctx, arg0, arg1);
    if let &ValueOffset::Both {
        value: v3,
        offset: v4,
    } = v2 {
        let v5 = constructor_put_in_xreg(ctx, v3);
        let v6 = Amode::RegOffset {
            base: v5,
            offset: v4,
        };
        // Rule at src/isa/pulley_shared/inst.isle line 189.
        return v6;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "amode", "src/isa/pulley_shared/inst.isle line 188")
}

// Generated as internal constructor for term addro32.
pub fn constructor_addro32<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Offset32,
) -> AddrO32 {
    let v2 = &constructor_amode_base(ctx, arg0, arg1);
    if let &ValueOffset::Both {
        value: v3,
        offset: v4,
    } = v2 {
        let v5 = constructor_put_in_xreg(ctx, v3);
        let v6 = AddrO32::Base {
            addr: v5,
            offset: v4,
        };
        // Rule at src/isa/pulley_shared/inst.isle line 202.
        return v6;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "addro32", "src/isa/pulley_shared/inst.isle line 201")
}

// Generated as internal constructor for term addrz.
pub fn constructor_addrz<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Offset32,
) -> AddrZ {
    let v2 = &constructor_amode_base(ctx, arg0, arg1);
    if let &ValueOffset::Both {
        value: v3,
        offset: v4,
    } = v2 {
        let v5 = constructor_put_in_xreg(ctx, v3);
        let v6 = AddrZ::Base {
            addr: v5,
            offset: v4,
        };
        // Rule at src/isa/pulley_shared/inst.isle line 215.
        return v6;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "addrz", "src/isa/pulley_shared/inst.isle line 214")
}

// Generated as internal constructor for term sinkable_load.
pub fn constructor_sinkable_load<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> Option<SinkableLoad> {
    let v2 = C::is_sinkable_inst(ctx, arg0);
    if let Some(v3) = v2 {
        let v4 = &C::inst_data(ctx, v3);
        if let &InstructionData::Load {
            opcode: ref v5,
            arg: v6,
            flags: v7,
            offset: v8,
        } = v4 {
            if let &Opcode::Load = v5 {
                let v10 = &C::endianness(ctx, v7);
                let v11 = C::is_native_endianness(ctx, v10);
                if v11 == true {
                    let v12 = C::memflags_nontrapping(ctx, v7);
                    if v12 == true {
                        let v9 = C::offset32(ctx, v8);
                        let v13 = C::u8_try_from_i32(ctx, v9);
                        if let Some(v14) = v13 {
                            let v1 = C::value_type(ctx, arg0);
                            let v15 = SinkableLoad::Load {
                                inst: v3,
                                ty: v1,
                                addr: v6,
                                offset: v14,
                            };
                            let v16 = Some(v15);
                            // Rule at src/isa/pulley_shared/inst.isle line 261.
                            return v16;
                        }
                    }
                }
            }
        }
    }
    None
}

// Generated as internal constructor for term sink_load.
pub fn constructor_sink_load<C: Context>(
    ctx: &mut C,
    arg0: &SinkableLoad,
) -> SunkLoad {
    if let &SinkableLoad::Load {
        inst: v1,
        ty: v2,
        addr: v3,
        offset: v4,
    } = arg0 {
        let v5 = C::sink_inst(ctx, v1);
        let v6 = SunkLoad::Load {
            ty: v2,
            addr: v3,
            offset: v4,
        };
        // Rule at src/isa/pulley_shared/inst.isle line 276.
        return v6;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "sink_load", "src/isa/pulley_shared/inst.isle line 275")
}

// Generated as internal constructor for term gen_addrg32.
pub fn constructor_gen_addrg32<C: Context>(
    ctx: &mut C,
    arg0: &G32,
) -> AddrG32 {
    if let &G32::All {
        heap_base: v1,
        heap_bound: v2,
        wasm_addr: v3,
        offset: v4,
    } = arg0 {
        let v5 = constructor_put_in_xreg(ctx, v1);
        let v6 = constructor_put_in_xreg(ctx, v2);
        let v7 = constructor_put_in_xreg(ctx, v3);
        let v8 = AddrG32::RegisterBound {
            host_heap_base: v5,
            host_heap_bound: v6,
            wasm_addr: v7,
            offset: v4,
        };
        // Rule at src/isa/pulley_shared/inst.isle line 298.
        return v8;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "gen_addrg32", "src/isa/pulley_shared/inst.isle line 297")
}

// Generated as internal constructor for term gen_addrg32bne.
pub fn constructor_gen_addrg32bne<C: Context>(
    ctx: &mut C,
    arg0: &G32Bne,
) -> AddrG32Bne {
    if let &G32Bne::All {
        heap_base: v1,
        heap_bound: ref v2,
        wasm_addr: v3,
        offset: v4,
    } = arg0 {
        let v5 = constructor_put_in_xreg(ctx, v1);
        let v6 = &constructor_sink_load(ctx, v2);
        let v7 = constructor_put_in_xreg(ctx, v3);
        let v8 = &constructor_gen_addrg32bne_for_real(ctx, v5, v6, v7, v4);
        // Rule at src/isa/pulley_shared/inst.isle line 307.
        return v8.clone();
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "gen_addrg32bne", "src/isa/pulley_shared/inst.isle line 306")
}

// Generated as internal constructor for term gen_addrg32bne_for_real.
pub fn constructor_gen_addrg32bne_for_real<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: &SunkLoad,
    arg2: XReg,
    arg3: u8,
) -> AddrG32Bne {
    if let &SunkLoad::Load {
        ty: v2,
        addr: v3,
        offset: v4,
    } = arg1 {
        let v7 = constructor_put_in_xreg(ctx, v3);
        let v8 = AddrG32Bne::BoundNe {
            host_heap_base: arg0,
            host_heap_bound_addr: v7,
            host_heap_bound_offset: v4,
            wasm_addr: arg2,
            offset: arg3,
        };
        // Rule at src/isa/pulley_shared/inst.isle line 313.
        return v8;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "gen_addrg32bne_for_real", "src/isa/pulley_shared/inst.isle line 312")
}

// Generated as internal constructor for term addrg32bne.
pub fn constructor_addrg32bne<C: Context>(
    ctx: &mut C,
    arg0: &G32,
) -> Option<G32Bne> {
    if let &G32::All {
        heap_base: v1,
        heap_bound: v2,
        wasm_addr: v3,
        offset: v4,
    } = arg0 {
        let v5 = &constructor_sinkable_load(ctx, v2);
        if let Some(v6) = v5 {
            let v7 = C::u8_try_from_u16(ctx, v4);
            if let Some(v8) = v7 {
                let v9 = G32Bne::All {
                    heap_base: v1,
                    heap_bound: v6.clone(),
                    wasm_addr: v3,
                    offset: v8,
                };
                let v10 = Some(v9);
                // Rule at src/isa/pulley_shared/inst.isle line 321.
                return v10;
            }
        }
    }
    None
}

// Generated as internal constructor for term wasm_g32.
pub fn constructor_wasm_g32<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Offset32,
    arg2: MemFlags,
    arg3: Type,
) -> Option<G32> {
    let v1 = C::def_inst(ctx, arg0);
    if let Some(v2) = v1 {
        let v3 = &C::inst_data(ctx, v2);
        if let &InstructionData::Ternary {
            opcode: ref v4,
            args: ref v5,
        } = v3 {
            if let &Opcode::Select = v4 {
                let v6 = C::unpack_value_array_3(ctx, v5);
                let v10 = C::def_inst(ctx, v6.1);
                if let Some(v11) = v10 {
                    let v12 = &C::inst_data(ctx, v11);
                    if let &InstructionData::UnaryImm {
                        opcode: ref v13,
                        imm: v14,
                    } = v12 {
                        if let &Opcode::Iconst = v13 {
                            let v15 = C::u64_from_imm64(ctx, v14);
                            if v15 == 0x0_u64 {
                                let v17 = C::offset32(ctx, arg1);
                                if v17 == 0_i32 {
                                    let v20 = C::memflags_is_wasm(ctx, arg2);
                                    if v20 == true {
                                        let v21 = &constructor_host_offset(ctx, v6.2);
                                        if let &HostOffset::All {
                                            a: v22,
                                            b: v23,
                                        } = v21 {
                                            let v24 = &constructor_wasm_oob_select(ctx, v6.0, v22);
                                            if let Some(v25) = v24 {
                                                if let &OobSelect::All {
                                                    a: v26,
                                                    b: v27,
                                                    c: v28,
                                                    d: v29,
                                                } = v25 {
                                                    let v30 = C::g32_offset(ctx, v23, arg3, v29);
                                                    if let Some(v31) = v30 {
                                                        let v32 = G32::All {
                                                            heap_base: v26,
                                                            heap_bound: v27,
                                                            wasm_addr: v28,
                                                            offset: v31,
                                                        };
                                                        let v33 = Some(v32);
                                                        // Rule at src/isa/pulley_shared/inst.isle line 337.
                                                        return v33;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    None
}

// Generated as internal constructor for term host_offset.
pub fn constructor_host_offset<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> HostOffset {
    let v3 = C::def_inst(ctx, arg0);
    if let Some(v4) = v3 {
        let v5 = &C::inst_data(ctx, v4);
        if let &InstructionData::Binary {
            opcode: ref v6,
            args: ref v7,
        } = v5 {
            if let &Opcode::Iadd = v6 {
                let v8 = C::unpack_value_array_2(ctx, v7);
                let v22 = C::i32_from_iconst(ctx, v8.0);
                if let Some(v23) = v22 {
                    let v24 = C::def_inst(ctx, v8.1);
                    if let Some(v25) = v24 {
                        let v26 = &C::inst_data(ctx, v25);
                        if let &InstructionData::Binary {
                            opcode: ref v27,
                            args: ref v28,
                        } = v26 {
                            if let &Opcode::Iadd = v27 {
                                let v32 = HostOffset::All {
                                    a: v8.1,
                                    b: v23,
                                };
                                // Rule at src/isa/pulley_shared/inst.isle line 374.
                                return v32;
                            }
                        }
                    }
                }
                let v11 = C::def_inst(ctx, v8.0);
                if let Some(v12) = v11 {
                    let v13 = &C::inst_data(ctx, v12);
                    if let &InstructionData::Binary {
                        opcode: ref v14,
                        args: ref v15,
                    } = v13 {
                        if let &Opcode::Iadd = v14 {
                            let v19 = C::i32_from_iconst(ctx, v8.1);
                            if let Some(v20) = v19 {
                                let v21 = HostOffset::All {
                                    a: v8.0,
                                    b: v20,
                                };
                                // Rule at src/isa/pulley_shared/inst.isle line 373.
                                return v21;
                            }
                        }
                    }
                }
            }
        }
    }
    let v2 = HostOffset::All {
        a: arg0,
        b: 0_i32,
    };
    // Rule at src/isa/pulley_shared/inst.isle line 372.
    return v2;
}

// Generated as internal constructor for term wasm_oob_select.
pub fn constructor_wasm_oob_select<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Value,
) -> Option<OobSelect> {
    let v2 = C::def_inst(ctx, arg1);
    if let Some(v3) = v2 {
        let v4 = &C::inst_data(ctx, v3);
        if let &InstructionData::Binary {
            opcode: ref v5,
            args: ref v6,
        } = v4 {
            if let &Opcode::Iadd = v5 {
                let v15 = &C::pointer_width(ctx);
                match v15 {
                    &PointerWidth::PointerWidth32 => {
                        let v7 = C::unpack_value_array_2(ctx, v6);
                        let v18 = C::value_type(ctx, v7.0);
                        if v18 == I32 {
                            let v19 = &constructor_wasm_oob_cond(ctx, v7.0, arg0);
                            if let Some(v20) = v19 {
                                if let &OobCond::All {
                                    a: v21,
                                    b: v22,
                                } = v20 {
                                    let v23 = OobSelect::All {
                                        a: v7.1,
                                        b: v21,
                                        c: v7.0,
                                        d: v22,
                                    };
                                    let v24 = Some(v23);
                                    // Rule at src/isa/pulley_shared/inst.isle line 388.
                                    return v24;
                                }
                            }
                        }
                        let v10 = C::value_type(ctx, v7.1);
                        if v10 == I32 {
                            let v11 = &constructor_wasm_oob_cond(ctx, v7.1, arg0);
                            if let Some(v12) = v11 {
                                if let &OobCond::All {
                                    a: v13,
                                    b: v14,
                                } = v12 {
                                    let v16 = OobSelect::All {
                                        a: v7.0,
                                        b: v13,
                                        c: v7.1,
                                        d: v14,
                                    };
                                    let v17 = Some(v16);
                                    // Rule at src/isa/pulley_shared/inst.isle line 384.
                                    return v17;
                                }
                            }
                        }
                    }
                    &PointerWidth::PointerWidth64 => {
                        let v7 = C::unpack_value_array_2(ctx, v6);
                        let v18 = C::value_type(ctx, v7.0);
                        if v18 == I64 {
                            let v19 = &constructor_wasm_oob_cond(ctx, v7.0, arg0);
                            if let Some(v20) = v19 {
                                if let &OobCond::All {
                                    a: v21,
                                    b: v22,
                                } = v20 {
                                    let v29 = constructor_wasm32_addr_for_host64(ctx, v7.0);
                                    if let Some(v30) = v29 {
                                        let v31 = OobSelect::All {
                                            a: v7.1,
                                            b: v21,
                                            c: v30,
                                            d: v22,
                                        };
                                        let v32 = Some(v31);
                                        // Rule at src/isa/pulley_shared/inst.isle line 400.
                                        return v32;
                                    }
                                }
                            }
                        }
                        let v10 = C::value_type(ctx, v7.1);
                        if v10 == I64 {
                            let v11 = &constructor_wasm_oob_cond(ctx, v7.1, arg0);
                            if let Some(v12) = v11 {
                                if let &OobCond::All {
                                    a: v13,
                                    b: v14,
                                } = v12 {
                                    let v25 = constructor_wasm32_addr_for_host64(ctx, v7.1);
                                    if let Some(v26) = v25 {
                                        let v27 = OobSelect::All {
                                            a: v7.0,
                                            b: v13,
                                            c: v26,
                                            d: v14,
                                        };
                                        let v28 = Some(v27);
                                        // Rule at src/isa/pulley_shared/inst.isle line 395.
                                        return v28;
                                    }
                                }
                            }
                        }
                    }
                    _ => {}
                }
            }
        }
    }
    None
}

// Generated as internal constructor for term wasm32_addr_for_host64.
pub fn constructor_wasm32_addr_for_host64<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> Option<Value> {
    let v1 = C::def_inst(ctx, arg0);
    if let Some(v2) = v1 {
        let v3 = &C::inst_data(ctx, v2);
        match v3 {
            &InstructionData::Unary {
                opcode: ref v4,
                arg: v5,
            } => {
                if let &Opcode::Uextend = v4 {
                    let v6 = C::value_type(ctx, v5);
                    if v6 == I32 {
                        let v7 = Some(v5);
                        // Rule at src/isa/pulley_shared/inst.isle line 411.
                        return v7;
                    }
                }
            }
            &InstructionData::UnaryImm {
                opcode: ref v8,
                imm: v9,
            } => {
                if let &Opcode::Iconst = v8 {
                    let v10 = C::u64_from_imm64(ctx, v9);
                    let v11 = C::u64_as_u32(ctx, v10);
                    if let Some(v12) = v11 {
                        let v13 = Some(arg0);
                        // Rule at src/isa/pulley_shared/inst.isle line 412.
                        return v13;
                    }
                }
            }
            _ => {}
        }
    }
    None
}

// Generated as internal constructor for term wasm_oob_cond.
pub fn constructor_wasm_oob_cond<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Value,
) -> Option<OobCond> {
    let v2 = C::def_inst(ctx, arg1);
    if let Some(v3) = v2 {
        let v4 = &C::inst_data(ctx, v3);
        if let &InstructionData::IntCompare {
            opcode: ref v5,
            args: ref v6,
            cond: ref v7,
        } = v4 {
            if let &Opcode::Icmp = v5 {
                match v7 {
                    &IntCC::UnsignedGreaterThan => {
                        let v8 = C::unpack_value_array_2(ctx, v6);
                        let v11 = C::def_inst(ctx, v8.1);
                        if let Some(v12) = v11 {
                            let v13 = &C::inst_data(ctx, v12);
                            if let &InstructionData::Binary {
                                opcode: ref v14,
                                args: ref v15,
                            } = v13 {
                                if let &Opcode::Isub = v14 {
                                    let v16 = C::unpack_value_array_2(ctx, v15);
                                    let v19 = C::def_inst(ctx, v16.1);
                                    if let Some(v20) = v19 {
                                        let v21 = &C::inst_data(ctx, v20);
                                        if let &InstructionData::UnaryImm {
                                            opcode: ref v22,
                                            imm: v23,
                                        } = v21 {
                                            if let &Opcode::Iconst = v22 {
                                                if arg0 == v8.0 {
                                                    let v24 = C::u64_from_imm64(ctx, v23);
                                                    let v25 = OobCond::All {
                                                        a: v16.0,
                                                        b: v24,
                                                    };
                                                    let v26 = Some(v25);
                                                    // Rule at src/isa/pulley_shared/inst.isle line 419.
                                                    return v26;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    &IntCC::UnsignedLessThan => {
                        let v8 = C::unpack_value_array_2(ctx, v6);
                        let v27 = C::def_inst(ctx, v8.0);
                        if let Some(v28) = v27 {
                            let v29 = &C::inst_data(ctx, v28);
                            if let &InstructionData::Binary {
                                opcode: ref v30,
                                args: ref v31,
                            } = v29 {
                                if let &Opcode::Isub = v30 {
                                    let v32 = C::unpack_value_array_2(ctx, v31);
                                    let v35 = C::def_inst(ctx, v32.1);
                                    if let Some(v36) = v35 {
                                        let v37 = &C::inst_data(ctx, v36);
                                        if let &InstructionData::UnaryImm {
                                            opcode: ref v38,
                                            imm: v39,
                                        } = v37 {
                                            if let &Opcode::Iconst = v38 {
                                                if arg0 == v8.1 {
                                                    let v40 = C::u64_from_imm64(ctx, v39);
                                                    let v41 = OobCond::All {
                                                        a: v32.0,
                                                        b: v40,
                                                    };
                                                    let v42 = Some(v41);
                                                    // Rule at src/isa/pulley_shared/inst.isle line 421.
                                                    return v42;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    _ => {}
                }
            }
        }
    }
    None
}

// Generated as internal constructor for term put_in_xreg.
pub fn constructor_put_in_xreg<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> XReg {
    let v1 = C::put_in_reg(ctx, arg0);
    let v2 = C::xreg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 453.
    return v2;
}

// Generated as internal constructor for term output_xreg.
pub fn constructor_output_xreg<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> InstOutput {
    let v1 = C::xreg_to_reg(ctx, arg0);
    let v2 = constructor_output_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 458.
    return v2;
}

// Generated as internal constructor for term writable_xreg_to_reg.
pub fn constructor_writable_xreg_to_reg<C: Context>(
    ctx: &mut C,
    arg0: WritableXReg,
) -> Reg {
    let v1 = C::writable_xreg_to_writable_reg(ctx, arg0);
    let v2 = C::writable_reg_to_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 473.
    return v2;
}

// Generated as internal constructor for term xreg_to_value_regs.
pub fn constructor_xreg_to_value_regs<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> ValueRegs {
    let v1 = C::xreg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 483.
    return v2;
}

// Generated as internal constructor for term writable_xreg_to_value_regs.
pub fn constructor_writable_xreg_to_value_regs<C: Context>(
    ctx: &mut C,
    arg0: WritableXReg,
) -> ValueRegs {
    let v1 = constructor_writable_xreg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 488.
    return v2;
}

// Generated as internal constructor for term temp_writable_xreg.
pub fn constructor_temp_writable_xreg<C: Context>(
    ctx: &mut C,
) -> WritableXReg {
    let v1 = C::temp_writable_reg(ctx, I64);
    let v2 = C::writable_xreg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 493.
    return v2;
}

// Generated as internal constructor for term put_in_freg.
pub fn constructor_put_in_freg<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> FReg {
    let v1 = C::put_in_reg(ctx, arg0);
    let v2 = C::freg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 513.
    return v2;
}

// Generated as internal constructor for term output_freg.
pub fn constructor_output_freg<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> InstOutput {
    let v1 = C::freg_to_reg(ctx, arg0);
    let v2 = constructor_output_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 518.
    return v2;
}

// Generated as internal constructor for term writable_freg_to_reg.
pub fn constructor_writable_freg_to_reg<C: Context>(
    ctx: &mut C,
    arg0: WritableFReg,
) -> Reg {
    let v1 = C::writable_freg_to_writable_reg(ctx, arg0);
    let v2 = C::writable_reg_to_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 533.
    return v2;
}

// Generated as internal constructor for term freg_to_value_regs.
pub fn constructor_freg_to_value_regs<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> ValueRegs {
    let v1 = C::freg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 543.
    return v2;
}

// Generated as internal constructor for term writable_freg_to_value_regs.
pub fn constructor_writable_freg_to_value_regs<C: Context>(
    ctx: &mut C,
    arg0: WritableFReg,
) -> ValueRegs {
    let v1 = constructor_writable_freg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 548.
    return v2;
}

// Generated as internal constructor for term temp_writable_freg.
pub fn constructor_temp_writable_freg<C: Context>(
    ctx: &mut C,
) -> WritableFReg {
    let v1 = C::temp_writable_reg(ctx, F64);
    let v2 = C::writable_freg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 553.
    return v2;
}

// Generated as internal constructor for term put_in_vreg.
pub fn constructor_put_in_vreg<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> VReg {
    let v1 = C::put_in_reg(ctx, arg0);
    let v2 = C::vreg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 573.
    return v2;
}

// Generated as internal constructor for term output_vreg.
pub fn constructor_output_vreg<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> InstOutput {
    let v1 = C::vreg_to_reg(ctx, arg0);
    let v2 = constructor_output_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 578.
    return v2;
}

// Generated as internal constructor for term writable_vreg_to_reg.
pub fn constructor_writable_vreg_to_reg<C: Context>(
    ctx: &mut C,
    arg0: WritableVReg,
) -> Reg {
    let v1 = C::writable_vreg_to_writable_reg(ctx, arg0);
    let v2 = C::writable_reg_to_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 593.
    return v2;
}

// Generated as internal constructor for term vreg_to_value_regs.
pub fn constructor_vreg_to_value_regs<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> ValueRegs {
    let v1 = C::vreg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 603.
    return v2;
}

// Generated as internal constructor for term writable_vreg_to_value_regs.
pub fn constructor_writable_vreg_to_value_regs<C: Context>(
    ctx: &mut C,
    arg0: WritableVReg,
) -> ValueRegs {
    let v1 = constructor_writable_vreg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 608.
    return v2;
}

// Generated as internal constructor for term temp_writable_vreg.
pub fn constructor_temp_writable_vreg<C: Context>(
    ctx: &mut C,
) -> WritableVReg {
    let v1 = C::temp_writable_reg(ctx, I8X16);
    let v2 = C::writable_vreg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 613.
    return v2;
}

// Generated as internal constructor for term imm.
pub fn constructor_imm<C: Context>(
    ctx: &mut C,
    arg0: Type,
    arg1: u64,
) -> Reg {
    let v1 = C::ty_int(ctx, arg0);
    if let Some(v2) = v1 {
        match arg1 {
            0x0_u64 => {
                let v4 = constructor_pulley_xzero(ctx);
                let v5 = C::xreg_to_reg(ctx, v4);
                // Rule at src/isa/pulley_shared/inst.isle line 620.
                return v5;
            }
            0x1_u64 => {
                let v6 = constructor_pulley_xone(ctx);
                let v7 = C::xreg_to_reg(ctx, v6);
                // Rule at src/isa/pulley_shared/inst.isle line 621.
                return v7;
            }
            _ => {}
        }
        let v8 = C::i8_try_from_u64(ctx, arg1);
        if let Some(v9) = v8 {
            let v10 = constructor_pulley_xconst8(ctx, v9);
            let v11 = C::xreg_to_reg(ctx, v10);
            // Rule at src/isa/pulley_shared/inst.isle line 624.
            return v11;
        }
        let v12 = C::i16_try_from_u64(ctx, arg1);
        if let Some(v13) = v12 {
            let v14 = constructor_pulley_xconst16(ctx, v13);
            let v15 = C::xreg_to_reg(ctx, v14);
            // Rule at src/isa/pulley_shared/inst.isle line 629.
            return v15;
        }
        let v16 = C::i32_try_from_u64(ctx, arg1);
        if let Some(v17) = v16 {
            let v18 = constructor_pulley_xconst32(ctx, v17);
            let v19 = C::xreg_to_reg(ctx, v18);
            // Rule at src/isa/pulley_shared/inst.isle line 634.
            return v19;
        }
    }
    match arg0 {
        I8 => {
            let v20 = C::u64_as_u8(ctx, arg1);
            let v21 = C::u8_as_i8(ctx, v20);
            let v22 = constructor_pulley_xconst8(ctx, v21);
            let v23 = C::xreg_to_reg(ctx, v22);
            // Rule at src/isa/pulley_shared/inst.isle line 639.
            return v23;
        }
        I16 => {
            let v24 = C::u64_as_u16(ctx, arg1);
            let v25 = C::u16_as_i16(ctx, v24);
            let v26 = constructor_pulley_xconst16(ctx, v25);
            let v27 = C::xreg_to_reg(ctx, v26);
            // Rule at src/isa/pulley_shared/inst.isle line 640.
            return v27;
        }
        I32 => {
            let v28 = C::u64_as_i32(ctx, arg1);
            let v29 = constructor_pulley_xconst32(ctx, v28);
            let v30 = C::xreg_to_reg(ctx, v29);
            // Rule at src/isa/pulley_shared/inst.isle line 641.
            return v30;
        }
        I64 => {
            let v31 = C::u64_as_i64(ctx, arg1);
            let v32 = constructor_pulley_xconst64(ctx, v31);
            let v33 = C::xreg_to_reg(ctx, v32);
            // Rule at src/isa/pulley_shared/inst.isle line 642.
            return v33;
        }
        F32 => {
            let v34 = C::u64_as_u32(ctx, arg1);
            if let Some(v35) = v34 {
                let v36 = constructor_pulley_fconst32(ctx, v35);
                let v37 = C::freg_to_reg(ctx, v36);
                // Rule at src/isa/pulley_shared/inst.isle line 645.
                return v37;
            }
        }
        F64 => {
            let v38 = constructor_pulley_fconst64(ctx, arg1);
            let v39 = C::freg_to_reg(ctx, v38);
            // Rule at src/isa/pulley_shared/inst.isle line 646.
            return v39;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "imm", "src/isa/pulley_shared/inst.isle line 618")
}

// Generated as internal constructor for term pulley_trap_if.
pub fn constructor_pulley_trap_if<C: Context>(
    ctx: &mut C,
    arg0: &Cond,
    arg1: &TrapCode,
) -> SideEffectNoResult {
    let v2 = MInst::TrapIf {
        cond: arg0.clone(),
        code: arg1.clone(),
    };
    let v3 = SideEffectNoResult::Inst {
        inst: v2,
    };
    // Rule at src/isa/pulley_shared/inst.isle line 651.
    return v3;
}

// Generated as internal constructor for term pulley_get_special.
pub fn constructor_pulley_get_special<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = MInst::GetSpecial {
        dst: v1,
        reg: arg0,
    };
    let v3 = C::emit(ctx, &v2);
    let v4 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 658.
    return v4;
}

// Generated as internal constructor for term pulley_jump.
pub fn constructor_pulley_jump<C: Context>(
    ctx: &mut C,
    arg0: MachLabel,
) -> SideEffectNoResult {
    let v1 = MInst::Jump {
        label: arg0,
    };
    let v2 = SideEffectNoResult::Inst {
        inst: v1,
    };
    // Rule at src/isa/pulley_shared/inst.isle line 664.
    return v2;
}

// Generated as internal constructor for term pulley_br_if.
pub fn constructor_pulley_br_if<C: Context>(
    ctx: &mut C,
    arg0: &Cond,
    arg1: MachLabel,
    arg2: MachLabel,
) -> SideEffectNoResult {
    let v3 = MInst::BrIf {
        cond: arg0.clone(),
        taken: arg1,
        not_taken: arg2,
    };
    let v4 = SideEffectNoResult::Inst {
        inst: v3,
    };
    // Rule at src/isa/pulley_shared/inst.isle line 668.
    return v4;
}

// Generated as internal constructor for term pulley_xload.
pub fn constructor_pulley_xload<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: Type,
    arg2: MemFlags,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = MInst::XLoad {
        dst: v3,
        mem: arg0.clone(),
        ty: arg1,
        flags: arg2,
    };
    let v5 = C::emit(ctx, &v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at src/isa/pulley_shared/inst.isle line 672.
    return v6;
}

// Generated as internal constructor for term pulley_xstore.
pub fn constructor_pulley_xstore<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: XReg,
    arg2: Type,
    arg3: MemFlags,
) -> SideEffectNoResult {
    let v4 = MInst::XStore {
        mem: arg0.clone(),
        src: arg1,
        ty: arg2,
        flags: arg3,
    };
    let v5 = SideEffectNoResult::Inst {
        inst: v4,
    };
    // Rule at src/isa/pulley_shared/inst.isle line 678.
    return v5;
}

// Generated as internal constructor for term pulley_fload.
pub fn constructor_pulley_fload<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: Type,
    arg2: MemFlags,
) -> FReg {
    let v3 = constructor_temp_writable_freg(ctx);
    let v4 = MInst::FLoad {
        dst: v3,
        mem: arg0.clone(),
        ty: arg1,
        flags: arg2,
    };
    let v5 = C::emit(ctx, &v4);
    let v6 = C::writable_freg_to_freg(ctx, v3);
    // Rule at src/isa/pulley_shared/inst.isle line 682.
    return v6;
}

// Generated as internal constructor for term pulley_fstore.
pub fn constructor_pulley_fstore<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: FReg,
    arg2: Type,
    arg3: MemFlags,
) -> SideEffectNoResult {
    let v4 = MInst::FStore {
        mem: arg0.clone(),
        src: arg1,
        ty: arg2,
        flags: arg3,
    };
    let v5 = SideEffectNoResult::Inst {
        inst: v4,
    };
    // Rule at src/isa/pulley_shared/inst.isle line 688.
    return v5;
}

// Generated as internal constructor for term pulley_vload.
pub fn constructor_pulley_vload<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: Type,
    arg2: MemFlags,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = MInst::VLoad {
        dst: v3,
        mem: arg0.clone(),
        ty: arg1,
        flags: arg2,
    };
    let v5 = C::emit(ctx, &v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at src/isa/pulley_shared/inst.isle line 692.
    return v6;
}

// Generated as internal constructor for term pulley_vstore.
pub fn constructor_pulley_vstore<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: VReg,
    arg2: Type,
    arg3: MemFlags,
) -> SideEffectNoResult {
    let v4 = MInst::VStore {
        mem: arg0.clone(),
        src: arg1,
        ty: arg2,
        flags: arg3,
    };
    let v5 = SideEffectNoResult::Inst {
        inst: v4,
    };
    // Rule at src/isa/pulley_shared/inst.isle line 698.
    return v5;
}

// Generated as internal constructor for term gen_br_table.
pub fn constructor_gen_br_table<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: MachLabel,
    arg2: &BoxVecMachLabel,
) -> Unit {
    let v3 = MInst::BrTable {
        idx: arg0,
        default: arg1,
        targets: arg2.clone(),
    };
    let v4 = C::emit(ctx, &v3);
    // Rule at src/isa/pulley_shared/inst.isle line 702.
    return v4;
}

// Generated as internal constructor for term zext32.
pub fn constructor_zext32<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> XReg {
    let v1 = C::value_type(ctx, arg0);
    match v1 {
        I8 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v3 = constructor_pulley_zext8(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 717.
            return v3;
        }
        I16 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v4 = constructor_pulley_zext16(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 718.
            return v4;
        }
        I32 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            // Rule at src/isa/pulley_shared/inst.isle line 719.
            return v2;
        }
        I64 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            // Rule at src/isa/pulley_shared/inst.isle line 720.
            return v2;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "zext32", "src/isa/pulley_shared/inst.isle line 716")
}

// Generated as internal constructor for term sext32.
pub fn constructor_sext32<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> XReg {
    let v1 = C::value_type(ctx, arg0);
    match v1 {
        I8 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v3 = constructor_pulley_sext8(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 724.
            return v3;
        }
        I16 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v4 = constructor_pulley_sext16(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 725.
            return v4;
        }
        I32 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            // Rule at src/isa/pulley_shared/inst.isle line 726.
            return v2;
        }
        I64 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            // Rule at src/isa/pulley_shared/inst.isle line 727.
            return v2;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "sext32", "src/isa/pulley_shared/inst.isle line 723")
}

// Generated as internal constructor for term zext64.
pub fn constructor_zext64<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> XReg {
    let v1 = C::value_type(ctx, arg0);
    match v1 {
        I8 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v3 = constructor_pulley_zext8(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 731.
            return v3;
        }
        I16 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v4 = constructor_pulley_zext16(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 732.
            return v4;
        }
        I32 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v5 = constructor_pulley_zext32(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 733.
            return v5;
        }
        I64 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            // Rule at src/isa/pulley_shared/inst.isle line 734.
            return v2;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "zext64", "src/isa/pulley_shared/inst.isle line 730")
}

// Generated as internal constructor for term sext64.
pub fn constructor_sext64<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> XReg {
    let v1 = C::value_type(ctx, arg0);
    match v1 {
        I8 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v3 = constructor_pulley_sext8(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 738.
            return v3;
        }
        I16 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v4 = constructor_pulley_sext16(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 739.
            return v4;
        }
        I32 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v5 = constructor_pulley_sext32(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 740.
            return v5;
        }
        I64 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            // Rule at src/isa/pulley_shared/inst.isle line 741.
            return v2;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "sext64", "src/isa/pulley_shared/inst.isle line 737")
}

// Generated as internal constructor for term lower.
pub fn constructor_lower<C: Context>(
    ctx: &mut C,
    arg0: Inst,
) -> Option<InstOutput> {
    let v1 = &C::inst_data(ctx, arg0);
    match v1 {
        &InstructionData::Binary {
            opcode: ref v86,
            args: ref v87,
        } => {
            match v86 {
                &Opcode::Swizzle => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == I8X16 {
                            let v88 = C::unpack_value_array_2(ctx, v87);
                            let v154 = constructor_put_in_vreg(ctx, v88.0);
                            let v155 = constructor_put_in_vreg(ctx, v88.1);
                            let v1552 = constructor_pulley_vswizzlei8x16(ctx, v154, v155);
                            let v1553 = constructor_output_vreg(ctx, v1552);
                            let v1554 = Some(v1553);
                            // Rule at src/isa/pulley_shared/lower.isle line 1765.
                            return v1554;
                        }
                    }
                }
                &Opcode::Smin => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v632 = constructor_pulley_xmin64_s(ctx, v91, v92);
                                let v633 = constructor_output_xreg(ctx, v632);
                                let v634 = Some(v633);
                                // Rule at src/isa/pulley_shared/lower.isle line 598.
                                return v634;
                            }
                            I8X16 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v635 = constructor_pulley_vmin8x16_s(ctx, v154, v155);
                                let v636 = constructor_output_vreg(ctx, v635);
                                let v637 = Some(v636);
                                // Rule at src/isa/pulley_shared/lower.isle line 599.
                                return v637;
                            }
                            I16X8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v638 = constructor_pulley_vmin16x8_s(ctx, v154, v155);
                                let v639 = constructor_output_vreg(ctx, v638);
                                let v640 = Some(v639);
                                // Rule at src/isa/pulley_shared/lower.isle line 600.
                                return v640;
                            }
                            I32X4 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v641 = constructor_pulley_vmin32x4_s(ctx, v154, v155);
                                let v642 = constructor_output_vreg(ctx, v641);
                                let v643 = Some(v642);
                                // Rule at src/isa/pulley_shared/lower.isle line 601.
                                return v643;
                            }
                            _ => {}
                        }
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v88 = C::unpack_value_array_2(ctx, v87);
                            let v375 = constructor_sext32(ctx, v88.0);
                            let v376 = constructor_sext32(ctx, v88.1);
                            let v629 = constructor_pulley_xmin32_s(ctx, v375, v376);
                            let v630 = constructor_output_xreg(ctx, v629);
                            let v631 = Some(v630);
                            // Rule at src/isa/pulley_shared/lower.isle line 596.
                            return v631;
                        }
                    }
                }
                &Opcode::Umin => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v617 = constructor_pulley_xmin64_u(ctx, v91, v92);
                                let v618 = constructor_output_xreg(ctx, v617);
                                let v619 = Some(v618);
                                // Rule at src/isa/pulley_shared/lower.isle line 589.
                                return v619;
                            }
                            I8X16 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v620 = constructor_pulley_vmin8x16_u(ctx, v154, v155);
                                let v621 = constructor_output_vreg(ctx, v620);
                                let v622 = Some(v621);
                                // Rule at src/isa/pulley_shared/lower.isle line 590.
                                return v622;
                            }
                            I16X8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v623 = constructor_pulley_vmin16x8_u(ctx, v154, v155);
                                let v624 = constructor_output_vreg(ctx, v623);
                                let v625 = Some(v624);
                                // Rule at src/isa/pulley_shared/lower.isle line 591.
                                return v625;
                            }
                            I32X4 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v626 = constructor_pulley_vmin32x4_u(ctx, v154, v155);
                                let v627 = constructor_output_vreg(ctx, v626);
                                let v628 = Some(v627);
                                // Rule at src/isa/pulley_shared/lower.isle line 592.
                                return v628;
                            }
                            _ => {}
                        }
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v88 = C::unpack_value_array_2(ctx, v87);
                            let v349 = constructor_zext32(ctx, v88.0);
                            let v350 = constructor_zext32(ctx, v88.1);
                            let v614 = constructor_pulley_xmin32_u(ctx, v349, v350);
                            let v615 = constructor_output_xreg(ctx, v614);
                            let v616 = Some(v615);
                            // Rule at src/isa/pulley_shared/lower.isle line 587.
                            return v616;
                        }
                    }
                }
                &Opcode::Smax => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v662 = constructor_pulley_xmax64_s(ctx, v91, v92);
                                let v663 = constructor_output_xreg(ctx, v662);
                                let v664 = Some(v663);
                                // Rule at src/isa/pulley_shared/lower.isle line 616.
                                return v664;
                            }
                            I8X16 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v665 = constructor_pulley_vmax8x16_s(ctx, v154, v155);
                                let v666 = constructor_output_vreg(ctx, v665);
                                let v667 = Some(v666);
                                // Rule at src/isa/pulley_shared/lower.isle line 617.
                                return v667;
                            }
                            I16X8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v668 = constructor_pulley_vmax16x8_s(ctx, v154, v155);
                                let v669 = constructor_output_vreg(ctx, v668);
                                let v670 = Some(v669);
                                // Rule at src/isa/pulley_shared/lower.isle line 618.
                                return v670;
                            }
                            I32X4 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v671 = constructor_pulley_vmax32x4_s(ctx, v154, v155);
                                let v672 = constructor_output_vreg(ctx, v671);
                                let v673 = Some(v672);
                                // Rule at src/isa/pulley_shared/lower.isle line 619.
                                return v673;
                            }
                            _ => {}
                        }
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v88 = C::unpack_value_array_2(ctx, v87);
                            let v375 = constructor_sext32(ctx, v88.0);
                            let v376 = constructor_sext32(ctx, v88.1);
                            let v659 = constructor_pulley_xmax32_s(ctx, v375, v376);
                            let v660 = constructor_output_xreg(ctx, v659);
                            let v661 = Some(v660);
                            // Rule at src/isa/pulley_shared/lower.isle line 614.
                            return v661;
                        }
                    }
                }
                &Opcode::Umax => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v647 = constructor_pulley_xmax64_u(ctx, v91, v92);
                                let v648 = constructor_output_xreg(ctx, v647);
                                let v649 = Some(v648);
                                // Rule at src/isa/pulley_shared/lower.isle line 607.
                                return v649;
                            }
                            I8X16 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v650 = constructor_pulley_vmax8x16_u(ctx, v154, v155);
                                let v651 = constructor_output_vreg(ctx, v650);
                                let v652 = Some(v651);
                                // Rule at src/isa/pulley_shared/lower.isle line 608.
                                return v652;
                            }
                            I16X8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v653 = constructor_pulley_vmax16x8_u(ctx, v154, v155);
                                let v654 = constructor_output_vreg(ctx, v653);
                                let v655 = Some(v654);
                                // Rule at src/isa/pulley_shared/lower.isle line 609.
                                return v655;
                            }
                            I32X4 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v656 = constructor_pulley_vmax32x4_u(ctx, v154, v155);
                                let v657 = constructor_output_vreg(ctx, v656);
                                let v658 = Some(v657);
                                // Rule at src/isa/pulley_shared/lower.isle line 610.
                                return v658;
                            }
                            _ => {}
                        }
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v88 = C::unpack_value_array_2(ctx, v87);
                            let v349 = constructor_zext32(ctx, v88.0);
                            let v350 = constructor_zext32(ctx, v88.1);
                            let v644 = constructor_pulley_xmax32_u(ctx, v349, v350);
                            let v645 = constructor_output_xreg(ctx, v644);
                            let v646 = Some(v645);
                            // Rule at src/isa/pulley_shared/lower.isle line 605.
                            return v646;
                        }
                    }
                }
                &Opcode::AvgRound => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I8X16 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v422 = constructor_pulley_vavground8x16(ctx, v154, v155);
                                let v423 = constructor_output_vreg(ctx, v422);
                                let v424 = Some(v423);
                                // Rule at src/isa/pulley_shared/lower.isle line 418.
                                return v424;
                            }
                            I16X8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v425 = constructor_pulley_vavground16x8(ctx, v154, v155);
                                let v426 = constructor_output_vreg(ctx, v425);
                                let v427 = Some(v426);
                                // Rule at src/isa/pulley_shared/lower.isle line 419.
                                return v427;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::UaddSat => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I8X16 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v171 = constructor_pulley_vaddu8x16_sat(ctx, v154, v155);
                                let v172 = constructor_output_vreg(ctx, v171);
                                let v173 = Some(v172);
                                // Rule at src/isa/pulley_shared/lower.isle line 234.
                                return v173;
                            }
                            I16X8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v177 = constructor_pulley_vaddu16x8_sat(ctx, v154, v155);
                                let v178 = constructor_output_vreg(ctx, v177);
                                let v179 = Some(v178);
                                // Rule at src/isa/pulley_shared/lower.isle line 236.
                                return v179;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::SaddSat => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I8X16 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v168 = constructor_pulley_vaddi8x16_sat(ctx, v154, v155);
                                let v169 = constructor_output_vreg(ctx, v168);
                                let v170 = Some(v169);
                                // Rule at src/isa/pulley_shared/lower.isle line 233.
                                return v170;
                            }
                            I16X8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v174 = constructor_pulley_vaddi16x8_sat(ctx, v154, v155);
                                let v175 = constructor_output_vreg(ctx, v174);
                                let v176 = Some(v175);
                                // Rule at src/isa/pulley_shared/lower.isle line 235.
                                return v176;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::UsubSat => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I8X16 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v265 = constructor_pulley_vsubu8x16_sat(ctx, v154, v155);
                                let v266 = constructor_output_vreg(ctx, v265);
                                let v267 = Some(v266);
                                // Rule at src/isa/pulley_shared/lower.isle line 297.
                                return v267;
                            }
                            I16X8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v271 = constructor_pulley_vsubu16x8_sat(ctx, v154, v155);
                                let v272 = constructor_output_vreg(ctx, v271);
                                let v273 = Some(v272);
                                // Rule at src/isa/pulley_shared/lower.isle line 299.
                                return v273;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::SsubSat => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I8X16 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v262 = constructor_pulley_vsubi8x16_sat(ctx, v154, v155);
                                let v263 = constructor_output_vreg(ctx, v262);
                                let v264 = Some(v263);
                                // Rule at src/isa/pulley_shared/lower.isle line 296.
                                return v264;
                            }
                            I16X8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v268 = constructor_pulley_vsubi16x8_sat(ctx, v154, v155);
                                let v269 = constructor_output_vreg(ctx, v268);
                                let v270 = Some(v269);
                                // Rule at src/isa/pulley_shared/lower.isle line 298.
                                return v270;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Iadd => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v88 = C::unpack_value_array_2(ctx, v87);
                        let v131 = constructor_u8_from_negated_iconst(ctx, v88.1);
                        if let Some(v132) = v131 {
                            let v60 = C::value_type(ctx, v59);
                            if v60 == I64 {
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v136 = constructor_pulley_xsub64_u8(ctx, v91, v132);
                                let v137 = constructor_output_xreg(ctx, v136);
                                let v138 = Some(v137);
                                // Rule at src/isa/pulley_shared/lower.isle line 195.
                                return v138;
                            }
                            let v82 = C::ty_int(ctx, v60);
                            if let Some(v83) = v82 {
                                let v99 = C::fits_in_32(ctx, v83);
                                if let Some(v100) = v99 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v133 = constructor_pulley_xsub32_u8(ctx, v91, v132);
                                    let v134 = constructor_output_xreg(ctx, v133);
                                    let v135 = Some(v134);
                                    // Rule at src/isa/pulley_shared/lower.isle line 192.
                                    return v135;
                                }
                            }
                        }
                        let v123 = constructor_u32_from_negated_iconst(ctx, v88.1);
                        if let Some(v124) = v123 {
                            let v60 = C::value_type(ctx, v59);
                            if v60 == I64 {
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v128 = constructor_pulley_xsub64_u32(ctx, v91, v124);
                                let v129 = constructor_output_xreg(ctx, v128);
                                let v130 = Some(v129);
                                // Rule at src/isa/pulley_shared/lower.isle line 189.
                                return v130;
                            }
                            let v82 = C::ty_int(ctx, v60);
                            if let Some(v83) = v82 {
                                let v99 = C::fits_in_32(ctx, v83);
                                if let Some(v100) = v99 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v125 = constructor_pulley_xsub32_u32(ctx, v91, v124);
                                    let v126 = constructor_output_xreg(ctx, v125);
                                    let v127 = Some(v126);
                                    // Rule at src/isa/pulley_shared/lower.isle line 186.
                                    return v127;
                                }
                            }
                        }
                        let v101 = C::def_inst(ctx, v88.1);
                        if let Some(v102) = v101 {
                            let v103 = &C::inst_data(ctx, v102);
                            match v103 {
                                &InstructionData::Binary {
                                    opcode: ref v194,
                                    args: ref v195,
                                } => {
                                    if let &Opcode::Imul = v194 {
                                        let v60 = C::value_type(ctx, v59);
                                        match v60 {
                                            I32 => {
                                                let v196 = C::unpack_value_array_2(ctx, v195);
                                                let v199 = constructor_put_in_xreg(ctx, v196.0);
                                                let v200 = constructor_put_in_xreg(ctx, v196.1);
                                                let v201 = constructor_put_in_xreg(ctx, v88.0);
                                                let v202 = constructor_pulley_xmadd32(ctx, v199, v200, v201);
                                                let v203 = constructor_output_xreg(ctx, v202);
                                                let v204 = Some(v203);
                                                // Rule at src/isa/pulley_shared/lower.isle line 241.
                                                return v204;
                                            }
                                            I64 => {
                                                let v196 = C::unpack_value_array_2(ctx, v195);
                                                let v199 = constructor_put_in_xreg(ctx, v196.0);
                                                let v200 = constructor_put_in_xreg(ctx, v196.1);
                                                let v201 = constructor_put_in_xreg(ctx, v88.0);
                                                let v208 = constructor_pulley_xmadd64(ctx, v199, v200, v201);
                                                let v209 = constructor_output_xreg(ctx, v208);
                                                let v210 = Some(v209);
                                                // Rule at src/isa/pulley_shared/lower.isle line 243.
                                                return v210;
                                            }
                                            _ => {}
                                        }
                                    }
                                }
                                &InstructionData::UnaryImm {
                                    opcode: ref v104,
                                    imm: v105,
                                } => {
                                    if let &Opcode::Iconst = v104 {
                                        let v60 = C::value_type(ctx, v59);
                                        if v60 == I64 {
                                            let v112 = C::uimm8(ctx, v105);
                                            if let Some(v113) = v112 {
                                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                                let v120 = constructor_pulley_xadd64_u8(ctx, v91, v113);
                                                let v121 = constructor_output_xreg(ctx, v120);
                                                let v122 = Some(v121);
                                                // Rule at src/isa/pulley_shared/lower.isle line 181.
                                                return v122;
                                            }
                                            let v106 = C::u64_from_imm64(ctx, v105);
                                            let v107 = C::u64_as_u32(ctx, v106);
                                            if let Some(v108) = v107 {
                                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                                let v117 = constructor_pulley_xadd64_u32(ctx, v91, v108);
                                                let v118 = constructor_output_xreg(ctx, v117);
                                                let v119 = Some(v118);
                                                // Rule at src/isa/pulley_shared/lower.isle line 179.
                                                return v119;
                                            }
                                        }
                                        let v82 = C::ty_int(ctx, v60);
                                        if let Some(v83) = v82 {
                                            let v99 = C::fits_in_32(ctx, v83);
                                            if let Some(v100) = v99 {
                                                let v112 = C::uimm8(ctx, v105);
                                                if let Some(v113) = v112 {
                                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                                    let v114 = constructor_pulley_xadd32_u8(ctx, v91, v113);
                                                    let v115 = constructor_output_xreg(ctx, v114);
                                                    let v116 = Some(v115);
                                                    // Rule at src/isa/pulley_shared/lower.isle line 177.
                                                    return v116;
                                                }
                                                let v106 = C::u64_from_imm64(ctx, v105);
                                                let v107 = C::u64_as_u32(ctx, v106);
                                                if let Some(v108) = v107 {
                                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                                    let v109 = constructor_pulley_xadd32_u32(ctx, v91, v108);
                                                    let v110 = constructor_output_xreg(ctx, v109);
                                                    let v111 = Some(v110);
                                                    // Rule at src/isa/pulley_shared/lower.isle line 175.
                                                    return v111;
                                                }
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            }
                        }
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I32 => {
                                let v180 = C::def_inst(ctx, v88.0);
                                if let Some(v181) = v180 {
                                    let v182 = &C::inst_data(ctx, v181);
                                    if let &InstructionData::Binary {
                                        opcode: ref v183,
                                        args: ref v184,
                                    } = v182 {
                                        if let &Opcode::Imul = v183 {
                                            let v185 = C::unpack_value_array_2(ctx, v184);
                                            let v188 = constructor_put_in_xreg(ctx, v185.0);
                                            let v189 = constructor_put_in_xreg(ctx, v185.1);
                                            let v190 = constructor_put_in_xreg(ctx, v88.1);
                                            let v191 = constructor_pulley_xmadd32(ctx, v188, v189, v190);
                                            let v192 = constructor_output_xreg(ctx, v191);
                                            let v193 = Some(v192);
                                            // Rule at src/isa/pulley_shared/lower.isle line 240.
                                            return v193;
                                        }
                                    }
                                }
                            }
                            I64 => {
                                let v180 = C::def_inst(ctx, v88.0);
                                if let Some(v181) = v180 {
                                    let v182 = &C::inst_data(ctx, v181);
                                    if let &InstructionData::Binary {
                                        opcode: ref v183,
                                        args: ref v184,
                                    } = v182 {
                                        if let &Opcode::Imul = v183 {
                                            let v185 = C::unpack_value_array_2(ctx, v184);
                                            let v188 = constructor_put_in_xreg(ctx, v185.0);
                                            let v189 = constructor_put_in_xreg(ctx, v185.1);
                                            let v190 = constructor_put_in_xreg(ctx, v88.1);
                                            let v205 = constructor_pulley_xmadd64(ctx, v188, v189, v190);
                                            let v206 = constructor_output_xreg(ctx, v205);
                                            let v207 = Some(v206);
                                            // Rule at src/isa/pulley_shared/lower.isle line 242.
                                            return v207;
                                        }
                                    }
                                }
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v96 = constructor_pulley_xadd64(ctx, v91, v92);
                                let v97 = constructor_output_xreg(ctx, v96);
                                let v98 = Some(v97);
                                // Rule at src/isa/pulley_shared/lower.isle line 172.
                                return v98;
                            }
                            I128 => {
                                let v139 = C::put_in_regs(ctx, v88.0);
                                let v140 = C::put_in_regs(ctx, v88.1);
                                let v142 = C::value_regs_get(ctx, v139, 0x0_usize);
                                let v143 = C::xreg_new(ctx, v142);
                                let v145 = C::value_regs_get(ctx, v139, 0x1_usize);
                                let v146 = C::xreg_new(ctx, v145);
                                let v147 = C::value_regs_get(ctx, v140, 0x0_usize);
                                let v148 = C::xreg_new(ctx, v147);
                                let v149 = C::value_regs_get(ctx, v140, 0x1_usize);
                                let v150 = C::xreg_new(ctx, v149);
                                let v151 = constructor_pulley_xadd128(ctx, v143, v146, v148, v150);
                                let v152 = C::output(ctx, v151);
                                let v153 = Some(v152);
                                // Rule at src/isa/pulley_shared/lower.isle line 218.
                                return v153;
                            }
                            I8X16 => {
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v156 = constructor_pulley_vaddi8x16(ctx, v154, v155);
                                let v157 = constructor_output_vreg(ctx, v156);
                                let v158 = Some(v157);
                                // Rule at src/isa/pulley_shared/lower.isle line 228.
                                return v158;
                            }
                            I16X8 => {
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v159 = constructor_pulley_vaddi16x8(ctx, v154, v155);
                                let v160 = constructor_output_vreg(ctx, v159);
                                let v161 = Some(v160);
                                // Rule at src/isa/pulley_shared/lower.isle line 229.
                                return v161;
                            }
                            I32X4 => {
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v162 = constructor_pulley_vaddi32x4(ctx, v154, v155);
                                let v163 = constructor_output_vreg(ctx, v162);
                                let v164 = Some(v163);
                                // Rule at src/isa/pulley_shared/lower.isle line 230.
                                return v164;
                            }
                            I64X2 => {
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v165 = constructor_pulley_vaddi64x2(ctx, v154, v155);
                                let v166 = constructor_output_vreg(ctx, v165);
                                let v167 = Some(v166);
                                // Rule at src/isa/pulley_shared/lower.isle line 231.
                                return v167;
                            }
                            _ => {}
                        }
                        let v82 = C::ty_int(ctx, v60);
                        if let Some(v83) = v82 {
                            let v84 = C::fits_in_64(ctx, v83);
                            if let Some(v85) = v84 {
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v93 = constructor_pulley_xadd32(ctx, v91, v92);
                                let v94 = constructor_output_xreg(ctx, v93);
                                let v95 = Some(v94);
                                // Rule at src/isa/pulley_shared/lower.isle line 171.
                                return v95;
                            }
                        }
                    }
                }
                &Opcode::Isub => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v88 = C::unpack_value_array_2(ctx, v87);
                        let v131 = constructor_u8_from_negated_iconst(ctx, v88.1);
                        if let Some(v132) = v131 {
                            let v60 = C::value_type(ctx, v59);
                            if v60 == I64 {
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v244 = constructor_pulley_xadd64_u8(ctx, v91, v132);
                                let v245 = constructor_output_xreg(ctx, v244);
                                let v246 = Some(v245);
                                // Rule at src/isa/pulley_shared/lower.isle line 276.
                                return v246;
                            }
                            let v82 = C::ty_int(ctx, v60);
                            if let Some(v83) = v82 {
                                let v99 = C::fits_in_32(ctx, v83);
                                if let Some(v100) = v99 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v241 = constructor_pulley_xadd32_u8(ctx, v91, v132);
                                    let v242 = constructor_output_xreg(ctx, v241);
                                    let v243 = Some(v242);
                                    // Rule at src/isa/pulley_shared/lower.isle line 273.
                                    return v243;
                                }
                            }
                        }
                        let v123 = constructor_u32_from_negated_iconst(ctx, v88.1);
                        if let Some(v124) = v123 {
                            let v60 = C::value_type(ctx, v59);
                            if v60 == I64 {
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v238 = constructor_pulley_xadd64_u32(ctx, v91, v124);
                                let v239 = constructor_output_xreg(ctx, v238);
                                let v240 = Some(v239);
                                // Rule at src/isa/pulley_shared/lower.isle line 270.
                                return v240;
                            }
                            let v82 = C::ty_int(ctx, v60);
                            if let Some(v83) = v82 {
                                let v99 = C::fits_in_32(ctx, v83);
                                if let Some(v100) = v99 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v235 = constructor_pulley_xadd32_u32(ctx, v91, v124);
                                    let v236 = constructor_output_xreg(ctx, v235);
                                    let v237 = Some(v236);
                                    // Rule at src/isa/pulley_shared/lower.isle line 267.
                                    return v237;
                                }
                            }
                        }
                        let v101 = C::def_inst(ctx, v88.1);
                        if let Some(v102) = v101 {
                            let v103 = &C::inst_data(ctx, v102);
                            if let &InstructionData::UnaryImm {
                                opcode: ref v104,
                                imm: v105,
                            } = v103 {
                                if let &Opcode::Iconst = v104 {
                                    let v60 = C::value_type(ctx, v59);
                                    if v60 == I64 {
                                        let v112 = C::uimm8(ctx, v105);
                                        if let Some(v113) = v112 {
                                            let v91 = constructor_put_in_xreg(ctx, v88.0);
                                            let v232 = constructor_pulley_xsub64_u8(ctx, v91, v113);
                                            let v233 = constructor_output_xreg(ctx, v232);
                                            let v234 = Some(v233);
                                            // Rule at src/isa/pulley_shared/lower.isle line 262.
                                            return v234;
                                        }
                                        let v106 = C::u64_from_imm64(ctx, v105);
                                        let v107 = C::u64_as_u32(ctx, v106);
                                        if let Some(v108) = v107 {
                                            let v91 = constructor_put_in_xreg(ctx, v88.0);
                                            let v229 = constructor_pulley_xsub64_u32(ctx, v91, v108);
                                            let v230 = constructor_output_xreg(ctx, v229);
                                            let v231 = Some(v230);
                                            // Rule at src/isa/pulley_shared/lower.isle line 260.
                                            return v231;
                                        }
                                    }
                                    let v82 = C::ty_int(ctx, v60);
                                    if let Some(v83) = v82 {
                                        let v99 = C::fits_in_32(ctx, v83);
                                        if let Some(v100) = v99 {
                                            let v112 = C::uimm8(ctx, v105);
                                            if let Some(v113) = v112 {
                                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                                let v226 = constructor_pulley_xsub32_u8(ctx, v91, v113);
                                                let v227 = constructor_output_xreg(ctx, v226);
                                                let v228 = Some(v227);
                                                // Rule at src/isa/pulley_shared/lower.isle line 258.
                                                return v228;
                                            }
                                            let v106 = C::u64_from_imm64(ctx, v105);
                                            let v107 = C::u64_as_u32(ctx, v106);
                                            if let Some(v108) = v107 {
                                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                                let v223 = constructor_pulley_xsub32_u32(ctx, v91, v108);
                                                let v224 = constructor_output_xreg(ctx, v223);
                                                let v225 = Some(v224);
                                                // Rule at src/isa/pulley_shared/lower.isle line 256.
                                                return v225;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I64 => {
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v220 = constructor_pulley_xsub64(ctx, v91, v92);
                                let v221 = constructor_output_xreg(ctx, v220);
                                let v222 = Some(v221);
                                // Rule at src/isa/pulley_shared/lower.isle line 253.
                                return v222;
                            }
                            I128 => {
                                let v139 = C::put_in_regs(ctx, v88.0);
                                let v140 = C::put_in_regs(ctx, v88.1);
                                let v142 = C::value_regs_get(ctx, v139, 0x0_usize);
                                let v143 = C::xreg_new(ctx, v142);
                                let v145 = C::value_regs_get(ctx, v139, 0x1_usize);
                                let v146 = C::xreg_new(ctx, v145);
                                let v147 = C::value_regs_get(ctx, v140, 0x0_usize);
                                let v148 = C::xreg_new(ctx, v147);
                                let v149 = C::value_regs_get(ctx, v140, 0x1_usize);
                                let v150 = C::xreg_new(ctx, v149);
                                let v247 = constructor_pulley_xsub128(ctx, v143, v146, v148, v150);
                                let v248 = C::output(ctx, v247);
                                let v249 = Some(v248);
                                // Rule at src/isa/pulley_shared/lower.isle line 281.
                                return v249;
                            }
                            I8X16 => {
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v250 = constructor_pulley_vsubi8x16(ctx, v154, v155);
                                let v251 = constructor_output_vreg(ctx, v250);
                                let v252 = Some(v251);
                                // Rule at src/isa/pulley_shared/lower.isle line 291.
                                return v252;
                            }
                            I16X8 => {
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v253 = constructor_pulley_vsubi16x8(ctx, v154, v155);
                                let v254 = constructor_output_vreg(ctx, v253);
                                let v255 = Some(v254);
                                // Rule at src/isa/pulley_shared/lower.isle line 292.
                                return v255;
                            }
                            I32X4 => {
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v256 = constructor_pulley_vsubi32x4(ctx, v154, v155);
                                let v257 = constructor_output_vreg(ctx, v256);
                                let v258 = Some(v257);
                                // Rule at src/isa/pulley_shared/lower.isle line 293.
                                return v258;
                            }
                            I64X2 => {
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v259 = constructor_pulley_vsubi64x2(ctx, v154, v155);
                                let v260 = constructor_output_vreg(ctx, v259);
                                let v261 = Some(v260);
                                // Rule at src/isa/pulley_shared/lower.isle line 294.
                                return v261;
                            }
                            _ => {}
                        }
                        let v82 = C::ty_int(ctx, v60);
                        if let Some(v83) = v82 {
                            let v99 = C::fits_in_32(ctx, v83);
                            if let Some(v100) = v99 {
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v217 = constructor_pulley_xsub32(ctx, v91, v92);
                                let v218 = constructor_output_xreg(ctx, v217);
                                let v219 = Some(v218);
                                // Rule at src/isa/pulley_shared/lower.isle line 252.
                                return v219;
                            }
                        }
                    }
                }
                &Opcode::Imul => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v280 = C::i32_from_iconst(ctx, v88.1);
                                if let Some(v281) = v280 {
                                    let v288 = C::i32_as_i8(ctx, v281);
                                    if let Some(v289) = v288 {
                                        let v91 = constructor_put_in_xreg(ctx, v88.0);
                                        let v293 = constructor_pulley_xmul64_s8(ctx, v91, v289);
                                        let v294 = constructor_output_xreg(ctx, v293);
                                        let v295 = Some(v294);
                                        // Rule at src/isa/pulley_shared/lower.isle line 314.
                                        return v295;
                                    }
                                }
                            }
                            I128 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v101 = C::def_inst(ctx, v88.1);
                                if let Some(v102) = v101 {
                                    let v103 = &C::inst_data(ctx, v102);
                                    if let &InstructionData::Unary {
                                        opcode: ref v298,
                                        arg: v299,
                                    } = v103 {
                                        match v298 {
                                            &Opcode::Uextend => {
                                                let v180 = C::def_inst(ctx, v88.0);
                                                if let Some(v181) = v180 {
                                                    let v182 = &C::inst_data(ctx, v181);
                                                    if let &InstructionData::Unary {
                                                        opcode: ref v296,
                                                        arg: v297,
                                                    } = v182 {
                                                        if let &Opcode::Uextend = v296 {
                                                            let v300 = constructor_zext64(ctx, v297);
                                                            let v301 = constructor_zext64(ctx, v299);
                                                            let v302 = constructor_pulley_xwidemul64_u(ctx, v300, v301);
                                                            let v303 = C::output(ctx, v302);
                                                            let v304 = Some(v303);
                                                            // Rule at src/isa/pulley_shared/lower.isle line 318.
                                                            return v304;
                                                        }
                                                    }
                                                }
                                            }
                                            &Opcode::Sextend => {
                                                let v180 = C::def_inst(ctx, v88.0);
                                                if let Some(v181) = v180 {
                                                    let v182 = &C::inst_data(ctx, v181);
                                                    if let &InstructionData::Unary {
                                                        opcode: ref v296,
                                                        arg: v297,
                                                    } = v182 {
                                                        if let &Opcode::Sextend = v296 {
                                                            let v305 = constructor_sext64(ctx, v297);
                                                            let v306 = constructor_sext64(ctx, v299);
                                                            let v307 = constructor_pulley_xwidemul64_s(ctx, v305, v306);
                                                            let v308 = C::output(ctx, v307);
                                                            let v309 = Some(v308);
                                                            // Rule at src/isa/pulley_shared/lower.isle line 320.
                                                            return v309;
                                                        }
                                                    }
                                                }
                                            }
                                            _ => {}
                                        }
                                    }
                                }
                            }
                            _ => {}
                        }
                        let v88 = C::unpack_value_array_2(ctx, v87);
                        let v280 = C::i32_from_iconst(ctx, v88.1);
                        if let Some(v281) = v280 {
                            let v82 = C::ty_int(ctx, v60);
                            if let Some(v83) = v82 {
                                let v99 = C::fits_in_32(ctx, v83);
                                if let Some(v100) = v99 {
                                    let v288 = C::i32_as_i8(ctx, v281);
                                    if let Some(v289) = v288 {
                                        let v91 = constructor_put_in_xreg(ctx, v88.0);
                                        let v290 = constructor_pulley_xmul32_s8(ctx, v91, v289);
                                        let v291 = constructor_output_xreg(ctx, v290);
                                        let v292 = Some(v291);
                                        // Rule at src/isa/pulley_shared/lower.isle line 312.
                                        return v292;
                                    }
                                }
                            }
                            if v60 == I64 {
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v285 = constructor_pulley_xmul64_s32(ctx, v91, v281);
                                let v286 = constructor_output_xreg(ctx, v285);
                                let v287 = Some(v286);
                                // Rule at src/isa/pulley_shared/lower.isle line 310.
                                return v287;
                            }
                            if let Some(v83) = v82 {
                                let v99 = C::fits_in_32(ctx, v83);
                                if let Some(v100) = v99 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v282 = constructor_pulley_xmul32_s32(ctx, v91, v281);
                                    let v283 = constructor_output_xreg(ctx, v282);
                                    let v284 = Some(v283);
                                    // Rule at src/isa/pulley_shared/lower.isle line 308.
                                    return v284;
                                }
                            }
                        }
                        match v60 {
                            I8 => {
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v274 = constructor_pulley_xmul32(ctx, v91, v92);
                                let v275 = constructor_output_xreg(ctx, v274);
                                let v276 = Some(v275);
                                // Rule at src/isa/pulley_shared/lower.isle line 303.
                                return v276;
                            }
                            I16 => {
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v274 = constructor_pulley_xmul32(ctx, v91, v92);
                                let v275 = constructor_output_xreg(ctx, v274);
                                let v276 = Some(v275);
                                // Rule at src/isa/pulley_shared/lower.isle line 304.
                                return v276;
                            }
                            I32 => {
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v274 = constructor_pulley_xmul32(ctx, v91, v92);
                                let v275 = constructor_output_xreg(ctx, v274);
                                let v276 = Some(v275);
                                // Rule at src/isa/pulley_shared/lower.isle line 305.
                                return v276;
                            }
                            I64 => {
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v277 = constructor_pulley_xmul64(ctx, v91, v92);
                                let v278 = constructor_output_xreg(ctx, v277);
                                let v279 = Some(v278);
                                // Rule at src/isa/pulley_shared/lower.isle line 306.
                                return v279;
                            }
                            I128 => {
                                let v139 = C::put_in_regs(ctx, v88.0);
                                let v310 = C::value_regs_get(ctx, v139, 0x0_usize);
                                let v311 = C::xreg_new(ctx, v310);
                                let v312 = C::value_regs_get(ctx, v139, 0x1_usize);
                                let v313 = C::xreg_new(ctx, v312);
                                let v314 = C::put_in_regs(ctx, v88.1);
                                let v315 = C::value_regs_get(ctx, v314, 0x0_usize);
                                let v316 = C::xreg_new(ctx, v315);
                                let v317 = C::value_regs_get(ctx, v314, 0x1_usize);
                                let v318 = C::xreg_new(ctx, v317);
                                let v319 = constructor_pulley_xwidemul64_u(ctx, v311, v316);
                                let v320 = C::value_regs_get(ctx, v319, 0x0_usize);
                                let v321 = C::xreg_new(ctx, v320);
                                let v322 = C::value_regs_get(ctx, v319, 0x1_usize);
                                let v323 = C::xreg_new(ctx, v322);
                                let v324 = constructor_pulley_xmul64(ctx, v311, v318);
                                let v325 = constructor_pulley_xmul64(ctx, v313, v316);
                                let v326 = constructor_pulley_xadd64(ctx, v323, v324);
                                let v327 = constructor_pulley_xadd64(ctx, v326, v325);
                                let v328 = C::xreg_to_reg(ctx, v321);
                                let v329 = C::xreg_to_reg(ctx, v327);
                                let v330 = C::value_regs(ctx, v328, v329);
                                let v331 = C::output(ctx, v330);
                                let v332 = Some(v331);
                                // Rule at src/isa/pulley_shared/lower.isle line 324.
                                return v332;
                            }
                            I8X16 => {
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v333 = constructor_pulley_vmuli8x16(ctx, v154, v155);
                                let v334 = constructor_output_vreg(ctx, v333);
                                let v335 = Some(v334);
                                // Rule at src/isa/pulley_shared/lower.isle line 349.
                                return v335;
                            }
                            I16X8 => {
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v336 = constructor_pulley_vmuli16x8(ctx, v154, v155);
                                let v337 = constructor_output_vreg(ctx, v336);
                                let v338 = Some(v337);
                                // Rule at src/isa/pulley_shared/lower.isle line 350.
                                return v338;
                            }
                            I32X4 => {
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v339 = constructor_pulley_vmuli32x4(ctx, v154, v155);
                                let v340 = constructor_output_vreg(ctx, v339);
                                let v341 = Some(v340);
                                // Rule at src/isa/pulley_shared/lower.isle line 351.
                                return v341;
                            }
                            I64X2 => {
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v342 = constructor_pulley_vmuli64x2(ctx, v154, v155);
                                let v343 = constructor_output_vreg(ctx, v342);
                                let v344 = Some(v343);
                                // Rule at src/isa/pulley_shared/lower.isle line 352.
                                return v344;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Umulhi => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I8 => {
                                let v346 = C::u64_as_u8(ctx, 0x8_u64);
                                let v347 = C::u6_from_u8(ctx, v346);
                                if let Some(v348) = v347 {
                                    let v88 = C::unpack_value_array_2(ctx, v87);
                                    let v349 = constructor_zext32(ctx, v88.0);
                                    let v350 = constructor_zext32(ctx, v88.1);
                                    let v351 = constructor_pulley_xmul32(ctx, v349, v350);
                                    let v352 = constructor_pulley_xshr32_u_u6(ctx, v351, v348);
                                    let v353 = constructor_output_xreg(ctx, v352);
                                    let v354 = Some(v353);
                                    // Rule at src/isa/pulley_shared/lower.isle line 356.
                                    return v354;
                                }
                            }
                            I16 => {
                                let v356 = C::u64_as_u8(ctx, 0x10_u64);
                                let v357 = C::u6_from_u8(ctx, v356);
                                if let Some(v358) = v357 {
                                    let v88 = C::unpack_value_array_2(ctx, v87);
                                    let v349 = constructor_zext32(ctx, v88.0);
                                    let v350 = constructor_zext32(ctx, v88.1);
                                    let v351 = constructor_pulley_xmul32(ctx, v349, v350);
                                    let v359 = constructor_pulley_xshr32_u_u6(ctx, v351, v358);
                                    let v360 = constructor_output_xreg(ctx, v359);
                                    let v361 = Some(v360);
                                    // Rule at src/isa/pulley_shared/lower.isle line 360.
                                    return v361;
                                }
                            }
                            I32 => {
                                let v363 = C::u64_as_u8(ctx, 0x20_u64);
                                let v364 = C::u6_from_u8(ctx, v363);
                                if let Some(v365) = v364 {
                                    let v88 = C::unpack_value_array_2(ctx, v87);
                                    let v366 = constructor_zext64(ctx, v88.0);
                                    let v367 = constructor_zext64(ctx, v88.1);
                                    let v368 = constructor_pulley_xmul64(ctx, v366, v367);
                                    let v369 = constructor_pulley_xshr64_u_u6(ctx, v368, v365);
                                    let v370 = constructor_output_xreg(ctx, v369);
                                    let v371 = Some(v370);
                                    // Rule at src/isa/pulley_shared/lower.isle line 364.
                                    return v371;
                                }
                            }
                            I64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v372 = constructor_pulley_xmulhi64_u(ctx, v91, v92);
                                let v373 = constructor_output_xreg(ctx, v372);
                                let v374 = Some(v373);
                                // Rule at src/isa/pulley_shared/lower.isle line 368.
                                return v374;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Smulhi => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I8 => {
                                let v346 = C::u64_as_u8(ctx, 0x8_u64);
                                let v347 = C::u6_from_u8(ctx, v346);
                                if let Some(v348) = v347 {
                                    let v88 = C::unpack_value_array_2(ctx, v87);
                                    let v375 = constructor_sext32(ctx, v88.0);
                                    let v376 = constructor_sext32(ctx, v88.1);
                                    let v377 = constructor_pulley_xmul32(ctx, v375, v376);
                                    let v378 = constructor_pulley_xshr32_s_u6(ctx, v377, v348);
                                    let v379 = constructor_output_xreg(ctx, v378);
                                    let v380 = Some(v379);
                                    // Rule at src/isa/pulley_shared/lower.isle line 373.
                                    return v380;
                                }
                            }
                            I16 => {
                                let v356 = C::u64_as_u8(ctx, 0x10_u64);
                                let v357 = C::u6_from_u8(ctx, v356);
                                if let Some(v358) = v357 {
                                    let v88 = C::unpack_value_array_2(ctx, v87);
                                    let v375 = constructor_sext32(ctx, v88.0);
                                    let v376 = constructor_sext32(ctx, v88.1);
                                    let v377 = constructor_pulley_xmul32(ctx, v375, v376);
                                    let v381 = constructor_pulley_xshr32_s_u6(ctx, v377, v358);
                                    let v382 = constructor_output_xreg(ctx, v381);
                                    let v383 = Some(v382);
                                    // Rule at src/isa/pulley_shared/lower.isle line 377.
                                    return v383;
                                }
                            }
                            I32 => {
                                let v363 = C::u64_as_u8(ctx, 0x20_u64);
                                let v364 = C::u6_from_u8(ctx, v363);
                                if let Some(v365) = v364 {
                                    let v88 = C::unpack_value_array_2(ctx, v87);
                                    let v384 = constructor_sext64(ctx, v88.0);
                                    let v385 = constructor_sext64(ctx, v88.1);
                                    let v386 = constructor_pulley_xmul64(ctx, v384, v385);
                                    let v387 = constructor_pulley_xshr64_s_u6(ctx, v386, v365);
                                    let v388 = constructor_output_xreg(ctx, v387);
                                    let v389 = Some(v388);
                                    // Rule at src/isa/pulley_shared/lower.isle line 381.
                                    return v389;
                                }
                            }
                            I64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v390 = constructor_pulley_xmulhi64_s(ctx, v91, v92);
                                let v391 = constructor_output_xreg(ctx, v390);
                                let v392 = Some(v391);
                                // Rule at src/isa/pulley_shared/lower.isle line 385.
                                return v392;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::SqmulRoundSat => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == I16X8 {
                            let v88 = C::unpack_value_array_2(ctx, v87);
                            let v154 = constructor_put_in_vreg(ctx, v88.0);
                            let v155 = constructor_put_in_vreg(ctx, v88.1);
                            let v393 = constructor_pulley_vqmulrsi16x8(ctx, v154, v155);
                            let v394 = constructor_output_vreg(ctx, v393);
                            let v395 = Some(v394);
                            // Rule at src/isa/pulley_shared/lower.isle line 390.
                            return v395;
                        }
                    }
                }
                &Opcode::Udiv => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == I64 {
                            let v88 = C::unpack_value_array_2(ctx, v87);
                            let v91 = constructor_put_in_xreg(ctx, v88.0);
                            let v92 = constructor_put_in_xreg(ctx, v88.1);
                            let v413 = constructor_pulley_xdiv64_u(ctx, v91, v92);
                            let v414 = constructor_output_xreg(ctx, v413);
                            let v415 = Some(v414);
                            // Rule at src/isa/pulley_shared/lower.isle line 408.
                            return v415;
                        }
                        let v82 = C::ty_int(ctx, v60);
                        if let Some(v83) = v82 {
                            let v99 = C::fits_in_32(ctx, v83);
                            if let Some(v100) = v99 {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v349 = constructor_zext32(ctx, v88.0);
                                let v350 = constructor_zext32(ctx, v88.1);
                                let v410 = constructor_pulley_xdiv32_u(ctx, v349, v350);
                                let v411 = constructor_output_xreg(ctx, v410);
                                let v412 = Some(v411);
                                // Rule at src/isa/pulley_shared/lower.isle line 406.
                                return v412;
                            }
                        }
                    }
                }
                &Opcode::Sdiv => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == I64 {
                            let v88 = C::unpack_value_array_2(ctx, v87);
                            let v91 = constructor_put_in_xreg(ctx, v88.0);
                            let v92 = constructor_put_in_xreg(ctx, v88.1);
                            let v401 = constructor_pulley_xdiv64_s(ctx, v91, v92);
                            let v402 = constructor_output_xreg(ctx, v401);
                            let v403 = Some(v402);
                            // Rule at src/isa/pulley_shared/lower.isle line 396.
                            return v403;
                        }
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v88 = C::unpack_value_array_2(ctx, v87);
                            let v375 = constructor_sext32(ctx, v88.0);
                            let v376 = constructor_sext32(ctx, v88.1);
                            let v398 = constructor_pulley_xdiv32_s(ctx, v375, v376);
                            let v399 = constructor_output_xreg(ctx, v398);
                            let v400 = Some(v399);
                            // Rule at src/isa/pulley_shared/lower.isle line 394.
                            return v400;
                        }
                    }
                }
                &Opcode::Urem => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == I64 {
                            let v88 = C::unpack_value_array_2(ctx, v87);
                            let v91 = constructor_put_in_xreg(ctx, v88.0);
                            let v92 = constructor_put_in_xreg(ctx, v88.1);
                            let v419 = constructor_pulley_xrem64_u(ctx, v91, v92);
                            let v420 = constructor_output_xreg(ctx, v419);
                            let v421 = Some(v420);
                            // Rule at src/isa/pulley_shared/lower.isle line 414.
                            return v421;
                        }
                        let v82 = C::ty_int(ctx, v60);
                        if let Some(v83) = v82 {
                            let v99 = C::fits_in_32(ctx, v83);
                            if let Some(v100) = v99 {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v349 = constructor_zext32(ctx, v88.0);
                                let v350 = constructor_zext32(ctx, v88.1);
                                let v416 = constructor_pulley_xrem32_u(ctx, v349, v350);
                                let v417 = constructor_output_xreg(ctx, v416);
                                let v418 = Some(v417);
                                // Rule at src/isa/pulley_shared/lower.isle line 412.
                                return v418;
                            }
                        }
                    }
                }
                &Opcode::Srem => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == I64 {
                            let v88 = C::unpack_value_array_2(ctx, v87);
                            let v91 = constructor_put_in_xreg(ctx, v88.0);
                            let v92 = constructor_put_in_xreg(ctx, v88.1);
                            let v407 = constructor_pulley_xrem64_s(ctx, v91, v92);
                            let v408 = constructor_output_xreg(ctx, v407);
                            let v409 = Some(v408);
                            // Rule at src/isa/pulley_shared/lower.isle line 402.
                            return v409;
                        }
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v88 = C::unpack_value_array_2(ctx, v87);
                            let v375 = constructor_sext32(ctx, v88.0);
                            let v376 = constructor_sext32(ctx, v88.1);
                            let v404 = constructor_pulley_xrem32_s(ctx, v375, v376);
                            let v405 = constructor_output_xreg(ctx, v404);
                            let v406 = Some(v405);
                            // Rule at src/isa/pulley_shared/lower.isle line 400.
                            return v406;
                        }
                    }
                }
                &Opcode::Band => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v88 = C::unpack_value_array_2(ctx, v87);
                        let v280 = C::i32_from_iconst(ctx, v88.1);
                        if let Some(v281) = v280 {
                            let v288 = C::i32_as_i8(ctx, v281);
                            if let Some(v289) = v288 {
                                let v60 = C::value_type(ctx, v59);
                                if v60 == I64 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v539 = constructor_pulley_xband64_s8(ctx, v91, v289);
                                    let v540 = constructor_output_xreg(ctx, v539);
                                    let v541 = Some(v540);
                                    // Rule at src/isa/pulley_shared/lower.isle line 529.
                                    return v541;
                                }
                                let v82 = C::ty_int(ctx, v60);
                                if let Some(v83) = v82 {
                                    let v99 = C::fits_in_32(ctx, v83);
                                    if let Some(v100) = v99 {
                                        let v91 = constructor_put_in_xreg(ctx, v88.0);
                                        let v536 = constructor_pulley_xband32_s8(ctx, v91, v289);
                                        let v537 = constructor_output_xreg(ctx, v536);
                                        let v538 = Some(v537);
                                        // Rule at src/isa/pulley_shared/lower.isle line 527.
                                        return v538;
                                    }
                                }
                            }
                            let v60 = C::value_type(ctx, v59);
                            if v60 == I64 {
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v533 = constructor_pulley_xband64_s32(ctx, v91, v281);
                                let v534 = constructor_output_xreg(ctx, v533);
                                let v535 = Some(v534);
                                // Rule at src/isa/pulley_shared/lower.isle line 525.
                                return v535;
                            }
                            let v82 = C::ty_int(ctx, v60);
                            if let Some(v83) = v82 {
                                let v99 = C::fits_in_32(ctx, v83);
                                if let Some(v100) = v99 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v530 = constructor_pulley_xband32_s32(ctx, v91, v281);
                                    let v531 = constructor_output_xreg(ctx, v530);
                                    let v532 = Some(v531);
                                    // Rule at src/isa/pulley_shared/lower.isle line 523.
                                    return v532;
                                }
                            }
                        }
                        let v60 = C::value_type(ctx, v59);
                        let v542 = C::ty_vec128(ctx, v60);
                        if let Some(v543) = v542 {
                            let v154 = constructor_put_in_vreg(ctx, v88.0);
                            let v155 = constructor_put_in_vreg(ctx, v88.1);
                            let v544 = constructor_pulley_vband128(ctx, v154, v155);
                            let v545 = constructor_output_vreg(ctx, v544);
                            let v546 = Some(v545);
                            // Rule at src/isa/pulley_shared/lower.isle line 532.
                            return v546;
                        }
                        if v60 == I64 {
                            let v91 = constructor_put_in_xreg(ctx, v88.0);
                            let v92 = constructor_put_in_xreg(ctx, v88.1);
                            let v527 = constructor_pulley_xband64(ctx, v91, v92);
                            let v528 = constructor_output_xreg(ctx, v527);
                            let v529 = Some(v528);
                            // Rule at src/isa/pulley_shared/lower.isle line 521.
                            return v529;
                        }
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v91 = constructor_put_in_xreg(ctx, v88.0);
                            let v92 = constructor_put_in_xreg(ctx, v88.1);
                            let v524 = constructor_pulley_xband32(ctx, v91, v92);
                            let v525 = constructor_output_xreg(ctx, v524);
                            let v526 = Some(v525);
                            // Rule at src/isa/pulley_shared/lower.isle line 520.
                            return v526;
                        }
                    }
                }
                &Opcode::Bor => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v88 = C::unpack_value_array_2(ctx, v87);
                        let v280 = C::i32_from_iconst(ctx, v88.1);
                        if let Some(v281) = v280 {
                            let v288 = C::i32_as_i8(ctx, v281);
                            if let Some(v289) = v288 {
                                let v60 = C::value_type(ctx, v59);
                                if v60 == I64 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v562 = constructor_pulley_xbor64_s8(ctx, v91, v289);
                                    let v563 = constructor_output_xreg(ctx, v562);
                                    let v564 = Some(v563);
                                    // Rule at src/isa/pulley_shared/lower.isle line 546.
                                    return v564;
                                }
                                let v82 = C::ty_int(ctx, v60);
                                if let Some(v83) = v82 {
                                    let v99 = C::fits_in_32(ctx, v83);
                                    if let Some(v100) = v99 {
                                        let v91 = constructor_put_in_xreg(ctx, v88.0);
                                        let v559 = constructor_pulley_xbor32_s8(ctx, v91, v289);
                                        let v560 = constructor_output_xreg(ctx, v559);
                                        let v561 = Some(v560);
                                        // Rule at src/isa/pulley_shared/lower.isle line 544.
                                        return v561;
                                    }
                                }
                            }
                            let v60 = C::value_type(ctx, v59);
                            if v60 == I64 {
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v556 = constructor_pulley_xbor64_s32(ctx, v91, v281);
                                let v557 = constructor_output_xreg(ctx, v556);
                                let v558 = Some(v557);
                                // Rule at src/isa/pulley_shared/lower.isle line 542.
                                return v558;
                            }
                            let v82 = C::ty_int(ctx, v60);
                            if let Some(v83) = v82 {
                                let v99 = C::fits_in_32(ctx, v83);
                                if let Some(v100) = v99 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v553 = constructor_pulley_xbor32_s32(ctx, v91, v281);
                                    let v554 = constructor_output_xreg(ctx, v553);
                                    let v555 = Some(v554);
                                    // Rule at src/isa/pulley_shared/lower.isle line 540.
                                    return v555;
                                }
                            }
                        }
                        let v60 = C::value_type(ctx, v59);
                        let v542 = C::ty_vec128(ctx, v60);
                        if let Some(v543) = v542 {
                            let v154 = constructor_put_in_vreg(ctx, v88.0);
                            let v155 = constructor_put_in_vreg(ctx, v88.1);
                            let v565 = constructor_pulley_vbor128(ctx, v154, v155);
                            let v566 = constructor_output_vreg(ctx, v565);
                            let v567 = Some(v566);
                            // Rule at src/isa/pulley_shared/lower.isle line 549.
                            return v567;
                        }
                        if v60 == I64 {
                            let v91 = constructor_put_in_xreg(ctx, v88.0);
                            let v92 = constructor_put_in_xreg(ctx, v88.1);
                            let v550 = constructor_pulley_xbor64(ctx, v91, v92);
                            let v551 = constructor_output_xreg(ctx, v550);
                            let v552 = Some(v551);
                            // Rule at src/isa/pulley_shared/lower.isle line 538.
                            return v552;
                        }
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v91 = constructor_put_in_xreg(ctx, v88.0);
                            let v92 = constructor_put_in_xreg(ctx, v88.1);
                            let v547 = constructor_pulley_xbor32(ctx, v91, v92);
                            let v548 = constructor_output_xreg(ctx, v547);
                            let v549 = Some(v548);
                            // Rule at src/isa/pulley_shared/lower.isle line 537.
                            return v549;
                        }
                    }
                }
                &Opcode::Bxor => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v88 = C::unpack_value_array_2(ctx, v87);
                        let v280 = C::i32_from_iconst(ctx, v88.1);
                        if let Some(v281) = v280 {
                            let v288 = C::i32_as_i8(ctx, v281);
                            if let Some(v289) = v288 {
                                let v60 = C::value_type(ctx, v59);
                                if v60 == I64 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v583 = constructor_pulley_xbxor64_s8(ctx, v91, v289);
                                    let v584 = constructor_output_xreg(ctx, v583);
                                    let v585 = Some(v584);
                                    // Rule at src/isa/pulley_shared/lower.isle line 563.
                                    return v585;
                                }
                                let v82 = C::ty_int(ctx, v60);
                                if let Some(v83) = v82 {
                                    let v99 = C::fits_in_32(ctx, v83);
                                    if let Some(v100) = v99 {
                                        let v91 = constructor_put_in_xreg(ctx, v88.0);
                                        let v580 = constructor_pulley_xbxor32_s8(ctx, v91, v289);
                                        let v581 = constructor_output_xreg(ctx, v580);
                                        let v582 = Some(v581);
                                        // Rule at src/isa/pulley_shared/lower.isle line 561.
                                        return v582;
                                    }
                                }
                            }
                            let v60 = C::value_type(ctx, v59);
                            if v60 == I64 {
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v577 = constructor_pulley_xbxor64_s32(ctx, v91, v281);
                                let v578 = constructor_output_xreg(ctx, v577);
                                let v579 = Some(v578);
                                // Rule at src/isa/pulley_shared/lower.isle line 559.
                                return v579;
                            }
                            let v82 = C::ty_int(ctx, v60);
                            if let Some(v83) = v82 {
                                let v99 = C::fits_in_32(ctx, v83);
                                if let Some(v100) = v99 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v574 = constructor_pulley_xbxor32_s32(ctx, v91, v281);
                                    let v575 = constructor_output_xreg(ctx, v574);
                                    let v576 = Some(v575);
                                    // Rule at src/isa/pulley_shared/lower.isle line 557.
                                    return v576;
                                }
                            }
                        }
                        let v60 = C::value_type(ctx, v59);
                        let v542 = C::ty_vec128(ctx, v60);
                        if let Some(v543) = v542 {
                            let v154 = constructor_put_in_vreg(ctx, v88.0);
                            let v155 = constructor_put_in_vreg(ctx, v88.1);
                            let v586 = constructor_pulley_vbxor128(ctx, v154, v155);
                            let v587 = constructor_output_vreg(ctx, v586);
                            let v588 = Some(v587);
                            // Rule at src/isa/pulley_shared/lower.isle line 566.
                            return v588;
                        }
                        if v60 == I64 {
                            let v91 = constructor_put_in_xreg(ctx, v88.0);
                            let v92 = constructor_put_in_xreg(ctx, v88.1);
                            let v571 = constructor_pulley_xbxor64(ctx, v91, v92);
                            let v572 = constructor_output_xreg(ctx, v571);
                            let v573 = Some(v572);
                            // Rule at src/isa/pulley_shared/lower.isle line 555.
                            return v573;
                        }
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v91 = constructor_put_in_xreg(ctx, v88.0);
                            let v92 = constructor_put_in_xreg(ctx, v88.1);
                            let v568 = constructor_pulley_xbxor32(ctx, v91, v92);
                            let v569 = constructor_output_xreg(ctx, v568);
                            let v570 = Some(v569);
                            // Rule at src/isa/pulley_shared/lower.isle line 554.
                            return v570;
                        }
                    }
                }
                &Opcode::Rotl => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I32 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v728 = constructor_pulley_xrotl32(ctx, v91, v92);
                                let v729 = constructor_output_xreg(ctx, v728);
                                let v730 = Some(v729);
                                // Rule at src/isa/pulley_shared/lower.isle line 656.
                                return v730;
                            }
                            I64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v731 = constructor_pulley_xrotl64(ctx, v91, v92);
                                let v732 = constructor_output_xreg(ctx, v731);
                                let v733 = Some(v732);
                                // Rule at src/isa/pulley_shared/lower.isle line 657.
                                return v733;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Rotr => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I32 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v734 = constructor_pulley_xrotr32(ctx, v91, v92);
                                let v735 = constructor_output_xreg(ctx, v734);
                                let v736 = Some(v735);
                                // Rule at src/isa/pulley_shared/lower.isle line 661.
                                return v736;
                            }
                            I64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v737 = constructor_pulley_xrotr64(ctx, v91, v92);
                                let v738 = constructor_output_xreg(ctx, v737);
                                let v739 = Some(v738);
                                // Rule at src/isa/pulley_shared/lower.isle line 662.
                                return v739;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Ishl => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v429 = constructor_pulley_xband32_s8(ctx, v92, 7_i8);
                                let v430 = constructor_pulley_xshl32(ctx, v91, v429);
                                let v431 = constructor_output_xreg(ctx, v430);
                                let v432 = Some(v431);
                                // Rule at src/isa/pulley_shared/lower.isle line 423.
                                return v432;
                            }
                            I16 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v434 = constructor_pulley_xband32_s8(ctx, v92, 15_i8);
                                let v435 = constructor_pulley_xshl32(ctx, v91, v434);
                                let v436 = constructor_output_xreg(ctx, v435);
                                let v437 = Some(v436);
                                // Rule at src/isa/pulley_shared/lower.isle line 426.
                                return v437;
                            }
                            I32 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v444 = constructor_u6_shift_from_iconst(ctx, v88.1);
                                if let Some(v445) = v444 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v446 = constructor_pulley_xshl32_u6(ctx, v91, v445);
                                    let v447 = constructor_output_xreg(ctx, v446);
                                    let v448 = Some(v447);
                                    // Rule at src/isa/pulley_shared/lower.isle line 436.
                                    return v448;
                                }
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v438 = constructor_pulley_xshl32(ctx, v91, v92);
                                let v439 = constructor_output_xreg(ctx, v438);
                                let v440 = Some(v439);
                                // Rule at src/isa/pulley_shared/lower.isle line 429.
                                return v440;
                            }
                            I64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v444 = constructor_u6_shift_from_iconst(ctx, v88.1);
                                if let Some(v445) = v444 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v449 = constructor_pulley_xshl64_u6(ctx, v91, v445);
                                    let v450 = constructor_output_xreg(ctx, v449);
                                    let v451 = Some(v450);
                                    // Rule at src/isa/pulley_shared/lower.isle line 439.
                                    return v451;
                                }
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v441 = constructor_pulley_xshl64(ctx, v91, v92);
                                let v442 = constructor_output_xreg(ctx, v441);
                                let v443 = Some(v442);
                                // Rule at src/isa/pulley_shared/lower.isle line 432.
                                return v443;
                            }
                            I8X16 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v452 = constructor_pulley_vshli8x16(ctx, v154, v92);
                                let v453 = constructor_output_vreg(ctx, v452);
                                let v454 = Some(v453);
                                // Rule at src/isa/pulley_shared/lower.isle line 445.
                                return v454;
                            }
                            I16X8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v455 = constructor_pulley_vshli16x8(ctx, v154, v92);
                                let v456 = constructor_output_vreg(ctx, v455);
                                let v457 = Some(v456);
                                // Rule at src/isa/pulley_shared/lower.isle line 446.
                                return v457;
                            }
                            I32X4 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v458 = constructor_pulley_vshli32x4(ctx, v154, v92);
                                let v459 = constructor_output_vreg(ctx, v458);
                                let v460 = Some(v459);
                                // Rule at src/isa/pulley_shared/lower.isle line 447.
                                return v460;
                            }
                            I64X2 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v461 = constructor_pulley_vshli64x2(ctx, v154, v92);
                                let v462 = constructor_output_vreg(ctx, v461);
                                let v463 = Some(v462);
                                // Rule at src/isa/pulley_shared/lower.isle line 448.
                                return v463;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Ushr => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v349 = constructor_zext32(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v429 = constructor_pulley_xband32_s8(ctx, v92, 7_i8);
                                let v464 = constructor_pulley_xshr32_u(ctx, v349, v429);
                                let v465 = constructor_output_xreg(ctx, v464);
                                let v466 = Some(v465);
                                // Rule at src/isa/pulley_shared/lower.isle line 462.
                                return v466;
                            }
                            I16 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v349 = constructor_zext32(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v434 = constructor_pulley_xband32_s8(ctx, v92, 15_i8);
                                let v467 = constructor_pulley_xshr32_u(ctx, v349, v434);
                                let v468 = constructor_output_xreg(ctx, v467);
                                let v469 = Some(v468);
                                // Rule at src/isa/pulley_shared/lower.isle line 465.
                                return v469;
                            }
                            I32 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v444 = constructor_u6_shift_from_iconst(ctx, v88.1);
                                if let Some(v445) = v444 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v476 = constructor_pulley_xshr32_u_u6(ctx, v91, v445);
                                    let v477 = constructor_output_xreg(ctx, v476);
                                    let v478 = Some(v477);
                                    // Rule at src/isa/pulley_shared/lower.isle line 475.
                                    return v478;
                                }
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v470 = constructor_pulley_xshr32_u(ctx, v91, v92);
                                let v471 = constructor_output_xreg(ctx, v470);
                                let v472 = Some(v471);
                                // Rule at src/isa/pulley_shared/lower.isle line 468.
                                return v472;
                            }
                            I64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v444 = constructor_u6_shift_from_iconst(ctx, v88.1);
                                if let Some(v445) = v444 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v479 = constructor_pulley_xshr64_u_u6(ctx, v91, v445);
                                    let v480 = constructor_output_xreg(ctx, v479);
                                    let v481 = Some(v480);
                                    // Rule at src/isa/pulley_shared/lower.isle line 478.
                                    return v481;
                                }
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v473 = constructor_pulley_xshr64_u(ctx, v91, v92);
                                let v474 = constructor_output_xreg(ctx, v473);
                                let v475 = Some(v474);
                                // Rule at src/isa/pulley_shared/lower.isle line 471.
                                return v475;
                            }
                            I8X16 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v482 = constructor_pulley_vshri8x16_u(ctx, v154, v92);
                                let v483 = constructor_output_vreg(ctx, v482);
                                let v484 = Some(v483);
                                // Rule at src/isa/pulley_shared/lower.isle line 484.
                                return v484;
                            }
                            I16X8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v485 = constructor_pulley_vshri16x8_u(ctx, v154, v92);
                                let v486 = constructor_output_vreg(ctx, v485);
                                let v487 = Some(v486);
                                // Rule at src/isa/pulley_shared/lower.isle line 485.
                                return v487;
                            }
                            I32X4 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v488 = constructor_pulley_vshri32x4_u(ctx, v154, v92);
                                let v489 = constructor_output_vreg(ctx, v488);
                                let v490 = Some(v489);
                                // Rule at src/isa/pulley_shared/lower.isle line 486.
                                return v490;
                            }
                            I64X2 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v491 = constructor_pulley_vshri64x2_u(ctx, v154, v92);
                                let v492 = constructor_output_vreg(ctx, v491);
                                let v493 = Some(v492);
                                // Rule at src/isa/pulley_shared/lower.isle line 487.
                                return v493;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Sshr => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v375 = constructor_sext32(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v429 = constructor_pulley_xband32_s8(ctx, v92, 7_i8);
                                let v494 = constructor_pulley_xshr32_u(ctx, v375, v429);
                                let v495 = constructor_output_xreg(ctx, v494);
                                let v496 = Some(v495);
                                // Rule at src/isa/pulley_shared/lower.isle line 491.
                                return v496;
                            }
                            I16 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v375 = constructor_sext32(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v434 = constructor_pulley_xband32_s8(ctx, v92, 15_i8);
                                let v497 = constructor_pulley_xshr32_u(ctx, v375, v434);
                                let v498 = constructor_output_xreg(ctx, v497);
                                let v499 = Some(v498);
                                // Rule at src/isa/pulley_shared/lower.isle line 494.
                                return v499;
                            }
                            I32 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v444 = constructor_u6_shift_from_iconst(ctx, v88.1);
                                if let Some(v445) = v444 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v506 = constructor_pulley_xshr32_s_u6(ctx, v91, v445);
                                    let v507 = constructor_output_xreg(ctx, v506);
                                    let v508 = Some(v507);
                                    // Rule at src/isa/pulley_shared/lower.isle line 504.
                                    return v508;
                                }
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v500 = constructor_pulley_xshr32_s(ctx, v91, v92);
                                let v501 = constructor_output_xreg(ctx, v500);
                                let v502 = Some(v501);
                                // Rule at src/isa/pulley_shared/lower.isle line 497.
                                return v502;
                            }
                            I64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v444 = constructor_u6_shift_from_iconst(ctx, v88.1);
                                if let Some(v445) = v444 {
                                    let v91 = constructor_put_in_xreg(ctx, v88.0);
                                    let v509 = constructor_pulley_xshr64_s_u6(ctx, v91, v445);
                                    let v510 = constructor_output_xreg(ctx, v509);
                                    let v511 = Some(v510);
                                    // Rule at src/isa/pulley_shared/lower.isle line 507.
                                    return v511;
                                }
                                let v91 = constructor_put_in_xreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v503 = constructor_pulley_xshr64_s(ctx, v91, v92);
                                let v504 = constructor_output_xreg(ctx, v503);
                                let v505 = Some(v504);
                                // Rule at src/isa/pulley_shared/lower.isle line 500.
                                return v505;
                            }
                            I8X16 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v512 = constructor_pulley_vshri8x16_s(ctx, v154, v92);
                                let v513 = constructor_output_vreg(ctx, v512);
                                let v514 = Some(v513);
                                // Rule at src/isa/pulley_shared/lower.isle line 513.
                                return v514;
                            }
                            I16X8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v515 = constructor_pulley_vshri16x8_s(ctx, v154, v92);
                                let v516 = constructor_output_vreg(ctx, v515);
                                let v517 = Some(v516);
                                // Rule at src/isa/pulley_shared/lower.isle line 514.
                                return v517;
                            }
                            I32X4 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v518 = constructor_pulley_vshri32x4_s(ctx, v154, v92);
                                let v519 = constructor_output_vreg(ctx, v518);
                                let v520 = Some(v519);
                                // Rule at src/isa/pulley_shared/lower.isle line 515.
                                return v520;
                            }
                            I64X2 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v92 = constructor_put_in_xreg(ctx, v88.1);
                                let v521 = constructor_pulley_vshri64x2_s(ctx, v154, v92);
                                let v522 = constructor_output_vreg(ctx, v521);
                                let v523 = Some(v522);
                                // Rule at src/isa/pulley_shared/lower.isle line 516.
                                return v523;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fadd => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v1132 = constructor_put_in_freg(ctx, v88.0);
                                let v1133 = constructor_put_in_freg(ctx, v88.1);
                                let v1140 = constructor_pulley_fadd32(ctx, v1132, v1133);
                                let v1141 = constructor_output_freg(ctx, v1140);
                                let v1142 = Some(v1141);
                                // Rule at src/isa/pulley_shared/lower.isle line 1494.
                                return v1142;
                            }
                            F64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v1132 = constructor_put_in_freg(ctx, v88.0);
                                let v1133 = constructor_put_in_freg(ctx, v88.1);
                                let v1143 = constructor_pulley_fadd64(ctx, v1132, v1133);
                                let v1144 = constructor_output_freg(ctx, v1143);
                                let v1145 = Some(v1144);
                                // Rule at src/isa/pulley_shared/lower.isle line 1495.
                                return v1145;
                            }
                            F32X4 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v1146 = constructor_pulley_vaddf32x4(ctx, v154, v155);
                                let v1147 = constructor_output_vreg(ctx, v1146);
                                let v1148 = Some(v1147);
                                // Rule at src/isa/pulley_shared/lower.isle line 1496.
                                return v1148;
                            }
                            F64X2 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v1149 = constructor_pulley_vaddf64x2(ctx, v154, v155);
                                let v1150 = constructor_output_vreg(ctx, v1149);
                                let v1151 = Some(v1150);
                                // Rule at src/isa/pulley_shared/lower.isle line 1497.
                                return v1151;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fsub => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v1132 = constructor_put_in_freg(ctx, v88.0);
                                let v1133 = constructor_put_in_freg(ctx, v88.1);
                                let v1152 = constructor_pulley_fsub32(ctx, v1132, v1133);
                                let v1153 = constructor_output_freg(ctx, v1152);
                                let v1154 = Some(v1153);
                                // Rule at src/isa/pulley_shared/lower.isle line 1501.
                                return v1154;
                            }
                            F64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v1132 = constructor_put_in_freg(ctx, v88.0);
                                let v1133 = constructor_put_in_freg(ctx, v88.1);
                                let v1155 = constructor_pulley_fsub64(ctx, v1132, v1133);
                                let v1156 = constructor_output_freg(ctx, v1155);
                                let v1157 = Some(v1156);
                                // Rule at src/isa/pulley_shared/lower.isle line 1502.
                                return v1157;
                            }
                            F32X4 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v1158 = constructor_pulley_vsubf32x4(ctx, v154, v155);
                                let v1159 = constructor_output_vreg(ctx, v1158);
                                let v1160 = Some(v1159);
                                // Rule at src/isa/pulley_shared/lower.isle line 1503.
                                return v1160;
                            }
                            F64X2 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v1161 = constructor_pulley_vsubf64x2(ctx, v154, v155);
                                let v1162 = constructor_output_vreg(ctx, v1161);
                                let v1163 = Some(v1162);
                                // Rule at src/isa/pulley_shared/lower.isle line 1504.
                                return v1163;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fmul => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v1132 = constructor_put_in_freg(ctx, v88.0);
                                let v1133 = constructor_put_in_freg(ctx, v88.1);
                                let v1164 = constructor_pulley_fmul32(ctx, v1132, v1133);
                                let v1165 = constructor_output_freg(ctx, v1164);
                                let v1166 = Some(v1165);
                                // Rule at src/isa/pulley_shared/lower.isle line 1508.
                                return v1166;
                            }
                            F64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v1132 = constructor_put_in_freg(ctx, v88.0);
                                let v1133 = constructor_put_in_freg(ctx, v88.1);
                                let v1167 = constructor_pulley_fmul64(ctx, v1132, v1133);
                                let v1168 = constructor_output_freg(ctx, v1167);
                                let v1169 = Some(v1168);
                                // Rule at src/isa/pulley_shared/lower.isle line 1509.
                                return v1169;
                            }
                            F32X4 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v1170 = constructor_pulley_vmulf32x4(ctx, v154, v155);
                                let v1171 = constructor_output_vreg(ctx, v1170);
                                let v1172 = Some(v1171);
                                // Rule at src/isa/pulley_shared/lower.isle line 1510.
                                return v1172;
                            }
                            F64X2 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v1173 = constructor_pulley_vmulf64x2(ctx, v154, v155);
                                let v1174 = constructor_output_vreg(ctx, v1173);
                                let v1175 = Some(v1174);
                                // Rule at src/isa/pulley_shared/lower.isle line 1511.
                                return v1175;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fdiv => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v1132 = constructor_put_in_freg(ctx, v88.0);
                                let v1133 = constructor_put_in_freg(ctx, v88.1);
                                let v1176 = constructor_pulley_fdiv32(ctx, v1132, v1133);
                                let v1177 = constructor_output_freg(ctx, v1176);
                                let v1178 = Some(v1177);
                                // Rule at src/isa/pulley_shared/lower.isle line 1515.
                                return v1178;
                            }
                            F64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v1132 = constructor_put_in_freg(ctx, v88.0);
                                let v1133 = constructor_put_in_freg(ctx, v88.1);
                                let v1179 = constructor_pulley_fdiv64(ctx, v1132, v1133);
                                let v1180 = constructor_output_freg(ctx, v1179);
                                let v1181 = Some(v1180);
                                // Rule at src/isa/pulley_shared/lower.isle line 1516.
                                return v1181;
                            }
                            F32X4 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v1182 = constructor_pulley_vdivf32x4(ctx, v154, v155);
                                let v1183 = constructor_output_vreg(ctx, v1182);
                                let v1184 = Some(v1183);
                                // Rule at src/isa/pulley_shared/lower.isle line 1517.
                                return v1184;
                            }
                            F64X2 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v1185 = constructor_pulley_vdivf64x2(ctx, v154, v155);
                                let v1186 = constructor_output_vreg(ctx, v1185);
                                let v1187 = Some(v1186);
                                // Rule at src/isa/pulley_shared/lower.isle line 1518.
                                return v1187;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fcopysign => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v1132 = constructor_put_in_freg(ctx, v88.0);
                                let v1133 = constructor_put_in_freg(ctx, v88.1);
                                let v1134 = constructor_pulley_fcopysign32(ctx, v1132, v1133);
                                let v1135 = constructor_output_freg(ctx, v1134);
                                let v1136 = Some(v1135);
                                // Rule at src/isa/pulley_shared/lower.isle line 1486.
                                return v1136;
                            }
                            F64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v1132 = constructor_put_in_freg(ctx, v88.0);
                                let v1133 = constructor_put_in_freg(ctx, v88.1);
                                let v1137 = constructor_pulley_fcopysign64(ctx, v1132, v1133);
                                let v1138 = constructor_output_freg(ctx, v1137);
                                let v1139 = Some(v1138);
                                // Rule at src/isa/pulley_shared/lower.isle line 1489.
                                return v1139;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fmin => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v1132 = constructor_put_in_freg(ctx, v88.0);
                                let v1133 = constructor_put_in_freg(ctx, v88.1);
                                let v1200 = constructor_pulley_fminimum32(ctx, v1132, v1133);
                                let v1201 = constructor_output_freg(ctx, v1200);
                                let v1202 = Some(v1201);
                                // Rule at src/isa/pulley_shared/lower.isle line 1529.
                                return v1202;
                            }
                            F64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v1132 = constructor_put_in_freg(ctx, v88.0);
                                let v1133 = constructor_put_in_freg(ctx, v88.1);
                                let v1203 = constructor_pulley_fminimum64(ctx, v1132, v1133);
                                let v1204 = constructor_output_freg(ctx, v1203);
                                let v1205 = Some(v1204);
                                // Rule at src/isa/pulley_shared/lower.isle line 1530.
                                return v1205;
                            }
                            F32X4 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v1206 = constructor_pulley_vminimumf32x4(ctx, v154, v155);
                                let v1207 = constructor_output_vreg(ctx, v1206);
                                let v1208 = Some(v1207);
                                // Rule at src/isa/pulley_shared/lower.isle line 1531.
                                return v1208;
                            }
                            F64X2 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v1209 = constructor_pulley_vminimumf64x2(ctx, v154, v155);
                                let v1210 = constructor_output_vreg(ctx, v1209);
                                let v1211 = Some(v1210);
                                // Rule at src/isa/pulley_shared/lower.isle line 1532.
                                return v1211;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fmax => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v1132 = constructor_put_in_freg(ctx, v88.0);
                                let v1133 = constructor_put_in_freg(ctx, v88.1);
                                let v1188 = constructor_pulley_fmaximum32(ctx, v1132, v1133);
                                let v1189 = constructor_output_freg(ctx, v1188);
                                let v1190 = Some(v1189);
                                // Rule at src/isa/pulley_shared/lower.isle line 1522.
                                return v1190;
                            }
                            F64 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v1132 = constructor_put_in_freg(ctx, v88.0);
                                let v1133 = constructor_put_in_freg(ctx, v88.1);
                                let v1191 = constructor_pulley_fmaximum64(ctx, v1132, v1133);
                                let v1192 = constructor_output_freg(ctx, v1191);
                                let v1193 = Some(v1192);
                                // Rule at src/isa/pulley_shared/lower.isle line 1523.
                                return v1193;
                            }
                            F32X4 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v1194 = constructor_pulley_vmaximumf32x4(ctx, v154, v155);
                                let v1195 = constructor_output_vreg(ctx, v1194);
                                let v1196 = Some(v1195);
                                // Rule at src/isa/pulley_shared/lower.isle line 1524.
                                return v1196;
                            }
                            F64X2 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v1197 = constructor_pulley_vmaximumf64x2(ctx, v154, v155);
                                let v1198 = constructor_output_vreg(ctx, v1197);
                                let v1199 = Some(v1198);
                                // Rule at src/isa/pulley_shared/lower.isle line 1525.
                                return v1199;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Snarrow => {
                    let v88 = C::unpack_value_array_2(ctx, v87);
                    let v1438 = C::value_type(ctx, v88.0);
                    match v1438 {
                        I16X8 => {
                            let v154 = constructor_put_in_vreg(ctx, v88.0);
                            let v155 = constructor_put_in_vreg(ctx, v88.1);
                            let v1439 = constructor_pulley_vnarrow16x8_s(ctx, v154, v155);
                            let v1440 = constructor_output_vreg(ctx, v1439);
                            let v1441 = Some(v1440);
                            // Rule at src/isa/pulley_shared/lower.isle line 1688.
                            return v1441;
                        }
                        I32X4 => {
                            let v154 = constructor_put_in_vreg(ctx, v88.0);
                            let v155 = constructor_put_in_vreg(ctx, v88.1);
                            let v1442 = constructor_pulley_vnarrow32x4_s(ctx, v154, v155);
                            let v1443 = constructor_output_vreg(ctx, v1442);
                            let v1444 = Some(v1443);
                            // Rule at src/isa/pulley_shared/lower.isle line 1689.
                            return v1444;
                        }
                        I64X2 => {
                            let v154 = constructor_put_in_vreg(ctx, v88.0);
                            let v155 = constructor_put_in_vreg(ctx, v88.1);
                            let v1445 = constructor_pulley_vnarrow64x2_s(ctx, v154, v155);
                            let v1446 = constructor_output_vreg(ctx, v1445);
                            let v1447 = Some(v1446);
                            // Rule at src/isa/pulley_shared/lower.isle line 1690.
                            return v1447;
                        }
                        _ => {}
                    }
                }
                &Opcode::Unarrow => {
                    let v88 = C::unpack_value_array_2(ctx, v87);
                    let v1438 = C::value_type(ctx, v88.0);
                    match v1438 {
                        I16X8 => {
                            let v154 = constructor_put_in_vreg(ctx, v88.0);
                            let v155 = constructor_put_in_vreg(ctx, v88.1);
                            let v1448 = constructor_pulley_vnarrow16x8_u(ctx, v154, v155);
                            let v1449 = constructor_output_vreg(ctx, v1448);
                            let v1450 = Some(v1449);
                            // Rule at src/isa/pulley_shared/lower.isle line 1694.
                            return v1450;
                        }
                        I32X4 => {
                            let v154 = constructor_put_in_vreg(ctx, v88.0);
                            let v155 = constructor_put_in_vreg(ctx, v88.1);
                            let v1451 = constructor_pulley_vnarrow32x4_u(ctx, v154, v155);
                            let v1452 = constructor_output_vreg(ctx, v1451);
                            let v1453 = Some(v1452);
                            // Rule at src/isa/pulley_shared/lower.isle line 1695.
                            return v1453;
                        }
                        _ => {}
                    }
                }
                &Opcode::Uunarrow => {
                    let v88 = C::unpack_value_array_2(ctx, v87);
                    let v1438 = C::value_type(ctx, v88.0);
                    if v1438 == I64X2 {
                        let v154 = constructor_put_in_vreg(ctx, v88.0);
                        let v155 = constructor_put_in_vreg(ctx, v88.1);
                        let v1454 = constructor_pulley_vunarrow64x2_u(ctx, v154, v155);
                        let v1455 = constructor_output_vreg(ctx, v1454);
                        let v1456 = Some(v1455);
                        // Rule at src/isa/pulley_shared/lower.isle line 1699.
                        return v1456;
                    }
                }
                &Opcode::IaddPairwise => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I16X8 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v211 = constructor_pulley_vaddpairwisei16x8_s(ctx, v154, v155);
                                let v212 = constructor_output_vreg(ctx, v211);
                                let v213 = Some(v212);
                                // Rule at src/isa/pulley_shared/lower.isle line 247.
                                return v213;
                            }
                            I32X4 => {
                                let v88 = C::unpack_value_array_2(ctx, v87);
                                let v154 = constructor_put_in_vreg(ctx, v88.0);
                                let v155 = constructor_put_in_vreg(ctx, v88.1);
                                let v214 = constructor_pulley_vaddpairwisei32x4_s(ctx, v154, v155);
                                let v215 = constructor_output_vreg(ctx, v214);
                                let v216 = Some(v215);
                                // Rule at src/isa/pulley_shared/lower.isle line 248.
                                return v216;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Iconcat => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == I128 {
                            let v88 = C::unpack_value_array_2(ctx, v87);
                            let v953 = C::put_in_reg(ctx, v88.0);
                            let v954 = C::put_in_reg(ctx, v88.1);
                            let v955 = C::value_regs(ctx, v953, v954);
                            let v956 = C::output(ctx, v955);
                            let v957 = Some(v956);
                            // Rule at src/isa/pulley_shared/lower.isle line 1255.
                            return v957;
                        }
                    }
                }
                _ => {}
            }
        }
        &InstructionData::BinaryImm8 {
            opcode: ref v1463,
            arg: v1464,
            imm: v1465,
        } => {
            if let &Opcode::Extractlane = v1463 {
                let v1466 = C::value_type(ctx, v1464);
                match v1466 {
                    I8X16 => {
                        let v1468 = constructor_put_in_vreg(ctx, v1464);
                        let v1467 = C::u8_from_uimm8(ctx, v1465);
                        let v1469 = constructor_pulley_xextractv8x16(ctx, v1468, v1467);
                        let v1470 = constructor_output_xreg(ctx, v1469);
                        let v1471 = Some(v1470);
                        // Rule at src/isa/pulley_shared/lower.isle line 1711.
                        return v1471;
                    }
                    I16X8 => {
                        let v1468 = constructor_put_in_vreg(ctx, v1464);
                        let v1467 = C::u8_from_uimm8(ctx, v1465);
                        let v1472 = constructor_pulley_xextractv16x8(ctx, v1468, v1467);
                        let v1473 = constructor_output_xreg(ctx, v1472);
                        let v1474 = Some(v1473);
                        // Rule at src/isa/pulley_shared/lower.isle line 1713.
                        return v1474;
                    }
                    I32X4 => {
                        let v1468 = constructor_put_in_vreg(ctx, v1464);
                        let v1467 = C::u8_from_uimm8(ctx, v1465);
                        let v1475 = constructor_pulley_xextractv32x4(ctx, v1468, v1467);
                        let v1476 = constructor_output_xreg(ctx, v1475);
                        let v1477 = Some(v1476);
                        // Rule at src/isa/pulley_shared/lower.isle line 1715.
                        return v1477;
                    }
                    I64X2 => {
                        let v1468 = constructor_put_in_vreg(ctx, v1464);
                        let v1467 = C::u8_from_uimm8(ctx, v1465);
                        let v1478 = constructor_pulley_xextractv64x2(ctx, v1468, v1467);
                        let v1479 = constructor_output_xreg(ctx, v1478);
                        let v1480 = Some(v1479);
                        // Rule at src/isa/pulley_shared/lower.isle line 1717.
                        return v1480;
                    }
                    F32X4 => {
                        let v1468 = constructor_put_in_vreg(ctx, v1464);
                        let v1467 = C::u8_from_uimm8(ctx, v1465);
                        let v1481 = constructor_pulley_fextractv32x4(ctx, v1468, v1467);
                        let v1482 = constructor_output_freg(ctx, v1481);
                        let v1483 = Some(v1482);
                        // Rule at src/isa/pulley_shared/lower.isle line 1719.
                        return v1483;
                    }
                    F64X2 => {
                        let v1468 = constructor_put_in_vreg(ctx, v1464);
                        let v1467 = C::u8_from_uimm8(ctx, v1465);
                        let v1484 = constructor_pulley_fextractv64x2(ctx, v1468, v1467);
                        let v1485 = constructor_output_freg(ctx, v1484);
                        let v1486 = Some(v1485);
                        // Rule at src/isa/pulley_shared/lower.isle line 1721.
                        return v1486;
                    }
                    _ => {}
                }
            }
        }
        &InstructionData::Call {
            opcode: ref v34,
            args: v35,
            func_ref: v36,
        } => {
            match v34 {
                &Opcode::Call => {
                    let v38 = C::func_ref_data(ctx, v36);
                    let v37 = C::value_list_slice(ctx, v35);
                    let v42 = C::gen_call(ctx, v38.0, v38.1, v38.2, v37);
                    let v43 = Some(v42);
                    // Rule at src/isa/pulley_shared/lower.isle line 142.
                    return v43;
                }
                &Opcode::ReturnCall => {
                    let v38 = C::func_ref_data(ctx, v36);
                    let v37 = C::value_list_slice(ctx, v35);
                    let v54 = C::gen_return_call(ctx, v38.0, v38.1, v38.2, v37);
                    let v55 = Some(v54);
                    // Rule at src/isa/pulley_shared/lower.isle line 150.
                    return v55;
                }
                _ => {}
            }
        }
        &InstructionData::CallIndirect {
            opcode: ref v44,
            args: v45,
            sig_ref: v46,
        } => {
            match v44 {
                &Opcode::CallIndirect => {
                    let v47 = C::value_list_slice(ctx, v45);
                    let v48 = C::value_slice_unwrap(ctx, v47);
                    if let Some(v49) = v48 {
                        let v52 = C::gen_call_indirect(ctx, v46, v49.0, v49.1);
                        let v53 = Some(v52);
                        // Rule at src/isa/pulley_shared/lower.isle line 145.
                        return v53;
                    }
                }
                &Opcode::ReturnCallIndirect => {
                    let v47 = C::value_list_slice(ctx, v45);
                    let v48 = C::value_slice_unwrap(ctx, v47);
                    if let Some(v49) = v48 {
                        let v56 = C::gen_return_call_indirect(ctx, v46, v49.0, v49.1);
                        let v57 = Some(v56);
                        // Rule at src/isa/pulley_shared/lower.isle line 153.
                        return v57;
                    }
                }
                _ => {}
            }
        }
        &InstructionData::CondTrap {
            opcode: ref v7,
            arg: v8,
            code: ref v9,
        } => {
            match v7 {
                &Opcode::Trapz => {
                    let v10 = &constructor_lower_cond(ctx, v8);
                    let v11 = &C::cond_invert(ctx, v10);
                    let v12 = &constructor_pulley_trap_if(ctx, v11, v9);
                    let v13 = constructor_side_effect(ctx, v12);
                    let v14 = Some(v13);
                    // Rule at src/isa/pulley_shared/lower.isle line 115.
                    return v14;
                }
                &Opcode::Trapnz => {
                    let v10 = &constructor_lower_cond(ctx, v8);
                    let v15 = &constructor_pulley_trap_if(ctx, v10, v9);
                    let v16 = constructor_side_effect(ctx, v15);
                    let v17 = Some(v16);
                    // Rule at src/isa/pulley_shared/lower.isle line 118.
                    return v17;
                }
                _ => {}
            }
        }
        &InstructionData::FloatCompare {
            opcode: ref v758,
            args: ref v759,
            cond: ref v760,
        } => {
            if let &Opcode::Fcmp = v758 {
                let v761 = C::unpack_value_array_2(ctx, v759);
                let v764 = C::value_type(ctx, v761.1);
                let v770 = C::ty_vec128(ctx, v764);
                if let Some(v771) = v770 {
                    let v772 = constructor_lower_vfcmp(ctx, v771, v760, v761.0, v761.1);
                    let v773 = constructor_output_vreg(ctx, v772);
                    let v774 = Some(v773);
                    // Rule at src/isa/pulley_shared/lower.isle line 819.
                    return v774;
                }
                let v765 = C::ty_scalar_float(ctx, v764);
                if let Some(v766) = v765 {
                    let v767 = constructor_lower_fcmp(ctx, v766, v760, v761.0, v761.1);
                    let v768 = constructor_output_xreg(ctx, v767);
                    let v769 = Some(v768);
                    // Rule at src/isa/pulley_shared/lower.isle line 816.
                    return v769;
                }
            }
        }
        &InstructionData::IntAddTrap {
            opcode: ref v970,
            args: ref v971,
            code: ref v972,
        } => {
            if let &Opcode::UaddOverflowTrap = v970 {
                let v58 = C::first_result(ctx, arg0);
                if let Some(v59) = v58 {
                    let v60 = C::value_type(ctx, v59);
                    match v60 {
                        I32 => {
                            let v973 = C::unpack_value_array_2(ctx, v971);
                            let v976 = constructor_put_in_xreg(ctx, v973.0);
                            let v977 = constructor_put_in_xreg(ctx, v973.1);
                            let v978 = constructor_pulley_xadd32_uoverflow_trap(ctx, v976, v977, v972);
                            let v979 = constructor_output_xreg(ctx, v978);
                            let v980 = Some(v979);
                            // Rule at src/isa/pulley_shared/lower.isle line 1267.
                            return v980;
                        }
                        I64 => {
                            let v973 = C::unpack_value_array_2(ctx, v971);
                            let v976 = constructor_put_in_xreg(ctx, v973.0);
                            let v977 = constructor_put_in_xreg(ctx, v973.1);
                            let v981 = constructor_pulley_xadd64_uoverflow_trap(ctx, v976, v977, v972);
                            let v982 = constructor_output_xreg(ctx, v981);
                            let v983 = Some(v982);
                            // Rule at src/isa/pulley_shared/lower.isle line 1270.
                            return v983;
                        }
                        _ => {}
                    }
                }
            }
        }
        &InstructionData::IntCompare {
            opcode: ref v740,
            args: ref v741,
            cond: ref v742,
        } => {
            if let &Opcode::Icmp = v740 {
                let v743 = C::unpack_value_array_2(ctx, v741);
                let v752 = C::value_type(ctx, v743.0);
                let v753 = C::ty_vec128(ctx, v752);
                if let Some(v754) = v753 {
                    let v755 = constructor_lower_vcmp(ctx, v754, v742, v743.0, v743.1);
                    let v756 = constructor_output_vreg(ctx, v755);
                    let v757 = Some(v756);
                    // Rule at src/isa/pulley_shared/lower.isle line 775.
                    return v757;
                }
                let v746 = C::value_type(ctx, v743.1);
                let v747 = C::ty_int(ctx, v746);
                if let Some(v748) = v747 {
                    let v749 = constructor_lower_icmp(ctx, v748, v742, v743.0, v743.1);
                    let v750 = constructor_output_xreg(ctx, v749);
                    let v751 = Some(v750);
                    // Rule at src/isa/pulley_shared/lower.isle line 666.
                    return v751;
                }
            }
        }
        &InstructionData::Load {
            opcode: ref v775,
            arg: v776,
            flags: v777,
            offset: v778,
        } => {
            match v775 {
                &Opcode::Load => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == I128 {
                            let v788 = C::offset32_to_i32(ctx, v778);
                            let v790 = C::s32_add_fallible(ctx, v788, 8_i32);
                            if let Some(v791) = v790 {
                                let v792 = &constructor_amode(ctx, v776, v778);
                                let v794 = constructor_pulley_xload(ctx, v792, I64, v777);
                                let v795 = C::i32_to_offset32(ctx, v791);
                                let v796 = &constructor_amode(ctx, v776, v795);
                                let v797 = constructor_pulley_xload(ctx, v796, I64, v777);
                                let v798 = C::xreg_to_reg(ctx, v794);
                                let v799 = C::xreg_to_reg(ctx, v797);
                                let v800 = C::value_regs(ctx, v798, v799);
                                let v801 = C::output(ctx, v800);
                                let v802 = Some(v801);
                                // Rule at src/isa/pulley_shared/lower.isle line 887.
                                return v802;
                            }
                        }
                        let v542 = C::ty_vec128(ctx, v60);
                        if let Some(v543) = v542 {
                            let v844 = constructor_gen_vload(ctx, v776, v778, v777, v543, &VExtKind::None);
                            let v845 = constructor_output_vreg(ctx, v844);
                            let v846 = Some(v845);
                            // Rule at src/isa/pulley_shared/lower.isle line 929.
                            return v846;
                        }
                        let v783 = C::ty_scalar_float(ctx, v60);
                        if let Some(v784) = v783 {
                            let v785 = constructor_gen_fload(ctx, v776, v778, v777, v784);
                            let v786 = constructor_output_freg(ctx, v785);
                            let v787 = Some(v786);
                            // Rule at src/isa/pulley_shared/lower.isle line 884.
                            return v787;
                        }
                        let v82 = C::ty_int(ctx, v60);
                        if let Some(v83) = v82 {
                            let v84 = C::fits_in_64(ctx, v83);
                            if let Some(v85) = v84 {
                                let v780 = constructor_gen_xload(ctx, v776, v778, v777, v85, &ExtKind::None);
                                let v781 = constructor_output_xreg(ctx, v780);
                                let v782 = Some(v781);
                                // Rule at src/isa/pulley_shared/lower.isle line 881.
                                return v782;
                            }
                        }
                    }
                }
                &Opcode::Uload8 => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == I64 {
                            let v817 = constructor_gen_xload(ctx, v776, v778, v777, I8, &ExtKind::Zero64);
                            let v818 = constructor_output_xreg(ctx, v817);
                            let v819 = Some(v818);
                            // Rule at src/isa/pulley_shared/lower.isle line 902.
                            return v819;
                        }
                        let v82 = C::ty_int(ctx, v60);
                        if let Some(v83) = v82 {
                            let v99 = C::fits_in_32(ctx, v83);
                            if let Some(v100) = v99 {
                                let v805 = constructor_gen_xload(ctx, v776, v778, v777, I8, &ExtKind::Zero32);
                                let v806 = constructor_output_xreg(ctx, v805);
                                let v807 = Some(v806);
                                // Rule at src/isa/pulley_shared/lower.isle line 893.
                                return v807;
                            }
                        }
                    }
                }
                &Opcode::Sload8 => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == I64 {
                            let v834 = constructor_gen_xload(ctx, v776, v778, v777, I8, &ExtKind::Sign64);
                            let v835 = constructor_output_xreg(ctx, v834);
                            let v836 = Some(v835);
                            // Rule at src/isa/pulley_shared/lower.isle line 920.
                            return v836;
                        }
                        let v82 = C::ty_int(ctx, v60);
                        if let Some(v83) = v82 {
                            let v99 = C::fits_in_32(ctx, v83);
                            if let Some(v100) = v99 {
                                let v827 = constructor_gen_xload(ctx, v776, v778, v777, I8, &ExtKind::Sign32);
                                let v828 = constructor_output_xreg(ctx, v827);
                                let v829 = Some(v828);
                                // Rule at src/isa/pulley_shared/lower.isle line 911.
                                return v829;
                            }
                        }
                    }
                }
                &Opcode::Uload16 => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == I64 {
                            let v820 = constructor_gen_xload(ctx, v776, v778, v777, I16, &ExtKind::Zero64);
                            let v821 = constructor_output_xreg(ctx, v820);
                            let v822 = Some(v821);
                            // Rule at src/isa/pulley_shared/lower.isle line 905.
                            return v822;
                        }
                        let v82 = C::ty_int(ctx, v60);
                        if let Some(v83) = v82 {
                            let v99 = C::fits_in_32(ctx, v83);
                            if let Some(v100) = v99 {
                                let v809 = constructor_gen_xload(ctx, v776, v778, v777, I16, &ExtKind::Zero32);
                                let v810 = constructor_output_xreg(ctx, v809);
                                let v811 = Some(v810);
                                // Rule at src/isa/pulley_shared/lower.isle line 896.
                                return v811;
                            }
                        }
                    }
                }
                &Opcode::Sload16 => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == I64 {
                            let v837 = constructor_gen_xload(ctx, v776, v778, v777, I16, &ExtKind::Sign64);
                            let v838 = constructor_output_xreg(ctx, v837);
                            let v839 = Some(v838);
                            // Rule at src/isa/pulley_shared/lower.isle line 923.
                            return v839;
                        }
                        let v82 = C::ty_int(ctx, v60);
                        if let Some(v83) = v82 {
                            let v99 = C::fits_in_32(ctx, v83);
                            if let Some(v100) = v99 {
                                let v830 = constructor_gen_xload(ctx, v776, v778, v777, I16, &ExtKind::Sign32);
                                let v831 = constructor_output_xreg(ctx, v830);
                                let v832 = Some(v831);
                                // Rule at src/isa/pulley_shared/lower.isle line 914.
                                return v832;
                            }
                        }
                    }
                }
                &Opcode::Uload32 => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == I64 {
                            let v823 = constructor_gen_xload(ctx, v776, v778, v777, I32, &ExtKind::Zero64);
                            let v824 = constructor_output_xreg(ctx, v823);
                            let v825 = Some(v824);
                            // Rule at src/isa/pulley_shared/lower.isle line 908.
                            return v825;
                        }
                        let v82 = C::ty_int(ctx, v60);
                        if let Some(v83) = v82 {
                            let v99 = C::fits_in_32(ctx, v83);
                            if let Some(v100) = v99 {
                                let v813 = constructor_gen_xload(ctx, v776, v778, v777, I32, &ExtKind::None);
                                let v814 = constructor_output_xreg(ctx, v813);
                                let v815 = Some(v814);
                                // Rule at src/isa/pulley_shared/lower.isle line 899.
                                return v815;
                            }
                        }
                    }
                }
                &Opcode::Sload32 => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == I64 {
                            let v840 = constructor_gen_xload(ctx, v776, v778, v777, I32, &ExtKind::Sign64);
                            let v841 = constructor_output_xreg(ctx, v840);
                            let v842 = Some(v841);
                            // Rule at src/isa/pulley_shared/lower.isle line 926.
                            return v842;
                        }
                        let v82 = C::ty_int(ctx, v60);
                        if let Some(v83) = v82 {
                            let v99 = C::fits_in_32(ctx, v83);
                            if let Some(v100) = v99 {
                                let v813 = constructor_gen_xload(ctx, v776, v778, v777, I32, &ExtKind::None);
                                let v814 = constructor_output_xreg(ctx, v813);
                                let v815 = Some(v814);
                                // Rule at src/isa/pulley_shared/lower.isle line 917.
                                return v815;
                            }
                        }
                    }
                }
                &Opcode::Uload8x8 => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        let v852 = constructor_gen_vload(ctx, v776, v778, v777, v60, &VExtKind::U8x8);
                        let v853 = constructor_output_vreg(ctx, v852);
                        let v854 = Some(v853);
                        // Rule at src/isa/pulley_shared/lower.isle line 935.
                        return v854;
                    }
                }
                &Opcode::Sload8x8 => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        let v848 = constructor_gen_vload(ctx, v776, v778, v777, v60, &VExtKind::S8x8);
                        let v849 = constructor_output_vreg(ctx, v848);
                        let v850 = Some(v849);
                        // Rule at src/isa/pulley_shared/lower.isle line 932.
                        return v850;
                    }
                }
                &Opcode::Uload16x4 => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        let v860 = constructor_gen_vload(ctx, v776, v778, v777, v60, &VExtKind::U16x4);
                        let v861 = constructor_output_vreg(ctx, v860);
                        let v862 = Some(v861);
                        // Rule at src/isa/pulley_shared/lower.isle line 941.
                        return v862;
                    }
                }
                &Opcode::Sload16x4 => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        let v856 = constructor_gen_vload(ctx, v776, v778, v777, v60, &VExtKind::S16x4);
                        let v857 = constructor_output_vreg(ctx, v856);
                        let v858 = Some(v857);
                        // Rule at src/isa/pulley_shared/lower.isle line 938.
                        return v858;
                    }
                }
                &Opcode::Uload32x2 => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        let v868 = constructor_gen_vload(ctx, v776, v778, v777, v60, &VExtKind::U32x2);
                        let v869 = constructor_output_vreg(ctx, v868);
                        let v870 = Some(v869);
                        // Rule at src/isa/pulley_shared/lower.isle line 947.
                        return v870;
                    }
                }
                &Opcode::Sload32x2 => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        let v864 = constructor_gen_vload(ctx, v776, v778, v777, v60, &VExtKind::S32x2);
                        let v865 = constructor_output_vreg(ctx, v864);
                        let v866 = Some(v865);
                        // Rule at src/isa/pulley_shared/lower.isle line 944.
                        return v866;
                    }
                }
                _ => {}
            }
        }
        &InstructionData::LoadNoOffset {
            opcode: ref v1007,
            arg: v1008,
            flags: v1009,
        } => {
            if let &Opcode::Bitcast = v1007 {
                let v58 = C::first_result(ctx, arg0);
                if let Some(v59) = v58 {
                    let v60 = C::value_type(ctx, v59);
                    let v1010 = C::value_type(ctx, v1008);
                    if v60 == v1010 {
                        let v1027 = constructor_output_value(ctx, v1008);
                        let v1028 = Some(v1027);
                        // Rule at src/isa/pulley_shared/lower.isle line 1370.
                        return v1028;
                    }
                    let v542 = C::ty_vec128(ctx, v60);
                    if let Some(v543) = v542 {
                        let v1025 = C::ty_vec128(ctx, v1010);
                        if let Some(v1026) = v1025 {
                            let v1027 = constructor_output_value(ctx, v1008);
                            let v1028 = Some(v1027);
                            // Rule at src/isa/pulley_shared/lower.isle line 1367.
                            return v1028;
                        }
                    }
                    match v60 {
                        I32 => {
                            if v1010 == F32 {
                                let v1018 = constructor_put_in_freg(ctx, v1008);
                                let v1019 = constructor_pulley_bitcast_int_from_float_32(ctx, v1018);
                                let v1020 = constructor_output_xreg(ctx, v1019);
                                let v1021 = Some(v1020);
                                // Rule at src/isa/pulley_shared/lower.isle line 1361.
                                return v1021;
                            }
                        }
                        I64 => {
                            if v1010 == F64 {
                                let v1018 = constructor_put_in_freg(ctx, v1008);
                                let v1022 = constructor_pulley_bitcast_int_from_float_64(ctx, v1018);
                                let v1023 = constructor_output_xreg(ctx, v1022);
                                let v1024 = Some(v1023);
                                // Rule at src/isa/pulley_shared/lower.isle line 1364.
                                return v1024;
                            }
                        }
                        F32 => {
                            if v1010 == I32 {
                                let v1011 = constructor_put_in_xreg(ctx, v1008);
                                let v1012 = constructor_pulley_bitcast_float_from_int_32(ctx, v1011);
                                let v1013 = constructor_output_freg(ctx, v1012);
                                let v1014 = Some(v1013);
                                // Rule at src/isa/pulley_shared/lower.isle line 1355.
                                return v1014;
                            }
                        }
                        F64 => {
                            if v1010 == I64 {
                                let v1011 = constructor_put_in_xreg(ctx, v1008);
                                let v1015 = constructor_pulley_bitcast_float_from_int_64(ctx, v1011);
                                let v1016 = constructor_output_freg(ctx, v1015);
                                let v1017 = Some(v1016);
                                // Rule at src/isa/pulley_shared/lower.isle line 1358.
                                return v1017;
                            }
                        }
                        _ => {}
                    }
                }
            }
        }
        &InstructionData::MultiAry {
            opcode: ref v29,
            args: v30,
        } => {
            if let &Opcode::Return = v29 {
                let v31 = C::value_list_slice(ctx, v30);
                let v32 = constructor_lower_return(ctx, v31);
                let v33 = Some(v32);
                // Rule at src/isa/pulley_shared/lower.isle line 137.
                return v33;
            }
        }
        &InstructionData::NullAry {
            opcode: ref v18,
        } => {
            match v18 {
                &Opcode::GetFramePointer => {
                    let v23 = constructor_pulley_xmov_fp(ctx);
                    let v24 = constructor_output_xreg(ctx, v23);
                    let v25 = Some(v24);
                    // Rule at src/isa/pulley_shared/lower.isle line 128.
                    return v25;
                }
                &Opcode::GetStackPointer => {
                    let v19 = C::sp_reg(ctx);
                    let v20 = constructor_pulley_get_special(ctx, v19);
                    let v21 = constructor_output_xreg(ctx, v20);
                    let v22 = Some(v21);
                    // Rule at src/isa/pulley_shared/lower.isle line 123.
                    return v22;
                }
                &Opcode::GetReturnAddress => {
                    let v26 = constructor_pulley_xmov_lr(ctx);
                    let v27 = constructor_output_xreg(ctx, v26);
                    let v28 = Some(v27);
                    // Rule at src/isa/pulley_shared/lower.isle line 132.
                    return v28;
                }
                _ => {}
            }
        }
        &InstructionData::Shuffle {
            opcode: ref v1539,
            args: ref v1540,
            imm: v1541,
        } => {
            if let &Opcode::Shuffle = v1539 {
                let v58 = C::first_result(ctx, arg0);
                if let Some(v59) = v58 {
                    let v60 = C::value_type(ctx, v59);
                    if v60 == I8X16 {
                        let v1545 = C::u128_from_immediate(ctx, v1541);
                        if let Some(v1546) = v1545 {
                            let v1542 = C::unpack_value_array_2(ctx, v1540);
                            let v1547 = constructor_put_in_vreg(ctx, v1542.0);
                            let v1548 = constructor_put_in_vreg(ctx, v1542.1);
                            let v1549 = constructor_pulley_vshuffle(ctx, v1547, v1548, v1546);
                            let v1550 = constructor_output_vreg(ctx, v1549);
                            let v1551 = Some(v1550);
                            // Rule at src/isa/pulley_shared/lower.isle line 1760.
                            return v1551;
                        }
                    }
                }
            }
        }
        &InstructionData::StackLoad {
            opcode: ref v917,
            stack_slot: v918,
            offset: v919,
        } => {
            if let &Opcode::StackAddr = v917 {
                let v920 = constructor_lower_stack_addr(ctx, v918, v919);
                let v921 = constructor_output_xreg(ctx, v920);
                let v922 = Some(v921);
                // Rule at src/isa/pulley_shared/lower.isle line 1214.
                return v922;
            }
        }
        &InstructionData::Store {
            opcode: ref v871,
            args: ref v872,
            flags: v873,
            offset: v874,
        } => {
            match v871 {
                &Opcode::Store => {
                    let v875 = C::unpack_value_array_2(ctx, v872);
                    let v878 = C::value_type(ctx, v875.0);
                    if v878 == I128 {
                        let v905 = C::put_in_regs(ctx, v875.0);
                        let v906 = C::value_regs_get(ctx, v905, 0x0_usize);
                        let v907 = C::xreg_new(ctx, v906);
                        let v908 = C::value_regs_get(ctx, v905, 0x1_usize);
                        let v909 = C::xreg_new(ctx, v908);
                        let v910 = constructor_put_in_xreg(ctx, v875.1);
                        let v913 = Amode::RegOffset {
                            base: v910,
                            offset: 0_i32,
                        };
                        let v911 = Amode::RegOffset {
                            base: v910,
                            offset: 8_i32,
                        };
                        let v914 = &constructor_emit_store_i128(ctx, v873, v907, v909, &v913, &v911);
                        let v915 = constructor_side_effect(ctx, v914);
                        let v916 = Some(v915);
                        // Rule at src/isa/pulley_shared/lower.isle line 1147.
                        return v916;
                    }
                    let v900 = C::ty_vec128(ctx, v878);
                    if let Some(v901) = v900 {
                        let v902 = &constructor_gen_store(ctx, v875.0, v875.1, v874, v873, v901);
                        let v903 = constructor_side_effect(ctx, v902);
                        let v904 = Some(v903);
                        // Rule at src/isa/pulley_shared/lower.isle line 1142.
                        return v904;
                    }
                    let v886 = C::ty_scalar_float(ctx, v878);
                    if let Some(v887) = v886 {
                        let v888 = &constructor_gen_store(ctx, v875.0, v875.1, v874, v873, v887);
                        let v889 = constructor_side_effect(ctx, v888);
                        let v890 = Some(v889);
                        // Rule at src/isa/pulley_shared/lower.isle line 1130.
                        return v890;
                    }
                    let v879 = C::ty_int(ctx, v878);
                    if let Some(v880) = v879 {
                        let v881 = C::fits_in_64(ctx, v880);
                        if let Some(v882) = v881 {
                            let v883 = &constructor_gen_store(ctx, v875.0, v875.1, v874, v873, v882);
                            let v884 = constructor_side_effect(ctx, v883);
                            let v885 = Some(v884);
                            // Rule at src/isa/pulley_shared/lower.isle line 1127.
                            return v885;
                        }
                    }
                }
                &Opcode::Istore8 => {
                    let v875 = C::unpack_value_array_2(ctx, v872);
                    let v891 = &constructor_gen_store(ctx, v875.0, v875.1, v874, v873, I8);
                    let v892 = constructor_side_effect(ctx, v891);
                    let v893 = Some(v892);
                    // Rule at src/isa/pulley_shared/lower.isle line 1133.
                    return v893;
                }
                &Opcode::Istore16 => {
                    let v875 = C::unpack_value_array_2(ctx, v872);
                    let v894 = &constructor_gen_store(ctx, v875.0, v875.1, v874, v873, I16);
                    let v895 = constructor_side_effect(ctx, v894);
                    let v896 = Some(v895);
                    // Rule at src/isa/pulley_shared/lower.isle line 1136.
                    return v896;
                }
                &Opcode::Istore32 => {
                    let v875 = C::unpack_value_array_2(ctx, v872);
                    let v897 = &constructor_gen_store(ctx, v875.0, v875.1, v874, v873, I32);
                    let v898 = constructor_side_effect(ctx, v897);
                    let v899 = Some(v898);
                    // Rule at src/isa/pulley_shared/lower.isle line 1139.
                    return v899;
                }
                _ => {}
            }
        }
        &InstructionData::Ternary {
            opcode: ref v602,
            args: ref v603,
        } => {
            match v602 {
                &Opcode::Select => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        let v542 = C::ty_vec128(ctx, v60);
                        if let Some(v543) = v542 {
                            let v604 = C::unpack_value_array_3(ctx, v603);
                            let v984 = &constructor_lower_cond(ctx, v604.0);
                            let v985 = constructor_emit_cond(ctx, v984);
                            let v1002 = constructor_put_in_vreg(ctx, v604.1);
                            let v1003 = constructor_put_in_vreg(ctx, v604.2);
                            let v1004 = constructor_pulley_vselect(ctx, v985, v1002, v1003);
                            let v1005 = constructor_output_vreg(ctx, v1004);
                            let v1006 = Some(v1005);
                            // Rule at src/isa/pulley_shared/lower.isle line 1287.
                            return v1006;
                        }
                        match v60 {
                            I64 => {
                                let v604 = C::unpack_value_array_3(ctx, v603);
                                let v984 = &constructor_lower_cond(ctx, v604.0);
                                let v985 = constructor_emit_cond(ctx, v984);
                                let v986 = constructor_put_in_xreg(ctx, v604.1);
                                let v987 = constructor_put_in_xreg(ctx, v604.2);
                                let v991 = constructor_pulley_xselect64(ctx, v985, v986, v987);
                                let v992 = constructor_output_xreg(ctx, v991);
                                let v993 = Some(v992);
                                // Rule at src/isa/pulley_shared/lower.isle line 1278.
                                return v993;
                            }
                            F32 => {
                                let v604 = C::unpack_value_array_3(ctx, v603);
                                let v984 = &constructor_lower_cond(ctx, v604.0);
                                let v985 = constructor_emit_cond(ctx, v984);
                                let v994 = constructor_put_in_freg(ctx, v604.1);
                                let v995 = constructor_put_in_freg(ctx, v604.2);
                                let v996 = constructor_pulley_fselect32(ctx, v985, v994, v995);
                                let v997 = constructor_output_freg(ctx, v996);
                                let v998 = Some(v997);
                                // Rule at src/isa/pulley_shared/lower.isle line 1281.
                                return v998;
                            }
                            F64 => {
                                let v604 = C::unpack_value_array_3(ctx, v603);
                                let v984 = &constructor_lower_cond(ctx, v604.0);
                                let v985 = constructor_emit_cond(ctx, v984);
                                let v994 = constructor_put_in_freg(ctx, v604.1);
                                let v995 = constructor_put_in_freg(ctx, v604.2);
                                let v999 = constructor_pulley_fselect64(ctx, v985, v994, v995);
                                let v1000 = constructor_output_freg(ctx, v999);
                                let v1001 = Some(v1000);
                                // Rule at src/isa/pulley_shared/lower.isle line 1284.
                                return v1001;
                            }
                            _ => {}
                        }
                        let v82 = C::ty_int(ctx, v60);
                        if let Some(v83) = v82 {
                            let v99 = C::fits_in_32(ctx, v83);
                            if let Some(v100) = v99 {
                                let v604 = C::unpack_value_array_3(ctx, v603);
                                let v984 = &constructor_lower_cond(ctx, v604.0);
                                let v985 = constructor_emit_cond(ctx, v984);
                                let v986 = constructor_put_in_xreg(ctx, v604.1);
                                let v987 = constructor_put_in_xreg(ctx, v604.2);
                                let v988 = constructor_pulley_xselect32(ctx, v985, v986, v987);
                                let v989 = constructor_output_xreg(ctx, v988);
                                let v990 = Some(v989);
                                // Rule at src/isa/pulley_shared/lower.isle line 1275.
                                return v990;
                            }
                        }
                    }
                }
                &Opcode::Bitselect => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        let v542 = C::ty_vec128(ctx, v60);
                        if let Some(v543) = v542 {
                            let v604 = C::unpack_value_array_3(ctx, v603);
                            let v608 = constructor_put_in_vreg(ctx, v604.0);
                            let v609 = constructor_put_in_vreg(ctx, v604.1);
                            let v610 = constructor_put_in_vreg(ctx, v604.2);
                            let v611 = constructor_pulley_vbitselect128(ctx, v608, v609, v610);
                            let v612 = constructor_output_vreg(ctx, v611);
                            let v613 = Some(v612);
                            // Rule at src/isa/pulley_shared/lower.isle line 582.
                            return v613;
                        }
                    }
                }
                &Opcode::Fma => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32X4 => {
                                let v604 = C::unpack_value_array_3(ctx, v603);
                                let v608 = constructor_put_in_vreg(ctx, v604.0);
                                let v609 = constructor_put_in_vreg(ctx, v604.1);
                                let v610 = constructor_put_in_vreg(ctx, v604.2);
                                let v1555 = constructor_pulley_vfma32x4(ctx, v608, v609, v610);
                                let v1556 = constructor_output_vreg(ctx, v1555);
                                let v1557 = Some(v1556);
                                // Rule at src/isa/pulley_shared/lower.isle line 1769.
                                return v1557;
                            }
                            F64X2 => {
                                let v604 = C::unpack_value_array_3(ctx, v603);
                                let v608 = constructor_put_in_vreg(ctx, v604.0);
                                let v609 = constructor_put_in_vreg(ctx, v604.1);
                                let v610 = constructor_put_in_vreg(ctx, v604.2);
                                let v1558 = constructor_pulley_vfma64x2(ctx, v608, v609, v610);
                                let v1559 = constructor_output_vreg(ctx, v1558);
                                let v1560 = Some(v1559);
                                // Rule at src/isa/pulley_shared/lower.isle line 1770.
                                return v1560;
                            }
                            _ => {}
                        }
                    }
                }
                _ => {}
            }
        }
        &InstructionData::TernaryImm8 {
            opcode: ref v1487,
            args: ref v1488,
            imm: v1489,
        } => {
            if let &Opcode::Insertlane = v1487 {
                let v1490 = C::unpack_value_array_2(ctx, v1488);
                let v1493 = C::value_type(ctx, v1490.0);
                match v1493 {
                    I8X16 => {
                        let v1495 = constructor_put_in_vreg(ctx, v1490.0);
                        let v1496 = constructor_put_in_xreg(ctx, v1490.1);
                        let v1494 = C::u8_from_uimm8(ctx, v1489);
                        let v1497 = constructor_pulley_vinsertx8(ctx, v1495, v1496, v1494);
                        let v1498 = constructor_output_vreg(ctx, v1497);
                        let v1499 = Some(v1498);
                        // Rule at src/isa/pulley_shared/lower.isle line 1726.
                        return v1499;
                    }
                    I16X8 => {
                        let v1495 = constructor_put_in_vreg(ctx, v1490.0);
                        let v1496 = constructor_put_in_xreg(ctx, v1490.1);
                        let v1494 = C::u8_from_uimm8(ctx, v1489);
                        let v1500 = constructor_pulley_vinsertx16(ctx, v1495, v1496, v1494);
                        let v1501 = constructor_output_vreg(ctx, v1500);
                        let v1502 = Some(v1501);
                        // Rule at src/isa/pulley_shared/lower.isle line 1728.
                        return v1502;
                    }
                    I32X4 => {
                        let v1495 = constructor_put_in_vreg(ctx, v1490.0);
                        let v1496 = constructor_put_in_xreg(ctx, v1490.1);
                        let v1494 = C::u8_from_uimm8(ctx, v1489);
                        let v1503 = constructor_pulley_vinsertx32(ctx, v1495, v1496, v1494);
                        let v1504 = constructor_output_vreg(ctx, v1503);
                        let v1505 = Some(v1504);
                        // Rule at src/isa/pulley_shared/lower.isle line 1730.
                        return v1505;
                    }
                    I64X2 => {
                        let v1495 = constructor_put_in_vreg(ctx, v1490.0);
                        let v1496 = constructor_put_in_xreg(ctx, v1490.1);
                        let v1494 = C::u8_from_uimm8(ctx, v1489);
                        let v1506 = constructor_pulley_vinsertx64(ctx, v1495, v1496, v1494);
                        let v1507 = constructor_output_vreg(ctx, v1506);
                        let v1508 = Some(v1507);
                        // Rule at src/isa/pulley_shared/lower.isle line 1732.
                        return v1508;
                    }
                    F32X4 => {
                        let v1495 = constructor_put_in_vreg(ctx, v1490.0);
                        let v1509 = constructor_put_in_freg(ctx, v1490.1);
                        let v1494 = C::u8_from_uimm8(ctx, v1489);
                        let v1510 = constructor_pulley_vinsertf32(ctx, v1495, v1509, v1494);
                        let v1511 = constructor_output_vreg(ctx, v1510);
                        let v1512 = Some(v1511);
                        // Rule at src/isa/pulley_shared/lower.isle line 1734.
                        return v1512;
                    }
                    F64X2 => {
                        let v1495 = constructor_put_in_vreg(ctx, v1490.0);
                        let v1509 = constructor_put_in_freg(ctx, v1490.1);
                        let v1494 = C::u8_from_uimm8(ctx, v1489);
                        let v1513 = constructor_pulley_vinsertf64(ctx, v1495, v1509, v1494);
                        let v1514 = constructor_output_vreg(ctx, v1513);
                        let v1515 = Some(v1514);
                        // Rule at src/isa/pulley_shared/lower.isle line 1736.
                        return v1515;
                    }
                    _ => {}
                }
            }
        }
        &InstructionData::Trap {
            opcode: ref v2,
            code: ref v3,
        } => {
            if let &Opcode::Trap = v2 {
                let v4 = &constructor_pulley_trap(ctx, v3);
                let v5 = constructor_side_effect(ctx, v4);
                let v6 = Some(v5);
                // Rule at src/isa/pulley_shared/lower.isle line 110.
                return v6;
            }
        }
        &InstructionData::Unary {
            opcode: ref v589,
            arg: v590,
        } => {
            match v589 {
                &Opcode::Splat => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I8X16 => {
                                let v591 = constructor_put_in_xreg(ctx, v590);
                                let v1348 = constructor_pulley_vsplatx8(ctx, v591);
                                let v1349 = constructor_output_vreg(ctx, v1348);
                                let v1350 = Some(v1349);
                                // Rule at src/isa/pulley_shared/lower.isle line 1626.
                                return v1350;
                            }
                            I16X8 => {
                                let v591 = constructor_put_in_xreg(ctx, v590);
                                let v1351 = constructor_pulley_vsplatx16(ctx, v591);
                                let v1352 = constructor_output_vreg(ctx, v1351);
                                let v1353 = Some(v1352);
                                // Rule at src/isa/pulley_shared/lower.isle line 1627.
                                return v1353;
                            }
                            I32X4 => {
                                let v591 = constructor_put_in_xreg(ctx, v590);
                                let v1354 = constructor_pulley_vsplatx32(ctx, v591);
                                let v1355 = constructor_output_vreg(ctx, v1354);
                                let v1356 = Some(v1355);
                                // Rule at src/isa/pulley_shared/lower.isle line 1628.
                                return v1356;
                            }
                            I64X2 => {
                                let v591 = constructor_put_in_xreg(ctx, v590);
                                let v1357 = constructor_pulley_vsplatx64(ctx, v591);
                                let v1358 = constructor_output_vreg(ctx, v1357);
                                let v1359 = Some(v1358);
                                // Rule at src/isa/pulley_shared/lower.isle line 1629.
                                return v1359;
                            }
                            F32X4 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1360 = constructor_pulley_vsplatf32(ctx, v1029);
                                let v1361 = constructor_output_vreg(ctx, v1360);
                                let v1362 = Some(v1361);
                                // Rule at src/isa/pulley_shared/lower.isle line 1630.
                                return v1362;
                            }
                            F64X2 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1363 = constructor_pulley_vsplatf64(ctx, v1029);
                                let v1364 = constructor_output_vreg(ctx, v1363);
                                let v1365 = Some(v1364);
                                // Rule at src/isa/pulley_shared/lower.isle line 1631.
                                return v1365;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::VanyTrue => {
                    let v674 = C::value_type(ctx, v590);
                    match v674 {
                        I8X16 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1390 = constructor_pulley_vanytrue8x16(ctx, v598);
                            let v1391 = constructor_output_xreg(ctx, v1390);
                            let v1392 = Some(v1391);
                            // Rule at src/isa/pulley_shared/lower.isle line 1655.
                            return v1392;
                        }
                        I16X8 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1393 = constructor_pulley_vanytrue16x8(ctx, v598);
                            let v1394 = constructor_output_xreg(ctx, v1393);
                            let v1395 = Some(v1394);
                            // Rule at src/isa/pulley_shared/lower.isle line 1656.
                            return v1395;
                        }
                        I32X4 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1396 = constructor_pulley_vanytrue32x4(ctx, v598);
                            let v1397 = constructor_output_xreg(ctx, v1396);
                            let v1398 = Some(v1397);
                            // Rule at src/isa/pulley_shared/lower.isle line 1657.
                            return v1398;
                        }
                        I64X2 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1399 = constructor_pulley_vanytrue64x2(ctx, v598);
                            let v1400 = constructor_output_xreg(ctx, v1399);
                            let v1401 = Some(v1400);
                            // Rule at src/isa/pulley_shared/lower.isle line 1658.
                            return v1401;
                        }
                        F32X4 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1396 = constructor_pulley_vanytrue32x4(ctx, v598);
                            let v1397 = constructor_output_xreg(ctx, v1396);
                            let v1398 = Some(v1397);
                            // Rule at src/isa/pulley_shared/lower.isle line 1659.
                            return v1398;
                        }
                        F64X2 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1399 = constructor_pulley_vanytrue64x2(ctx, v598);
                            let v1400 = constructor_output_xreg(ctx, v1399);
                            let v1401 = Some(v1400);
                            // Rule at src/isa/pulley_shared/lower.isle line 1660.
                            return v1401;
                        }
                        _ => {}
                    }
                }
                &Opcode::VallTrue => {
                    let v674 = C::value_type(ctx, v590);
                    match v674 {
                        I8X16 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1378 = constructor_pulley_valltrue8x16(ctx, v598);
                            let v1379 = constructor_output_xreg(ctx, v1378);
                            let v1380 = Some(v1379);
                            // Rule at src/isa/pulley_shared/lower.isle line 1646.
                            return v1380;
                        }
                        I16X8 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1381 = constructor_pulley_valltrue16x8(ctx, v598);
                            let v1382 = constructor_output_xreg(ctx, v1381);
                            let v1383 = Some(v1382);
                            // Rule at src/isa/pulley_shared/lower.isle line 1647.
                            return v1383;
                        }
                        I32X4 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1384 = constructor_pulley_valltrue32x4(ctx, v598);
                            let v1385 = constructor_output_xreg(ctx, v1384);
                            let v1386 = Some(v1385);
                            // Rule at src/isa/pulley_shared/lower.isle line 1648.
                            return v1386;
                        }
                        I64X2 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1387 = constructor_pulley_valltrue64x2(ctx, v598);
                            let v1388 = constructor_output_xreg(ctx, v1387);
                            let v1389 = Some(v1388);
                            // Rule at src/isa/pulley_shared/lower.isle line 1649.
                            return v1389;
                        }
                        F32X4 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1384 = constructor_pulley_valltrue32x4(ctx, v598);
                            let v1385 = constructor_output_xreg(ctx, v1384);
                            let v1386 = Some(v1385);
                            // Rule at src/isa/pulley_shared/lower.isle line 1650.
                            return v1386;
                        }
                        F64X2 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1387 = constructor_pulley_valltrue64x2(ctx, v598);
                            let v1388 = constructor_output_xreg(ctx, v1387);
                            let v1389 = Some(v1388);
                            // Rule at src/isa/pulley_shared/lower.isle line 1651.
                            return v1389;
                        }
                        _ => {}
                    }
                }
                &Opcode::VhighBits => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v674 = C::value_type(ctx, v590);
                            match v674 {
                                I8X16 => {
                                    let v598 = constructor_put_in_vreg(ctx, v590);
                                    let v1366 = constructor_pulley_vbitmask8x16(ctx, v598);
                                    let v1367 = constructor_output_xreg(ctx, v1366);
                                    let v1368 = Some(v1367);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1635.
                                    return v1368;
                                }
                                I16X8 => {
                                    let v598 = constructor_put_in_vreg(ctx, v590);
                                    let v1369 = constructor_pulley_vbitmask16x8(ctx, v598);
                                    let v1370 = constructor_output_xreg(ctx, v1369);
                                    let v1371 = Some(v1370);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1637.
                                    return v1371;
                                }
                                I32X4 => {
                                    let v598 = constructor_put_in_vreg(ctx, v590);
                                    let v1372 = constructor_pulley_vbitmask32x4(ctx, v598);
                                    let v1373 = constructor_output_xreg(ctx, v1372);
                                    let v1374 = Some(v1373);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1639.
                                    return v1374;
                                }
                                I64X2 => {
                                    let v598 = constructor_put_in_vreg(ctx, v590);
                                    let v1375 = constructor_pulley_vbitmask64x2(ctx, v598);
                                    let v1376 = constructor_output_xreg(ctx, v1375);
                                    let v1377 = Some(v1376);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1641.
                                    return v1377;
                                }
                                _ => {}
                            }
                        }
                    }
                }
                &Opcode::Ineg => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I64 => {
                                let v591 = constructor_put_in_xreg(ctx, v590);
                                let v1287 = constructor_pulley_xneg64(ctx, v591);
                                let v1288 = constructor_output_xreg(ctx, v1287);
                                let v1289 = Some(v1288);
                                // Rule at src/isa/pulley_shared/lower.isle line 1587.
                                return v1289;
                            }
                            I8X16 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1290 = constructor_pulley_vneg8x16(ctx, v598);
                                let v1291 = constructor_output_vreg(ctx, v1290);
                                let v1292 = Some(v1291);
                                // Rule at src/isa/pulley_shared/lower.isle line 1591.
                                return v1292;
                            }
                            I16X8 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1293 = constructor_pulley_vneg16x8(ctx, v598);
                                let v1294 = constructor_output_vreg(ctx, v1293);
                                let v1295 = Some(v1294);
                                // Rule at src/isa/pulley_shared/lower.isle line 1592.
                                return v1295;
                            }
                            I32X4 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1296 = constructor_pulley_vneg32x4(ctx, v598);
                                let v1297 = constructor_output_vreg(ctx, v1296);
                                let v1298 = Some(v1297);
                                // Rule at src/isa/pulley_shared/lower.isle line 1593.
                                return v1298;
                            }
                            I64X2 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1299 = constructor_pulley_vneg64x2(ctx, v598);
                                let v1300 = constructor_output_vreg(ctx, v1299);
                                let v1301 = Some(v1300);
                                // Rule at src/isa/pulley_shared/lower.isle line 1594.
                                return v1301;
                            }
                            _ => {}
                        }
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v933 = constructor_sext32(ctx, v590);
                            let v1284 = constructor_pulley_xneg32(ctx, v933);
                            let v1285 = constructor_output_xreg(ctx, v1284);
                            let v1286 = Some(v1285);
                            // Rule at src/isa/pulley_shared/lower.isle line 1586.
                            return v1286;
                        }
                    }
                }
                &Opcode::Iabs => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I64 => {
                                let v591 = constructor_put_in_xreg(ctx, v590);
                                let v1333 = constructor_pulley_xabs64(ctx, v591);
                                let v1334 = constructor_output_xreg(ctx, v1333);
                                let v1335 = Some(v1334);
                                // Rule at src/isa/pulley_shared/lower.isle line 1618.
                                return v1335;
                            }
                            I8X16 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1336 = constructor_pulley_vabs8x16(ctx, v598);
                                let v1337 = constructor_output_vreg(ctx, v1336);
                                let v1338 = Some(v1337);
                                // Rule at src/isa/pulley_shared/lower.isle line 1619.
                                return v1338;
                            }
                            I16X8 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1339 = constructor_pulley_vabs16x8(ctx, v598);
                                let v1340 = constructor_output_vreg(ctx, v1339);
                                let v1341 = Some(v1340);
                                // Rule at src/isa/pulley_shared/lower.isle line 1620.
                                return v1341;
                            }
                            I32X4 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1342 = constructor_pulley_vabs32x4(ctx, v598);
                                let v1343 = constructor_output_vreg(ctx, v1342);
                                let v1344 = Some(v1343);
                                // Rule at src/isa/pulley_shared/lower.isle line 1621.
                                return v1344;
                            }
                            I64X2 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1345 = constructor_pulley_vabs64x2(ctx, v598);
                                let v1346 = constructor_output_vreg(ctx, v1345);
                                let v1347 = Some(v1346);
                                // Rule at src/isa/pulley_shared/lower.isle line 1622.
                                return v1347;
                            }
                            _ => {}
                        }
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v933 = constructor_sext32(ctx, v590);
                            let v1330 = constructor_pulley_xabs32(ctx, v933);
                            let v1331 = constructor_output_xreg(ctx, v1330);
                            let v1332 = Some(v1331);
                            // Rule at src/isa/pulley_shared/lower.isle line 1617.
                            return v1332;
                        }
                    }
                }
                &Opcode::Bnot => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        let v542 = C::ty_vec128(ctx, v60);
                        if let Some(v543) = v542 {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v599 = constructor_pulley_vbnot128(ctx, v598);
                            let v600 = constructor_output_vreg(ctx, v599);
                            let v601 = Some(v600);
                            // Rule at src/isa/pulley_shared/lower.isle line 577.
                            return v601;
                        }
                        if v60 == I64 {
                            let v591 = constructor_put_in_xreg(ctx, v590);
                            let v595 = constructor_pulley_xbnot64(ctx, v591);
                            let v596 = constructor_output_xreg(ctx, v595);
                            let v597 = Some(v596);
                            // Rule at src/isa/pulley_shared/lower.isle line 574.
                            return v597;
                        }
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v591 = constructor_put_in_xreg(ctx, v590);
                            let v592 = constructor_pulley_xbnot32(ctx, v591);
                            let v593 = constructor_output_xreg(ctx, v592);
                            let v594 = Some(v593);
                            // Rule at src/isa/pulley_shared/lower.isle line 571.
                            return v594;
                        }
                    }
                }
                &Opcode::Clz => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I8 => {
                                let v677 = constructor_zext32(ctx, v590);
                                let v704 = constructor_pulley_xclz32(ctx, v677);
                                let v706 = constructor_pulley_xsub32_u8(ctx, v704, 0x18_u8);
                                let v707 = constructor_output_xreg(ctx, v706);
                                let v708 = Some(v707);
                                // Rule at src/isa/pulley_shared/lower.isle line 641.
                                return v708;
                            }
                            I16 => {
                                let v677 = constructor_zext32(ctx, v590);
                                let v704 = constructor_pulley_xclz32(ctx, v677);
                                let v710 = constructor_pulley_xsub32_u8(ctx, v704, 0x10_u8);
                                let v711 = constructor_output_xreg(ctx, v710);
                                let v712 = Some(v711);
                                // Rule at src/isa/pulley_shared/lower.isle line 643.
                                return v712;
                            }
                            I32 => {
                                let v591 = constructor_put_in_xreg(ctx, v590);
                                let v713 = constructor_pulley_xclz32(ctx, v591);
                                let v714 = constructor_output_xreg(ctx, v713);
                                let v715 = Some(v714);
                                // Rule at src/isa/pulley_shared/lower.isle line 645.
                                return v715;
                            }
                            I64 => {
                                let v591 = constructor_put_in_xreg(ctx, v590);
                                let v716 = constructor_pulley_xclz64(ctx, v591);
                                let v717 = constructor_output_xreg(ctx, v716);
                                let v718 = Some(v717);
                                // Rule at src/isa/pulley_shared/lower.isle line 646.
                                return v718;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Ctz => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I8 => {
                                let v591 = constructor_put_in_xreg(ctx, v590);
                                let v689 = constructor_pulley_xbor32_s32(ctx, v591, 256_i32);
                                let v690 = constructor_pulley_xctz32(ctx, v689);
                                let v691 = constructor_output_xreg(ctx, v690);
                                let v692 = Some(v691);
                                // Rule at src/isa/pulley_shared/lower.isle line 632.
                                return v692;
                            }
                            I16 => {
                                let v591 = constructor_put_in_xreg(ctx, v590);
                                let v694 = constructor_pulley_xbor32_s32(ctx, v591, 65536_i32);
                                let v695 = constructor_pulley_xctz32(ctx, v694);
                                let v696 = constructor_output_xreg(ctx, v695);
                                let v697 = Some(v696);
                                // Rule at src/isa/pulley_shared/lower.isle line 634.
                                return v697;
                            }
                            I32 => {
                                let v591 = constructor_put_in_xreg(ctx, v590);
                                let v698 = constructor_pulley_xctz32(ctx, v591);
                                let v699 = constructor_output_xreg(ctx, v698);
                                let v700 = Some(v699);
                                // Rule at src/isa/pulley_shared/lower.isle line 636.
                                return v700;
                            }
                            I64 => {
                                let v591 = constructor_put_in_xreg(ctx, v590);
                                let v701 = constructor_pulley_xctz64(ctx, v591);
                                let v702 = constructor_output_xreg(ctx, v701);
                                let v703 = Some(v702);
                                // Rule at src/isa/pulley_shared/lower.isle line 637.
                                return v703;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Bswap => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I16 => {
                                let v356 = C::u64_as_u8(ctx, 0x10_u64);
                                let v357 = C::u6_from_u8(ctx, v356);
                                if let Some(v358) = v357 {
                                    let v591 = constructor_put_in_xreg(ctx, v590);
                                    let v1321 = constructor_pulley_bswap32(ctx, v591);
                                    let v1322 = constructor_pulley_xshr32_u_u6(ctx, v1321, v358);
                                    let v1323 = constructor_output_xreg(ctx, v1322);
                                    let v1324 = Some(v1323);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1609.
                                    return v1324;
                                }
                            }
                            I32 => {
                                let v591 = constructor_put_in_xreg(ctx, v590);
                                let v1321 = constructor_pulley_bswap32(ctx, v591);
                                let v1325 = constructor_output_xreg(ctx, v1321);
                                let v1326 = Some(v1325);
                                // Rule at src/isa/pulley_shared/lower.isle line 1612.
                                return v1326;
                            }
                            I64 => {
                                let v591 = constructor_put_in_xreg(ctx, v590);
                                let v1327 = constructor_pulley_bswap64(ctx, v591);
                                let v1328 = constructor_output_xreg(ctx, v1327);
                                let v1329 = Some(v1328);
                                // Rule at src/isa/pulley_shared/lower.isle line 1613.
                                return v1329;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Popcnt => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I64 => {
                                let v591 = constructor_put_in_xreg(ctx, v590);
                                let v722 = constructor_pulley_xpopcnt64(ctx, v591);
                                let v723 = constructor_output_xreg(ctx, v722);
                                let v724 = Some(v723);
                                // Rule at src/isa/pulley_shared/lower.isle line 651.
                                return v724;
                            }
                            I8X16 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v725 = constructor_pulley_vpopcnt8x16(ctx, v598);
                                let v726 = constructor_output_vreg(ctx, v725);
                                let v727 = Some(v726);
                                // Rule at src/isa/pulley_shared/lower.isle line 652.
                                return v727;
                            }
                            _ => {}
                        }
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v677 = constructor_zext32(ctx, v590);
                            let v719 = constructor_pulley_xpopcnt32(ctx, v677);
                            let v720 = constructor_output_xreg(ctx, v719);
                            let v721 = Some(v720);
                            // Rule at src/isa/pulley_shared/lower.isle line 650.
                            return v721;
                        }
                    }
                }
                &Opcode::Sqrt => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1260 = constructor_pulley_fsqrt32(ctx, v1029);
                                let v1261 = constructor_output_freg(ctx, v1260);
                                let v1262 = Some(v1261);
                                // Rule at src/isa/pulley_shared/lower.isle line 1570.
                                return v1262;
                            }
                            F64 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1263 = constructor_pulley_fsqrt64(ctx, v1029);
                                let v1264 = constructor_output_freg(ctx, v1263);
                                let v1265 = Some(v1264);
                                // Rule at src/isa/pulley_shared/lower.isle line 1571.
                                return v1265;
                            }
                            F32X4 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1266 = constructor_pulley_vsqrt32x4(ctx, v598);
                                let v1267 = constructor_output_vreg(ctx, v1266);
                                let v1268 = Some(v1267);
                                // Rule at src/isa/pulley_shared/lower.isle line 1572.
                                return v1268;
                            }
                            F64X2 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1269 = constructor_pulley_vsqrt64x2(ctx, v598);
                                let v1270 = constructor_output_vreg(ctx, v1269);
                                let v1271 = Some(v1270);
                                // Rule at src/isa/pulley_shared/lower.isle line 1574.
                                return v1271;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fneg => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1272 = constructor_pulley_fneg32(ctx, v1029);
                                let v1273 = constructor_output_freg(ctx, v1272);
                                let v1274 = Some(v1273);
                                // Rule at src/isa/pulley_shared/lower.isle line 1579.
                                return v1274;
                            }
                            F64 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1275 = constructor_pulley_fneg64(ctx, v1029);
                                let v1276 = constructor_output_freg(ctx, v1275);
                                let v1277 = Some(v1276);
                                // Rule at src/isa/pulley_shared/lower.isle line 1580.
                                return v1277;
                            }
                            F32X4 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1278 = constructor_pulley_vnegf32x4(ctx, v598);
                                let v1279 = constructor_output_vreg(ctx, v1278);
                                let v1280 = Some(v1279);
                                // Rule at src/isa/pulley_shared/lower.isle line 1581.
                                return v1280;
                            }
                            F64X2 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1281 = constructor_pulley_vnegf64x2(ctx, v598);
                                let v1282 = constructor_output_vreg(ctx, v1281);
                                let v1283 = Some(v1282);
                                // Rule at src/isa/pulley_shared/lower.isle line 1582.
                                return v1283;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fabs => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1302 = constructor_pulley_fabs32(ctx, v1029);
                                let v1303 = constructor_output_freg(ctx, v1302);
                                let v1304 = Some(v1303);
                                // Rule at src/isa/pulley_shared/lower.isle line 1598.
                                return v1304;
                            }
                            F64 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1305 = constructor_pulley_fabs64(ctx, v1029);
                                let v1306 = constructor_output_freg(ctx, v1305);
                                let v1307 = Some(v1306);
                                // Rule at src/isa/pulley_shared/lower.isle line 1599.
                                return v1307;
                            }
                            F32X4 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1308 = constructor_pulley_vabsf32x4(ctx, v598);
                                let v1309 = constructor_output_vreg(ctx, v1308);
                                let v1310 = Some(v1309);
                                // Rule at src/isa/pulley_shared/lower.isle line 1600.
                                return v1310;
                            }
                            F64X2 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1311 = constructor_pulley_vabsf64x2(ctx, v598);
                                let v1312 = constructor_output_vreg(ctx, v1311);
                                let v1313 = Some(v1312);
                                // Rule at src/isa/pulley_shared/lower.isle line 1601.
                                return v1313;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Ceil => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1236 = constructor_pulley_fceil32(ctx, v1029);
                                let v1237 = constructor_output_freg(ctx, v1236);
                                let v1238 = Some(v1237);
                                // Rule at src/isa/pulley_shared/lower.isle line 1552.
                                return v1238;
                            }
                            F64 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1239 = constructor_pulley_fceil64(ctx, v1029);
                                let v1240 = constructor_output_freg(ctx, v1239);
                                let v1241 = Some(v1240);
                                // Rule at src/isa/pulley_shared/lower.isle line 1553.
                                return v1241;
                            }
                            F32X4 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1245 = constructor_pulley_vceil32x4(ctx, v598);
                                let v1246 = constructor_output_vreg(ctx, v1245);
                                let v1247 = Some(v1246);
                                // Rule at src/isa/pulley_shared/lower.isle line 1556.
                                return v1247;
                            }
                            F64X2 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1242 = constructor_pulley_vceil64x2(ctx, v598);
                                let v1243 = constructor_output_vreg(ctx, v1242);
                                let v1244 = Some(v1243);
                                // Rule at src/isa/pulley_shared/lower.isle line 1554.
                                return v1244;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Floor => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1224 = constructor_pulley_ffloor32(ctx, v1029);
                                let v1225 = constructor_output_freg(ctx, v1224);
                                let v1226 = Some(v1225);
                                // Rule at src/isa/pulley_shared/lower.isle line 1543.
                                return v1226;
                            }
                            F64 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1227 = constructor_pulley_ffloor64(ctx, v1029);
                                let v1228 = constructor_output_freg(ctx, v1227);
                                let v1229 = Some(v1228);
                                // Rule at src/isa/pulley_shared/lower.isle line 1544.
                                return v1229;
                            }
                            F32X4 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1230 = constructor_pulley_vfloor32x4(ctx, v598);
                                let v1231 = constructor_output_vreg(ctx, v1230);
                                let v1232 = Some(v1231);
                                // Rule at src/isa/pulley_shared/lower.isle line 1545.
                                return v1232;
                            }
                            F64X2 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1233 = constructor_pulley_vfloor64x2(ctx, v598);
                                let v1234 = constructor_output_vreg(ctx, v1233);
                                let v1235 = Some(v1234);
                                // Rule at src/isa/pulley_shared/lower.isle line 1547.
                                return v1235;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Trunc => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1212 = constructor_pulley_ftrunc32(ctx, v1029);
                                let v1213 = constructor_output_freg(ctx, v1212);
                                let v1214 = Some(v1213);
                                // Rule at src/isa/pulley_shared/lower.isle line 1536.
                                return v1214;
                            }
                            F64 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1215 = constructor_pulley_ftrunc64(ctx, v1029);
                                let v1216 = constructor_output_freg(ctx, v1215);
                                let v1217 = Some(v1216);
                                // Rule at src/isa/pulley_shared/lower.isle line 1537.
                                return v1217;
                            }
                            F32X4 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1218 = constructor_pulley_vtrunc32x4(ctx, v598);
                                let v1219 = constructor_output_vreg(ctx, v1218);
                                let v1220 = Some(v1219);
                                // Rule at src/isa/pulley_shared/lower.isle line 1538.
                                return v1220;
                            }
                            F64X2 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1221 = constructor_pulley_vtrunc64x2(ctx, v598);
                                let v1222 = constructor_output_vreg(ctx, v1221);
                                let v1223 = Some(v1222);
                                // Rule at src/isa/pulley_shared/lower.isle line 1539.
                                return v1223;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Nearest => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1248 = constructor_pulley_fnearest32(ctx, v1029);
                                let v1249 = constructor_output_freg(ctx, v1248);
                                let v1250 = Some(v1249);
                                // Rule at src/isa/pulley_shared/lower.isle line 1561.
                                return v1250;
                            }
                            F64 => {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1251 = constructor_pulley_fnearest64(ctx, v1029);
                                let v1252 = constructor_output_freg(ctx, v1251);
                                let v1253 = Some(v1252);
                                // Rule at src/isa/pulley_shared/lower.isle line 1562.
                                return v1253;
                            }
                            F32X4 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1254 = constructor_pulley_vnearest32x4(ctx, v598);
                                let v1255 = constructor_output_vreg(ctx, v1254);
                                let v1256 = Some(v1255);
                                // Rule at src/isa/pulley_shared/lower.isle line 1563.
                                return v1256;
                            }
                            F64X2 => {
                                let v598 = constructor_put_in_vreg(ctx, v590);
                                let v1257 = constructor_pulley_vnearest64x2(ctx, v598);
                                let v1258 = constructor_output_vreg(ctx, v1257);
                                let v1259 = Some(v1258);
                                // Rule at src/isa/pulley_shared/lower.isle line 1565.
                                return v1259;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::ScalarToVector => {
                    let v674 = C::value_type(ctx, v590);
                    match v674 {
                        I8 => {
                            let v1517 = constructor_pulley_vconst128(ctx, 0x0_u128);
                            let v1518 = constructor_put_in_xreg(ctx, v590);
                            let v1520 = constructor_pulley_vinsertx8(ctx, v1517, v1518, 0x0_u8);
                            let v1521 = constructor_output_vreg(ctx, v1520);
                            let v1522 = Some(v1521);
                            // Rule at src/isa/pulley_shared/lower.isle line 1745.
                            return v1522;
                        }
                        I16 => {
                            let v1517 = constructor_pulley_vconst128(ctx, 0x0_u128);
                            let v1518 = constructor_put_in_xreg(ctx, v590);
                            let v1523 = constructor_pulley_vinsertx16(ctx, v1517, v1518, 0x0_u8);
                            let v1524 = constructor_output_vreg(ctx, v1523);
                            let v1525 = Some(v1524);
                            // Rule at src/isa/pulley_shared/lower.isle line 1747.
                            return v1525;
                        }
                        I32 => {
                            let v1517 = constructor_pulley_vconst128(ctx, 0x0_u128);
                            let v1518 = constructor_put_in_xreg(ctx, v590);
                            let v1526 = constructor_pulley_vinsertx32(ctx, v1517, v1518, 0x0_u8);
                            let v1527 = constructor_output_vreg(ctx, v1526);
                            let v1528 = Some(v1527);
                            // Rule at src/isa/pulley_shared/lower.isle line 1749.
                            return v1528;
                        }
                        I64 => {
                            let v1517 = constructor_pulley_vconst128(ctx, 0x0_u128);
                            let v1518 = constructor_put_in_xreg(ctx, v590);
                            let v1529 = constructor_pulley_vinsertx64(ctx, v1517, v1518, 0x0_u8);
                            let v1530 = constructor_output_vreg(ctx, v1529);
                            let v1531 = Some(v1530);
                            // Rule at src/isa/pulley_shared/lower.isle line 1751.
                            return v1531;
                        }
                        F32 => {
                            let v1517 = constructor_pulley_vconst128(ctx, 0x0_u128);
                            let v1532 = constructor_put_in_freg(ctx, v590);
                            let v1533 = constructor_pulley_vinsertf32(ctx, v1517, v1532, 0x0_u8);
                            let v1534 = constructor_output_vreg(ctx, v1533);
                            let v1535 = Some(v1534);
                            // Rule at src/isa/pulley_shared/lower.isle line 1753.
                            return v1535;
                        }
                        F64 => {
                            let v1517 = constructor_pulley_vconst128(ctx, 0x0_u128);
                            let v1532 = constructor_put_in_freg(ctx, v590);
                            let v1536 = constructor_pulley_vinsertf64(ctx, v1517, v1532, 0x0_u8);
                            let v1537 = constructor_output_vreg(ctx, v1536);
                            let v1538 = Some(v1537);
                            // Rule at src/isa/pulley_shared/lower.isle line 1755.
                            return v1538;
                        }
                        _ => {}
                    }
                }
                &Opcode::Bmask => {
                    let v674 = C::value_type(ctx, v590);
                    if v674 == I64 {
                        let v591 = constructor_put_in_xreg(ctx, v590);
                        let v685 = constructor_pulley_xbmask64(ctx, v591);
                        let v686 = constructor_output_xreg(ctx, v685);
                        let v687 = Some(v686);
                        // Rule at src/isa/pulley_shared/lower.isle line 627.
                        return v687;
                    }
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == I64 {
                            let v681 = constructor_zext64(ctx, v590);
                            let v682 = constructor_pulley_xbmask64(ctx, v681);
                            let v683 = constructor_output_xreg(ctx, v682);
                            let v684 = Some(v683);
                            // Rule at src/isa/pulley_shared/lower.isle line 625.
                            return v684;
                        }
                        let v82 = C::ty_int(ctx, v60);
                        if let Some(v83) = v82 {
                            let v99 = C::fits_in_32(ctx, v83);
                            if let Some(v100) = v99 {
                                let v675 = C::fits_in_32(ctx, v674);
                                if let Some(v676) = v675 {
                                    let v677 = constructor_zext32(ctx, v590);
                                    let v678 = constructor_pulley_xbmask32(ctx, v677);
                                    let v679 = constructor_output_xreg(ctx, v678);
                                    let v680 = Some(v679);
                                    // Rule at src/isa/pulley_shared/lower.isle line 623.
                                    return v680;
                                }
                            }
                        }
                    }
                }
                &Opcode::Ireduce => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        let v949 = C::fits_in_64(ctx, v60);
                        if let Some(v950) = v949 {
                            let v951 = constructor_output_value(ctx, v590);
                            let v952 = Some(v951);
                            // Rule at src/isa/pulley_shared/lower.isle line 1250.
                            return v952;
                        }
                    }
                }
                &Opcode::SwidenLow => {
                    let v674 = C::value_type(ctx, v590);
                    match v674 {
                        I8X16 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1402 = constructor_pulley_vwidenlow8x16_s(ctx, v598);
                            let v1403 = constructor_output_vreg(ctx, v1402);
                            let v1404 = Some(v1403);
                            // Rule at src/isa/pulley_shared/lower.isle line 1664.
                            return v1404;
                        }
                        I16X8 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1405 = constructor_pulley_vwidenlow16x8_s(ctx, v598);
                            let v1406 = constructor_output_vreg(ctx, v1405);
                            let v1407 = Some(v1406);
                            // Rule at src/isa/pulley_shared/lower.isle line 1665.
                            return v1407;
                        }
                        I32X4 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1408 = constructor_pulley_vwidenlow32x4_s(ctx, v598);
                            let v1409 = constructor_output_vreg(ctx, v1408);
                            let v1410 = Some(v1409);
                            // Rule at src/isa/pulley_shared/lower.isle line 1666.
                            return v1410;
                        }
                        _ => {}
                    }
                }
                &Opcode::SwidenHigh => {
                    let v674 = C::value_type(ctx, v590);
                    match v674 {
                        I8X16 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1411 = constructor_pulley_vwidenhigh8x16_s(ctx, v598);
                            let v1412 = constructor_output_vreg(ctx, v1411);
                            let v1413 = Some(v1412);
                            // Rule at src/isa/pulley_shared/lower.isle line 1670.
                            return v1413;
                        }
                        I16X8 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1414 = constructor_pulley_vwidenhigh16x8_s(ctx, v598);
                            let v1415 = constructor_output_vreg(ctx, v1414);
                            let v1416 = Some(v1415);
                            // Rule at src/isa/pulley_shared/lower.isle line 1671.
                            return v1416;
                        }
                        I32X4 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1417 = constructor_pulley_vwidenhigh32x4_s(ctx, v598);
                            let v1418 = constructor_output_vreg(ctx, v1417);
                            let v1419 = Some(v1418);
                            // Rule at src/isa/pulley_shared/lower.isle line 1672.
                            return v1419;
                        }
                        _ => {}
                    }
                }
                &Opcode::UwidenLow => {
                    let v674 = C::value_type(ctx, v590);
                    match v674 {
                        I8X16 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1420 = constructor_pulley_vwidenlow8x16_u(ctx, v598);
                            let v1421 = constructor_output_vreg(ctx, v1420);
                            let v1422 = Some(v1421);
                            // Rule at src/isa/pulley_shared/lower.isle line 1676.
                            return v1422;
                        }
                        I16X8 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1423 = constructor_pulley_vwidenlow16x8_u(ctx, v598);
                            let v1424 = constructor_output_vreg(ctx, v1423);
                            let v1425 = Some(v1424);
                            // Rule at src/isa/pulley_shared/lower.isle line 1677.
                            return v1425;
                        }
                        I32X4 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1426 = constructor_pulley_vwidenlow32x4_u(ctx, v598);
                            let v1427 = constructor_output_vreg(ctx, v1426);
                            let v1428 = Some(v1427);
                            // Rule at src/isa/pulley_shared/lower.isle line 1678.
                            return v1428;
                        }
                        _ => {}
                    }
                }
                &Opcode::UwidenHigh => {
                    let v674 = C::value_type(ctx, v590);
                    match v674 {
                        I8X16 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1429 = constructor_pulley_vwidenhigh8x16_u(ctx, v598);
                            let v1430 = constructor_output_vreg(ctx, v1429);
                            let v1431 = Some(v1430);
                            // Rule at src/isa/pulley_shared/lower.isle line 1682.
                            return v1431;
                        }
                        I16X8 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1432 = constructor_pulley_vwidenhigh16x8_u(ctx, v598);
                            let v1433 = constructor_output_vreg(ctx, v1432);
                            let v1434 = Some(v1433);
                            // Rule at src/isa/pulley_shared/lower.isle line 1683.
                            return v1434;
                        }
                        I32X4 => {
                            let v598 = constructor_put_in_vreg(ctx, v590);
                            let v1435 = constructor_pulley_vwidenhigh32x4_u(ctx, v598);
                            let v1436 = constructor_output_vreg(ctx, v1435);
                            let v1437 = Some(v1436);
                            // Rule at src/isa/pulley_shared/lower.isle line 1684.
                            return v1437;
                        }
                        _ => {}
                    }
                }
                &Opcode::Uextend => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I64 => {
                                let v681 = constructor_zext64(ctx, v590);
                                let v925 = constructor_output_xreg(ctx, v681);
                                let v926 = Some(v925);
                                // Rule at src/isa/pulley_shared/lower.isle line 1228.
                                return v926;
                            }
                            I128 => {
                                let v681 = constructor_zext64(ctx, v590);
                                let v928 = constructor_pulley_xzero(ctx);
                                let v927 = C::xreg_to_reg(ctx, v681);
                                let v929 = C::xreg_to_reg(ctx, v928);
                                let v930 = C::value_regs(ctx, v927, v929);
                                let v931 = C::output(ctx, v930);
                                let v932 = Some(v931);
                                // Rule at src/isa/pulley_shared/lower.isle line 1231.
                                return v932;
                            }
                            _ => {}
                        }
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v677 = constructor_zext32(ctx, v590);
                            let v923 = constructor_output_xreg(ctx, v677);
                            let v924 = Some(v923);
                            // Rule at src/isa/pulley_shared/lower.isle line 1225.
                            return v924;
                        }
                    }
                }
                &Opcode::Sextend => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I64 => {
                                let v936 = constructor_sext64(ctx, v590);
                                let v937 = constructor_output_xreg(ctx, v936);
                                let v938 = Some(v937);
                                // Rule at src/isa/pulley_shared/lower.isle line 1239.
                                return v938;
                            }
                            I128 => {
                                let v940 = C::u64_as_u8(ctx, 0x3f_u64);
                                let v941 = C::u6_from_u8(ctx, v940);
                                if let Some(v942) = v941 {
                                    let v936 = constructor_sext64(ctx, v590);
                                    let v943 = constructor_pulley_xshr64_s_u6(ctx, v936, v942);
                                    let v944 = C::xreg_to_reg(ctx, v936);
                                    let v945 = C::xreg_to_reg(ctx, v943);
                                    let v946 = C::value_regs(ctx, v944, v945);
                                    let v947 = C::output(ctx, v946);
                                    let v948 = Some(v947);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1242.
                                    return v948;
                                }
                            }
                            _ => {}
                        }
                        let v396 = C::fits_in_32(ctx, v60);
                        if let Some(v397) = v396 {
                            let v933 = constructor_sext32(ctx, v590);
                            let v934 = constructor_output_xreg(ctx, v933);
                            let v935 = Some(v934);
                            // Rule at src/isa/pulley_shared/lower.isle line 1236.
                            return v935;
                        }
                    }
                }
                &Opcode::Fpromote => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == F64 {
                            let v674 = C::value_type(ctx, v590);
                            if v674 == F32 {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1129 = constructor_pulley_f64_from_f32(ctx, v1029);
                                let v1130 = constructor_output_freg(ctx, v1129);
                                let v1131 = Some(v1130);
                                // Rule at src/isa/pulley_shared/lower.isle line 1481.
                                return v1131;
                            }
                        }
                    }
                }
                &Opcode::Fdemote => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        if v60 == F32 {
                            let v674 = C::value_type(ctx, v590);
                            if v674 == F64 {
                                let v1029 = constructor_put_in_freg(ctx, v590);
                                let v1126 = constructor_pulley_f32_from_f64(ctx, v1029);
                                let v1127 = constructor_output_freg(ctx, v1126);
                                let v1128 = Some(v1127);
                                // Rule at src/isa/pulley_shared/lower.isle line 1476.
                                return v1128;
                            }
                        }
                    }
                }
                &Opcode::Fvdemote => {
                    let v674 = C::value_type(ctx, v590);
                    if v674 == F64X2 {
                        let v598 = constructor_put_in_vreg(ctx, v590);
                        let v1460 = constructor_pulley_vfdemote(ctx, v598);
                        let v1461 = constructor_output_vreg(ctx, v1460);
                        let v1462 = Some(v1461);
                        // Rule at src/isa/pulley_shared/lower.isle line 1707.
                        return v1462;
                    }
                }
                &Opcode::FvpromoteLow => {
                    let v674 = C::value_type(ctx, v590);
                    if v674 == F32X4 {
                        let v598 = constructor_put_in_vreg(ctx, v590);
                        let v1457 = constructor_pulley_vfpromotelow(ctx, v598);
                        let v1458 = constructor_output_vreg(ctx, v1457);
                        let v1459 = Some(v1458);
                        // Rule at src/isa/pulley_shared/lower.isle line 1703.
                        return v1459;
                    }
                }
                &Opcode::FcvtToUint => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I32 => {
                                let v674 = C::value_type(ctx, v590);
                                match v674 {
                                    F32 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1030 = constructor_pulley_x32_from_f32_u(ctx, v1029);
                                        let v1031 = constructor_output_xreg(ctx, v1030);
                                        let v1032 = Some(v1031);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1374.
                                        return v1032;
                                    }
                                    F64 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1033 = constructor_pulley_x32_from_f64_u(ctx, v1029);
                                        let v1034 = constructor_output_xreg(ctx, v1033);
                                        let v1035 = Some(v1034);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1377.
                                        return v1035;
                                    }
                                    _ => {}
                                }
                            }
                            I64 => {
                                let v674 = C::value_type(ctx, v590);
                                match v674 {
                                    F32 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1036 = constructor_pulley_x64_from_f32_u(ctx, v1029);
                                        let v1037 = constructor_output_xreg(ctx, v1036);
                                        let v1038 = Some(v1037);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1380.
                                        return v1038;
                                    }
                                    F64 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1039 = constructor_pulley_x64_from_f64_u(ctx, v1029);
                                        let v1040 = constructor_output_xreg(ctx, v1039);
                                        let v1041 = Some(v1040);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1383.
                                        return v1041;
                                    }
                                    _ => {}
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::FcvtToSint => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I32 => {
                                let v674 = C::value_type(ctx, v590);
                                match v674 {
                                    F32 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1042 = constructor_pulley_x32_from_f32_s(ctx, v1029);
                                        let v1043 = constructor_output_xreg(ctx, v1042);
                                        let v1044 = Some(v1043);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1386.
                                        return v1044;
                                    }
                                    F64 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1045 = constructor_pulley_x32_from_f64_s(ctx, v1029);
                                        let v1046 = constructor_output_xreg(ctx, v1045);
                                        let v1047 = Some(v1046);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1389.
                                        return v1047;
                                    }
                                    _ => {}
                                }
                            }
                            I64 => {
                                let v674 = C::value_type(ctx, v590);
                                match v674 {
                                    F32 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1048 = constructor_pulley_x64_from_f32_s(ctx, v1029);
                                        let v1049 = constructor_output_xreg(ctx, v1048);
                                        let v1050 = Some(v1049);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1392.
                                        return v1050;
                                    }
                                    F64 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1051 = constructor_pulley_x64_from_f64_s(ctx, v1029);
                                        let v1052 = constructor_output_xreg(ctx, v1051);
                                        let v1053 = Some(v1052);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1395.
                                        return v1053;
                                    }
                                    _ => {}
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::FcvtToUintSat => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I32 => {
                                let v674 = C::value_type(ctx, v590);
                                match v674 {
                                    F32 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1090 = constructor_pulley_x32_from_f32_u_sat(ctx, v1029);
                                        let v1091 = constructor_output_xreg(ctx, v1090);
                                        let v1092 = Some(v1091);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1438.
                                        return v1092;
                                    }
                                    F64 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1093 = constructor_pulley_x32_from_f64_u_sat(ctx, v1029);
                                        let v1094 = constructor_output_xreg(ctx, v1093);
                                        let v1095 = Some(v1094);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1441.
                                        return v1095;
                                    }
                                    _ => {}
                                }
                            }
                            I64 => {
                                let v674 = C::value_type(ctx, v590);
                                match v674 {
                                    F32 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1096 = constructor_pulley_x64_from_f32_u_sat(ctx, v1029);
                                        let v1097 = constructor_output_xreg(ctx, v1096);
                                        let v1098 = Some(v1097);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1444.
                                        return v1098;
                                    }
                                    F64 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1099 = constructor_pulley_x64_from_f64_u_sat(ctx, v1029);
                                        let v1100 = constructor_output_xreg(ctx, v1099);
                                        let v1101 = Some(v1100);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1447.
                                        return v1101;
                                    }
                                    _ => {}
                                }
                            }
                            I32X4 => {
                                let v674 = C::value_type(ctx, v590);
                                if v674 == F32X4 {
                                    let v598 = constructor_put_in_vreg(ctx, v590);
                                    let v1117 = constructor_pulley_vi32x4_from_f32x4_u(ctx, v598);
                                    let v1118 = constructor_output_vreg(ctx, v1117);
                                    let v1119 = Some(v1118);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1465.
                                    return v1119;
                                }
                            }
                            I64X2 => {
                                let v674 = C::value_type(ctx, v590);
                                if v674 == F64X2 {
                                    let v598 = constructor_put_in_vreg(ctx, v590);
                                    let v1123 = constructor_pulley_vi64x2_from_f64x2_u(ctx, v598);
                                    let v1124 = constructor_output_vreg(ctx, v1123);
                                    let v1125 = Some(v1124);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1471.
                                    return v1125;
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::FcvtToSintSat => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            I32 => {
                                let v674 = C::value_type(ctx, v590);
                                match v674 {
                                    F32 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1102 = constructor_pulley_x32_from_f32_s_sat(ctx, v1029);
                                        let v1103 = constructor_output_xreg(ctx, v1102);
                                        let v1104 = Some(v1103);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1450.
                                        return v1104;
                                    }
                                    F64 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1105 = constructor_pulley_x32_from_f64_s_sat(ctx, v1029);
                                        let v1106 = constructor_output_xreg(ctx, v1105);
                                        let v1107 = Some(v1106);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1453.
                                        return v1107;
                                    }
                                    _ => {}
                                }
                            }
                            I64 => {
                                let v674 = C::value_type(ctx, v590);
                                match v674 {
                                    F32 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1108 = constructor_pulley_x64_from_f32_s_sat(ctx, v1029);
                                        let v1109 = constructor_output_xreg(ctx, v1108);
                                        let v1110 = Some(v1109);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1456.
                                        return v1110;
                                    }
                                    F64 => {
                                        let v1029 = constructor_put_in_freg(ctx, v590);
                                        let v1111 = constructor_pulley_x64_from_f64_s_sat(ctx, v1029);
                                        let v1112 = constructor_output_xreg(ctx, v1111);
                                        let v1113 = Some(v1112);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1459.
                                        return v1113;
                                    }
                                    _ => {}
                                }
                            }
                            I32X4 => {
                                let v674 = C::value_type(ctx, v590);
                                if v674 == F32X4 {
                                    let v598 = constructor_put_in_vreg(ctx, v590);
                                    let v1114 = constructor_pulley_vi32x4_from_f32x4_s(ctx, v598);
                                    let v1115 = constructor_output_vreg(ctx, v1114);
                                    let v1116 = Some(v1115);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1462.
                                    return v1116;
                                }
                            }
                            I64X2 => {
                                let v674 = C::value_type(ctx, v590);
                                if v674 == F64X2 {
                                    let v598 = constructor_put_in_vreg(ctx, v590);
                                    let v1120 = constructor_pulley_vi64x2_from_f64x2_s(ctx, v598);
                                    let v1121 = constructor_output_vreg(ctx, v1120);
                                    let v1122 = Some(v1121);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1468.
                                    return v1122;
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::FcvtFromUint => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v674 = C::value_type(ctx, v590);
                                if v674 == I64 {
                                    let v591 = constructor_put_in_xreg(ctx, v590);
                                    let v1057 = constructor_pulley_f32_from_x64_u(ctx, v591);
                                    let v1058 = constructor_output_freg(ctx, v1057);
                                    let v1059 = Some(v1058);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1403.
                                    return v1059;
                                }
                                let v675 = C::fits_in_32(ctx, v674);
                                if let Some(v676) = v675 {
                                    let v677 = constructor_zext32(ctx, v590);
                                    let v1054 = constructor_pulley_f32_from_x32_u(ctx, v677);
                                    let v1055 = constructor_output_freg(ctx, v1054);
                                    let v1056 = Some(v1055);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1400.
                                    return v1056;
                                }
                            }
                            F64 => {
                                let v674 = C::value_type(ctx, v590);
                                if v674 == I64 {
                                    let v591 = constructor_put_in_xreg(ctx, v590);
                                    let v1063 = constructor_pulley_f64_from_x64_u(ctx, v591);
                                    let v1064 = constructor_output_freg(ctx, v1063);
                                    let v1065 = Some(v1064);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1409.
                                    return v1065;
                                }
                                let v675 = C::fits_in_32(ctx, v674);
                                if let Some(v676) = v675 {
                                    let v677 = constructor_zext32(ctx, v590);
                                    let v1060 = constructor_pulley_f64_from_x32_u(ctx, v677);
                                    let v1061 = constructor_output_freg(ctx, v1060);
                                    let v1062 = Some(v1061);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1406.
                                    return v1062;
                                }
                            }
                            F32X4 => {
                                let v674 = C::value_type(ctx, v590);
                                if v674 == I32X4 {
                                    let v598 = constructor_put_in_vreg(ctx, v590);
                                    let v1081 = constructor_pulley_vf32x4_from_i32x4_u(ctx, v598);
                                    let v1082 = constructor_output_vreg(ctx, v1081);
                                    let v1083 = Some(v1082);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1427.
                                    return v1083;
                                }
                            }
                            F64X2 => {
                                let v674 = C::value_type(ctx, v590);
                                if v674 == I64X2 {
                                    let v598 = constructor_put_in_vreg(ctx, v590);
                                    let v1087 = constructor_pulley_vf64x2_from_i64x2_u(ctx, v598);
                                    let v1088 = constructor_output_vreg(ctx, v1087);
                                    let v1089 = Some(v1088);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1433.
                                    return v1089;
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::FcvtFromSint => {
                    let v58 = C::first_result(ctx, arg0);
                    if let Some(v59) = v58 {
                        let v60 = C::value_type(ctx, v59);
                        match v60 {
                            F32 => {
                                let v674 = C::value_type(ctx, v590);
                                if v674 == I64 {
                                    let v591 = constructor_put_in_xreg(ctx, v590);
                                    let v1069 = constructor_pulley_f32_from_x64_s(ctx, v591);
                                    let v1070 = constructor_output_freg(ctx, v1069);
                                    let v1071 = Some(v1070);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1415.
                                    return v1071;
                                }
                                let v675 = C::fits_in_32(ctx, v674);
                                if let Some(v676) = v675 {
                                    let v933 = constructor_sext32(ctx, v590);
                                    let v1066 = constructor_pulley_f32_from_x32_s(ctx, v933);
                                    let v1067 = constructor_output_freg(ctx, v1066);
                                    let v1068 = Some(v1067);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1412.
                                    return v1068;
                                }
                            }
                            F64 => {
                                let v674 = C::value_type(ctx, v590);
                                if v674 == I64 {
                                    let v591 = constructor_put_in_xreg(ctx, v590);
                                    let v1075 = constructor_pulley_f64_from_x64_s(ctx, v591);
                                    let v1076 = constructor_output_freg(ctx, v1075);
                                    let v1077 = Some(v1076);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1421.
                                    return v1077;
                                }
                                let v675 = C::fits_in_32(ctx, v674);
                                if let Some(v676) = v675 {
                                    let v933 = constructor_sext32(ctx, v590);
                                    let v1072 = constructor_pulley_f64_from_x32_s(ctx, v933);
                                    let v1073 = constructor_output_freg(ctx, v1072);
                                    let v1074 = Some(v1073);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1418.
                                    return v1074;
                                }
                            }
                            F32X4 => {
                                let v674 = C::value_type(ctx, v590);
                                if v674 == I32X4 {
                                    let v598 = constructor_put_in_vreg(ctx, v590);
                                    let v1078 = constructor_pulley_vf32x4_from_i32x4_s(ctx, v598);
                                    let v1079 = constructor_output_vreg(ctx, v1078);
                                    let v1080 = Some(v1079);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1424.
                                    return v1080;
                                }
                            }
                            F64X2 => {
                                let v674 = C::value_type(ctx, v590);
                                if v674 == I64X2 {
                                    let v598 = constructor_put_in_vreg(ctx, v590);
                                    let v1084 = constructor_pulley_vf64x2_from_i64x2_s(ctx, v598);
                                    let v1085 = constructor_output_vreg(ctx, v1084);
                                    let v1086 = Some(v1085);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1430.
                                    return v1086;
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Isplit => {
                    let v674 = C::value_type(ctx, v590);
                    if v674 == I128 {
                        let v958 = C::put_in_regs(ctx, v590);
                        let v959 = C::value_regs_get(ctx, v958, 0x0_usize);
                        let v960 = C::xreg_new(ctx, v959);
                        let v961 = C::put_in_regs(ctx, v590);
                        let v962 = C::value_regs_get(ctx, v961, 0x1_usize);
                        let v963 = C::xreg_new(ctx, v962);
                        let v964 = C::xreg_to_reg(ctx, v960);
                        let v965 = C::value_reg(ctx, v964);
                        let v966 = C::xreg_to_reg(ctx, v963);
                        let v967 = C::value_reg(ctx, v966);
                        let v968 = C::output_pair(ctx, v965, v967);
                        let v969 = Some(v968);
                        // Rule at src/isa/pulley_shared/lower.isle line 1260.
                        return v969;
                    }
                }
                _ => {}
            }
        }
        &InstructionData::UnaryConst {
            opcode: ref v1314,
            constant_handle: v1315,
        } => {
            if let &Opcode::Vconst = v1314 {
                let v58 = C::first_result(ctx, arg0);
                if let Some(v59) = v58 {
                    let v60 = C::value_type(ctx, v59);
                    let v542 = C::ty_vec128(ctx, v60);
                    if let Some(v543) = v542 {
                        let v1316 = C::u128_from_constant(ctx, v1315);
                        if let Some(v1317) = v1316 {
                            let v1318 = constructor_pulley_vconst128(ctx, v1317);
                            let v1319 = constructor_output_vreg(ctx, v1318);
                            let v1320 = Some(v1319);
                            // Rule at src/isa/pulley_shared/lower.isle line 1605.
                            return v1320;
                        }
                    }
                }
            }
        }
        &InstructionData::UnaryIeee32 {
            opcode: ref v67,
            imm: v68,
        } => {
            if let &Opcode::F32const = v67 {
                let v69 = C::u32_from_ieee32(ctx, v68);
                let v71 = C::u32_as_u64(ctx, v69);
                let v72 = constructor_imm(ctx, F32, v71);
                let v73 = constructor_output_reg(ctx, v72);
                let v74 = Some(v73);
                // Rule at src/isa/pulley_shared/lower.isle line 163.
                return v74;
            }
        }
        &InstructionData::UnaryIeee64 {
            opcode: ref v75,
            imm: v76,
        } => {
            if let &Opcode::F64const = v75 {
                let v77 = C::u64_from_ieee64(ctx, v76);
                let v79 = constructor_imm(ctx, F64, v77);
                let v80 = constructor_output_reg(ctx, v79);
                let v81 = Some(v80);
                // Rule at src/isa/pulley_shared/lower.isle line 167.
                return v81;
            }
        }
        &InstructionData::UnaryImm {
            opcode: ref v61,
            imm: v62,
        } => {
            if let &Opcode::Iconst = v61 {
                let v58 = C::first_result(ctx, arg0);
                if let Some(v59) = v58 {
                    let v60 = C::value_type(ctx, v59);
                    let v63 = C::u64_from_imm64(ctx, v62);
                    let v64 = constructor_imm(ctx, v60, v63);
                    let v65 = constructor_output_reg(ctx, v64);
                    let v66 = Some(v65);
                    // Rule at src/isa/pulley_shared/lower.isle line 158.
                    return v66;
                }
            }
        }
        _ => {}
    }
    None
}

// Generated as internal constructor for term lower_cond.
pub fn constructor_lower_cond<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> Cond {
    let v9 = C::def_inst(ctx, arg0);
    if let Some(v10) = v9 {
        let v11 = &C::inst_data(ctx, v10);
        match v11 {
            &InstructionData::IntCompare {
                opcode: ref v15,
                args: ref v16,
                cond: ref v17,
            } => {
                if let &Opcode::Icmp = v15 {
                    let v18 = C::unpack_value_array_2(ctx, v16);
                    let v21 = C::value_type(ctx, v18.1);
                    match v21 {
                        I32 => {
                            let v22 = &constructor_lower_cond_icmp32(ctx, v17, v18.0, v18.1);
                            // Rule at src/isa/pulley_shared/lower.isle line 21.
                            return v22.clone();
                        }
                        I64 => {
                            let v23 = &constructor_lower_cond_icmp64(ctx, v17, v18.0, v18.1);
                            // Rule at src/isa/pulley_shared/lower.isle line 22.
                            return v23.clone();
                        }
                        _ => {}
                    }
                }
            }
            &InstructionData::Unary {
                opcode: ref v12,
                arg: v13,
            } => {
                if let &Opcode::Uextend = v12 {
                    let v14 = &constructor_lower_cond(ctx, v13);
                    // Rule at src/isa/pulley_shared/lower.isle line 19.
                    return v14.clone();
                }
            }
            _ => {}
        }
    }
    let v1 = C::value_type(ctx, arg0);
    if v1 == I64 {
        let v6 = constructor_put_in_xreg(ctx, arg0);
        let v8 = Cond::IfXneq64I32 {
            src1: v6,
            src2: 0_i32,
        };
        // Rule at src/isa/pulley_shared/lower.isle line 15.
        return v8;
    }
    let v2 = C::fits_in_32(ctx, v1);
    if let Some(v3) = v2 {
        let v4 = constructor_zext32(ctx, arg0);
        let v5 = Cond::If32 {
            reg: v4,
        };
        // Rule at src/isa/pulley_shared/lower.isle line 14.
        return v5;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_cond", "src/isa/pulley_shared/lower.isle line 13")
}

// Generated as internal constructor for term lower_cond_icmp32.
pub fn constructor_lower_cond_icmp32<C: Context>(
    ctx: &mut C,
    arg0: &IntCC,
    arg1: Value,
    arg2: Value,
) -> Cond {
    match arg0 {
        &IntCC::Equal => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v19 = Cond::IfXeq32I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 37.
                return v19;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v5 = Cond::IfXeq32 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 25.
            return v5;
        }
        &IntCC::NotEqual => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v20 = Cond::IfXneq32I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 39.
                return v20;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v6 = Cond::IfXneq32 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 26.
            return v6;
        }
        &IntCC::SignedGreaterThan => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v23 = Cond::IfXsgt32I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 45.
                return v23;
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v13 = Cond::IfXslt32 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 32.
            return v13;
        }
        &IntCC::SignedGreaterThanOrEqual => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v24 = Cond::IfXsgteq32I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 47.
                return v24;
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v14 = Cond::IfXslteq32 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 33.
            return v14;
        }
        &IntCC::SignedLessThan => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v21 = Cond::IfXslt32I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 41.
                return v21;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v7 = Cond::IfXslt32 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 27.
            return v7;
        }
        &IntCC::SignedLessThanOrEqual => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v22 = Cond::IfXslteq32I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 43.
                return v22;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v8 = Cond::IfXslteq32 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 28.
            return v8;
        }
        &IntCC::UnsignedGreaterThan => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v35 = Cond::IfXugt32I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 53.
                            return v35;
                        }
                    }
                }
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v15 = Cond::IfXult32 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 34.
            return v15;
        }
        &IntCC::UnsignedGreaterThanOrEqual => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v36 = Cond::IfXugteq32I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 55.
                            return v36;
                        }
                    }
                }
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v16 = Cond::IfXulteq32 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 35.
            return v16;
        }
        &IntCC::UnsignedLessThan => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v33 = Cond::IfXult32I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 49.
                            return v33;
                        }
                    }
                }
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v9 = Cond::IfXult32 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 29.
            return v9;
        }
        &IntCC::UnsignedLessThanOrEqual => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v34 = Cond::IfXulteq32I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 51.
                            return v34;
                        }
                    }
                }
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v10 = Cond::IfXulteq32 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 30.
            return v10;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_cond_icmp32", "src/isa/pulley_shared/lower.isle line 24")
}

// Generated as internal constructor for term lower_cond_icmp64.
pub fn constructor_lower_cond_icmp64<C: Context>(
    ctx: &mut C,
    arg0: &IntCC,
    arg1: Value,
    arg2: Value,
) -> Cond {
    match arg0 {
        &IntCC::Equal => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v19 = Cond::IfXeq64I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 71.
                return v19;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v5 = Cond::IfXeq64 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 59.
            return v5;
        }
        &IntCC::NotEqual => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v20 = Cond::IfXneq64I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 73.
                return v20;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v6 = Cond::IfXneq64 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 60.
            return v6;
        }
        &IntCC::SignedGreaterThan => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v23 = Cond::IfXsgt64I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 79.
                return v23;
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v13 = Cond::IfXslt64 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 66.
            return v13;
        }
        &IntCC::SignedGreaterThanOrEqual => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v24 = Cond::IfXsgteq64I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 81.
                return v24;
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v14 = Cond::IfXslteq64 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 67.
            return v14;
        }
        &IntCC::SignedLessThan => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v21 = Cond::IfXslt64I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 75.
                return v21;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v7 = Cond::IfXslt64 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 61.
            return v7;
        }
        &IntCC::SignedLessThanOrEqual => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v22 = Cond::IfXslteq64I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 77.
                return v22;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v8 = Cond::IfXslteq64 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 62.
            return v8;
        }
        &IntCC::UnsignedGreaterThan => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v35 = Cond::IfXugt64I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 87.
                            return v35;
                        }
                    }
                }
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v15 = Cond::IfXult64 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 68.
            return v15;
        }
        &IntCC::UnsignedGreaterThanOrEqual => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v36 = Cond::IfXugteq64I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 89.
                            return v36;
                        }
                    }
                }
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v16 = Cond::IfXulteq64 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 69.
            return v16;
        }
        &IntCC::UnsignedLessThan => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v33 = Cond::IfXult64I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 83.
                            return v33;
                        }
                    }
                }
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v9 = Cond::IfXult64 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 63.
            return v9;
        }
        &IntCC::UnsignedLessThanOrEqual => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v34 = Cond::IfXulteq64I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 85.
                            return v34;
                        }
                    }
                }
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v10 = Cond::IfXulteq64 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 64.
            return v10;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_cond_icmp64", "src/isa/pulley_shared/lower.isle line 58")
}

// Generated as internal constructor for term lower_branch.
pub fn constructor_lower_branch<C: Context>(
    ctx: &mut C,
    arg0: Inst,
    arg1: &MachLabelSlice,
) -> Option<Unit> {
    let v1 = &C::inst_data(ctx, arg0);
    match v1 {
        &InstructionData::BranchTable {
            opcode: ref v24,
            arg: v25,
            table: v26,
        } => {
            if let &Opcode::BrTable = v24 {
                let v27 = C::jump_table_targets(ctx, arg1);
                if let Some(v28) = v27 {
                    let v31 = constructor_put_in_xreg(ctx, v25);
                    let v32 = constructor_gen_br_table(ctx, v31, v28.0, &v28.1);
                    let v33 = Some(v32);
                    // Rule at src/isa/pulley_shared/lower.isle line 105.
                    return v33;
                }
            }
        }
        &InstructionData::Brif {
            opcode: ref v10,
            arg: v11,
            blocks: ref v12,
        } => {
            if let &Opcode::Brif = v10 {
                let v16 = C::two_targets(ctx, arg1);
                if let Some(v17) = v16 {
                    let v20 = &constructor_lower_cond(ctx, v11);
                    let v21 = &constructor_pulley_br_if(ctx, v20, v17.0, v17.1);
                    let v22 = constructor_emit_side_effect(ctx, v21);
                    let v23 = Some(v22);
                    // Rule at src/isa/pulley_shared/lower.isle line 101.
                    return v23;
                }
            }
        }
        &InstructionData::Jump {
            opcode: ref v2,
            destination: v3,
        } => {
            if let &Opcode::Jump = v2 {
                let v5 = C::single_target(ctx, arg1);
                if let Some(v6) = v5 {
                    let v7 = &constructor_pulley_jump(ctx, v6);
                    let v8 = constructor_emit_side_effect(ctx, v7);
                    let v9 = Some(v8);
                    // Rule at src/isa/pulley_shared/lower.isle line 97.
                    return v9;
                }
            }
        }
        _ => {}
    }
    None
}

// Generated as internal constructor for term u8_from_negated_iconst.
pub fn constructor_u8_from_negated_iconst<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> Option<u8> {
    let v1 = C::i32_from_iconst(ctx, arg0);
    if let Some(v2) = v1 {
        let v3 = C::i32_as_i64(ctx, v2);
        let v4 = C::i64_neg(ctx, v3);
        let v5 = C::u64_try_from_i64(ctx, v4);
        if let Some(v6) = v5 {
            let v7 = C::u8_try_from_u64(ctx, v6);
            if let Some(v8) = v7 {
                let v9 = Some(v8);
                // Rule at src/isa/pulley_shared/lower.isle line 202.
                return v9;
            }
        }
    }
    None
}

// Generated as internal constructor for term u32_from_negated_iconst.
pub fn constructor_u32_from_negated_iconst<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> Option<u32> {
    let v1 = C::i32_from_iconst(ctx, arg0);
    if let Some(v2) = v1 {
        let v3 = C::i32_as_i64(ctx, v2);
        let v4 = C::i64_neg(ctx, v3);
        let v5 = C::u64_try_from_i64(ctx, v4);
        if let Some(v6) = v5 {
            let v7 = C::u32_try_from_u64(ctx, v6);
            if let Some(v8) = v7 {
                let v9 = Some(v8);
                // Rule at src/isa/pulley_shared/lower.isle line 211.
                return v9;
            }
        }
    }
    None
}

// Generated as internal constructor for term u6_shift_from_iconst.
pub fn constructor_u6_shift_from_iconst<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> Option<U6> {
    let v1 = C::def_inst(ctx, arg0);
    if let Some(v2) = v1 {
        let v3 = &C::inst_data(ctx, v2);
        if let &InstructionData::UnaryImm {
            opcode: ref v4,
            imm: v5,
        } = v3 {
            if let &Opcode::Iconst = v4 {
                let v6 = C::u64_from_imm64(ctx, v5);
                let v8 = C::u64_and(ctx, v6, 0x3f_u64);
                let v9 = C::u64_as_u8(ctx, v8);
                let v10 = C::u6_from_u8(ctx, v9);
                if let Some(v11) = v10 {
                    let v12 = Some(v11);
                    // Rule at src/isa/pulley_shared/lower.isle line 453.
                    return v12;
                }
            }
        }
    }
    None
}

// Generated as internal constructor for term lower_icmp.
pub fn constructor_lower_icmp<C: Context>(
    ctx: &mut C,
    arg0: Type,
    arg1: &IntCC,
    arg2: Value,
    arg3: Value,
) -> XReg {
    if arg0 == I128 {
        let v58 = &C::intcc_unsigned(ctx, arg1);
        if let &IntCC::UnsignedLessThan = v58 {
            let v32 = C::put_in_regs(ctx, arg2);
            let v34 = C::value_regs_get(ctx, v32, 0x0_usize);
            let v35 = C::xreg_new(ctx, v34);
            let v59 = C::put_in_regs(ctx, arg2);
            let v60 = C::value_regs_get(ctx, v59, 0x1_usize);
            let v61 = C::xreg_new(ctx, v60);
            let v62 = C::put_in_regs(ctx, arg3);
            let v63 = C::value_regs_get(ctx, v62, 0x0_usize);
            let v64 = C::xreg_new(ctx, v63);
            let v65 = C::put_in_regs(ctx, arg3);
            let v66 = C::value_regs_get(ctx, v65, 0x1_usize);
            let v67 = C::xreg_new(ctx, v66);
            let v68 = constructor_lower_icmp128_hi(ctx, arg1, v61, v67);
            let v69 = constructor_pulley_xult64(ctx, v35, v64);
            let v70 = constructor_pulley_xbxor64(ctx, v61, v67);
            let v50 = constructor_pulley_xconst8(ctx, 0_i8);
            let v71 = constructor_pulley_xeq64(ctx, v70, v50);
            let v72 = constructor_pulley_xselect32(ctx, v71, v69, v68);
            // Rule at src/isa/pulley_shared/lower.isle line 756.
            return v72;
        }
        match arg1 {
            &IntCC::SignedGreaterThanOrEqual => {
                let v54 = &C::intcc_complement(ctx, arg1);
                let v55 = constructor_lower_icmp(ctx, I128, v54, arg2, arg3);
                let v57 = constructor_pulley_xbxor32_s8(ctx, v55, 1_i8);
                // Rule at src/isa/pulley_shared/lower.isle line 745.
                return v57;
            }
            &IntCC::SignedLessThanOrEqual => {
                let v54 = &C::intcc_complement(ctx, arg1);
                let v55 = constructor_lower_icmp(ctx, I128, v54, arg2, arg3);
                let v57 = constructor_pulley_xbxor32_s8(ctx, v55, 1_i8);
                // Rule at src/isa/pulley_shared/lower.isle line 743.
                return v57;
            }
            &IntCC::UnsignedGreaterThanOrEqual => {
                let v54 = &C::intcc_complement(ctx, arg1);
                let v55 = constructor_lower_icmp(ctx, I128, v54, arg2, arg3);
                let v57 = constructor_pulley_xbxor32_s8(ctx, v55, 1_i8);
                // Rule at src/isa/pulley_shared/lower.isle line 749.
                return v57;
            }
            &IntCC::UnsignedLessThanOrEqual => {
                let v54 = &C::intcc_complement(ctx, arg1);
                let v55 = constructor_lower_icmp(ctx, I128, v54, arg2, arg3);
                let v57 = constructor_pulley_xbxor32_s8(ctx, v55, 1_i8);
                // Rule at src/isa/pulley_shared/lower.isle line 747.
                return v57;
            }
            _ => {}
        }
    }
    match arg1 {
        &IntCC::Equal => {
            let v12 = C::fits_in_32(ctx, arg0);
            if let Some(v13) = v12 {
                let v14 = constructor_zext32(ctx, arg2);
                let v15 = constructor_zext32(ctx, arg3);
                let v16 = constructor_pulley_xeq32(ctx, v14, v15);
                // Rule at src/isa/pulley_shared/lower.isle line 689.
                return v16;
            }
            match arg0 {
                I64 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v6 = constructor_pulley_xeq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 671.
                    return v6;
                }
                I128 => {
                    let v32 = C::put_in_regs(ctx, arg2);
                    let v34 = C::value_regs_get(ctx, v32, 0x0_usize);
                    let v35 = C::xreg_new(ctx, v34);
                    let v36 = C::put_in_regs(ctx, arg3);
                    let v37 = C::value_regs_get(ctx, v36, 0x0_usize);
                    let v38 = C::xreg_new(ctx, v37);
                    let v39 = constructor_pulley_xbxor64(ctx, v35, v38);
                    let v40 = C::put_in_regs(ctx, arg2);
                    let v42 = C::value_regs_get(ctx, v40, 0x1_usize);
                    let v43 = C::xreg_new(ctx, v42);
                    let v44 = C::put_in_regs(ctx, arg3);
                    let v45 = C::value_regs_get(ctx, v44, 0x1_usize);
                    let v46 = C::xreg_new(ctx, v45);
                    let v47 = constructor_pulley_xbxor64(ctx, v43, v46);
                    let v48 = constructor_pulley_xbor64(ctx, v39, v47);
                    let v50 = constructor_pulley_xconst8(ctx, 0_i8);
                    let v51 = constructor_pulley_xeq64(ctx, v48, v50);
                    // Rule at src/isa/pulley_shared/lower.isle line 727.
                    return v51;
                }
                _ => {}
            }
        }
        &IntCC::NotEqual => {
            let v12 = C::fits_in_32(ctx, arg0);
            if let Some(v13) = v12 {
                let v14 = constructor_zext32(ctx, arg2);
                let v15 = constructor_zext32(ctx, arg3);
                let v17 = constructor_pulley_xneq32(ctx, v14, v15);
                // Rule at src/isa/pulley_shared/lower.isle line 692.
                return v17;
            }
            match arg0 {
                I64 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v7 = constructor_pulley_xneq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 674.
                    return v7;
                }
                I128 => {
                    let v32 = C::put_in_regs(ctx, arg2);
                    let v34 = C::value_regs_get(ctx, v32, 0x0_usize);
                    let v35 = C::xreg_new(ctx, v34);
                    let v36 = C::put_in_regs(ctx, arg3);
                    let v37 = C::value_regs_get(ctx, v36, 0x0_usize);
                    let v38 = C::xreg_new(ctx, v37);
                    let v39 = constructor_pulley_xbxor64(ctx, v35, v38);
                    let v40 = C::put_in_regs(ctx, arg2);
                    let v42 = C::value_regs_get(ctx, v40, 0x1_usize);
                    let v43 = C::xreg_new(ctx, v42);
                    let v44 = C::put_in_regs(ctx, arg3);
                    let v45 = C::value_regs_get(ctx, v44, 0x1_usize);
                    let v46 = C::xreg_new(ctx, v45);
                    let v47 = constructor_pulley_xbxor64(ctx, v43, v46);
                    let v48 = constructor_pulley_xbor64(ctx, v39, v47);
                    let v50 = constructor_pulley_xconst8(ctx, 0_i8);
                    let v52 = constructor_pulley_xneq64(ctx, v48, v50);
                    // Rule at src/isa/pulley_shared/lower.isle line 731.
                    return v52;
                }
                _ => {}
            }
        }
        &IntCC::SignedGreaterThan => {
            let v25 = constructor_lower_icmp(ctx, arg0, &IntCC::SignedLessThan, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 709.
            return v25;
        }
        &IntCC::SignedGreaterThanOrEqual => {
            let v27 = constructor_lower_icmp(ctx, arg0, &IntCC::SignedLessThanOrEqual, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 711.
            return v27;
        }
        &IntCC::SignedLessThan => {
            let v12 = C::fits_in_32(ctx, arg0);
            if let Some(v13) = v12 {
                let v18 = constructor_sext32(ctx, arg2);
                let v19 = constructor_sext32(ctx, arg3);
                let v20 = constructor_pulley_xslt32(ctx, v18, v19);
                // Rule at src/isa/pulley_shared/lower.isle line 695.
                return v20;
            }
            if arg0 == I64 {
                let v4 = constructor_put_in_xreg(ctx, arg2);
                let v5 = constructor_put_in_xreg(ctx, arg3);
                let v8 = constructor_pulley_xslt64(ctx, v4, v5);
                // Rule at src/isa/pulley_shared/lower.isle line 677.
                return v8;
            }
        }
        &IntCC::SignedLessThanOrEqual => {
            let v12 = C::fits_in_32(ctx, arg0);
            if let Some(v13) = v12 {
                let v18 = constructor_sext32(ctx, arg2);
                let v19 = constructor_sext32(ctx, arg3);
                let v21 = constructor_pulley_xslteq32(ctx, v18, v19);
                // Rule at src/isa/pulley_shared/lower.isle line 698.
                return v21;
            }
            if arg0 == I64 {
                let v4 = constructor_put_in_xreg(ctx, arg2);
                let v5 = constructor_put_in_xreg(ctx, arg3);
                let v9 = constructor_pulley_xslteq64(ctx, v4, v5);
                // Rule at src/isa/pulley_shared/lower.isle line 680.
                return v9;
            }
        }
        &IntCC::UnsignedGreaterThan => {
            let v29 = constructor_lower_icmp(ctx, arg0, &IntCC::UnsignedLessThan, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 713.
            return v29;
        }
        &IntCC::UnsignedGreaterThanOrEqual => {
            let v31 = constructor_lower_icmp(ctx, arg0, &IntCC::UnsignedLessThanOrEqual, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 715.
            return v31;
        }
        &IntCC::UnsignedLessThan => {
            let v12 = C::fits_in_32(ctx, arg0);
            if let Some(v13) = v12 {
                let v14 = constructor_zext32(ctx, arg2);
                let v15 = constructor_zext32(ctx, arg3);
                let v22 = constructor_pulley_xult32(ctx, v14, v15);
                // Rule at src/isa/pulley_shared/lower.isle line 701.
                return v22;
            }
            if arg0 == I64 {
                let v4 = constructor_put_in_xreg(ctx, arg2);
                let v5 = constructor_put_in_xreg(ctx, arg3);
                let v10 = constructor_pulley_xult64(ctx, v4, v5);
                // Rule at src/isa/pulley_shared/lower.isle line 683.
                return v10;
            }
        }
        &IntCC::UnsignedLessThanOrEqual => {
            let v12 = C::fits_in_32(ctx, arg0);
            if let Some(v13) = v12 {
                let v14 = constructor_zext32(ctx, arg2);
                let v15 = constructor_zext32(ctx, arg3);
                let v23 = constructor_pulley_xulteq32(ctx, v14, v15);
                // Rule at src/isa/pulley_shared/lower.isle line 704.
                return v23;
            }
            if arg0 == I64 {
                let v4 = constructor_put_in_xreg(ctx, arg2);
                let v5 = constructor_put_in_xreg(ctx, arg3);
                let v11 = constructor_pulley_xulteq64(ctx, v4, v5);
                // Rule at src/isa/pulley_shared/lower.isle line 686.
                return v11;
            }
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_icmp", "src/isa/pulley_shared/lower.isle line 669")
}

// Generated as internal constructor for term lower_icmp128_hi.
pub fn constructor_lower_icmp128_hi<C: Context>(
    ctx: &mut C,
    arg0: &IntCC,
    arg1: XReg,
    arg2: XReg,
) -> XReg {
    match arg0 {
        &IntCC::SignedLessThan => {
            let v3 = constructor_pulley_xslt64(ctx, arg1, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 770.
            return v3;
        }
        &IntCC::UnsignedLessThan => {
            let v4 = constructor_pulley_xult64(ctx, arg1, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 771.
            return v4;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_icmp128_hi", "src/isa/pulley_shared/lower.isle line 769")
}

// Generated as internal constructor for term lower_vcmp.
pub fn constructor_lower_vcmp<C: Context>(
    ctx: &mut C,
    arg0: Type,
    arg1: &IntCC,
    arg2: Value,
    arg3: Value,
) -> VReg {
    match arg1 {
        &IntCC::Equal => {
            match arg0 {
                I8X16 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v6 = constructor_pulley_veq8x16(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 779.
                    return v6;
                }
                I16X8 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v12 = constructor_pulley_veq16x8(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 785.
                    return v12;
                }
                I32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v18 = constructor_pulley_veq32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 791.
                    return v18;
                }
                I64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v24 = constructor_pulley_veq64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 797.
                    return v24;
                }
                _ => {}
            }
        }
        &IntCC::NotEqual => {
            match arg0 {
                I8X16 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v7 = constructor_pulley_vneq8x16(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 780.
                    return v7;
                }
                I16X8 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v13 = constructor_pulley_vneq16x8(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 786.
                    return v13;
                }
                I32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v19 = constructor_pulley_vneq32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 792.
                    return v19;
                }
                I64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v25 = constructor_pulley_vneq64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 798.
                    return v25;
                }
                _ => {}
            }
        }
        &IntCC::SignedGreaterThan => {
            let v30 = &C::intcc_swap_args(ctx, arg1);
            let v31 = constructor_lower_vcmp(ctx, arg0, v30, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 805.
            return v31;
        }
        &IntCC::SignedGreaterThanOrEqual => {
            let v30 = &C::intcc_swap_args(ctx, arg1);
            let v31 = constructor_lower_vcmp(ctx, arg0, v30, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 807.
            return v31;
        }
        &IntCC::SignedLessThan => {
            match arg0 {
                I8X16 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v8 = constructor_pulley_vslt8x16(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 781.
                    return v8;
                }
                I16X8 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v14 = constructor_pulley_vslt16x8(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 787.
                    return v14;
                }
                I32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v20 = constructor_pulley_vslt32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 793.
                    return v20;
                }
                I64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v26 = constructor_pulley_vslt64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 799.
                    return v26;
                }
                _ => {}
            }
        }
        &IntCC::SignedLessThanOrEqual => {
            match arg0 {
                I8X16 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v9 = constructor_pulley_vslteq8x16(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 782.
                    return v9;
                }
                I16X8 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v15 = constructor_pulley_vslteq16x8(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 788.
                    return v15;
                }
                I32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v21 = constructor_pulley_vslteq32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 794.
                    return v21;
                }
                I64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v27 = constructor_pulley_vslteq64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 800.
                    return v27;
                }
                _ => {}
            }
        }
        &IntCC::UnsignedGreaterThan => {
            let v30 = &C::intcc_swap_args(ctx, arg1);
            let v31 = constructor_lower_vcmp(ctx, arg0, v30, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 809.
            return v31;
        }
        &IntCC::UnsignedGreaterThanOrEqual => {
            let v30 = &C::intcc_swap_args(ctx, arg1);
            let v31 = constructor_lower_vcmp(ctx, arg0, v30, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 811.
            return v31;
        }
        &IntCC::UnsignedLessThan => {
            match arg0 {
                I8X16 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v10 = constructor_pulley_vult8x16(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 783.
                    return v10;
                }
                I16X8 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v16 = constructor_pulley_vult16x8(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 789.
                    return v16;
                }
                I32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v22 = constructor_pulley_vult32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 795.
                    return v22;
                }
                I64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v28 = constructor_pulley_vult64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 801.
                    return v28;
                }
                _ => {}
            }
        }
        &IntCC::UnsignedLessThanOrEqual => {
            match arg0 {
                I8X16 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v11 = constructor_pulley_vulteq8x16(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 784.
                    return v11;
                }
                I16X8 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v17 = constructor_pulley_vulteq16x8(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 790.
                    return v17;
                }
                I32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v23 = constructor_pulley_vulteq32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 796.
                    return v23;
                }
                I64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v29 = constructor_pulley_vulteq64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 802.
                    return v29;
                }
                _ => {}
            }
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_vcmp", "src/isa/pulley_shared/lower.isle line 778")
}

// Generated as internal constructor for term lower_fcmp.
pub fn constructor_lower_fcmp<C: Context>(
    ctx: &mut C,
    arg0: Type,
    arg1: &FloatCC,
    arg2: Value,
    arg3: Value,
) -> XReg {
    match arg1 {
        &FloatCC::Equal => {
            match arg0 {
                F32 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v6 = constructor_pulley_feq32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 824.
                    return v6;
                }
                F64 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v7 = constructor_pulley_feq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 825.
                    return v7;
                }
                _ => {}
            }
        }
        &FloatCC::GreaterThan => {
            let v23 = constructor_lower_fcmp(ctx, arg0, &FloatCC::LessThan, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 843.
            return v23;
        }
        &FloatCC::GreaterThanOrEqual => {
            let v25 = constructor_lower_fcmp(ctx, arg0, &FloatCC::LessThanOrEqual, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 845.
            return v25;
        }
        &FloatCC::LessThan => {
            match arg0 {
                F32 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v10 = constructor_pulley_flt32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 828.
                    return v10;
                }
                F64 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v11 = constructor_pulley_flt64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 829.
                    return v11;
                }
                _ => {}
            }
        }
        &FloatCC::LessThanOrEqual => {
            match arg0 {
                F32 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v12 = constructor_pulley_flteq32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 830.
                    return v12;
                }
                F64 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v13 = constructor_pulley_flteq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 831.
                    return v13;
                }
                _ => {}
            }
        }
        &FloatCC::NotEqual => {
            match arg0 {
                F32 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v8 = constructor_pulley_fneq32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 826.
                    return v8;
                }
                F64 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v9 = constructor_pulley_fneq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 827.
                    return v9;
                }
                _ => {}
            }
        }
        &FloatCC::Ordered => {
            let v15 = constructor_lower_fcmp(ctx, arg0, &FloatCC::Equal, arg2, arg2);
            let v16 = constructor_lower_fcmp(ctx, arg0, &FloatCC::Equal, arg3, arg3);
            let v17 = constructor_pulley_xband32(ctx, v15, v16);
            // Rule at src/isa/pulley_shared/lower.isle line 834.
            return v17;
        }
        &FloatCC::OrderedNotEqual => {
            let v19 = constructor_lower_fcmp(ctx, arg0, &FloatCC::LessThan, arg2, arg3);
            let v21 = constructor_lower_fcmp(ctx, arg0, &FloatCC::GreaterThan, arg2, arg3);
            let v22 = constructor_pulley_xbor32(ctx, v19, v21);
            // Rule at src/isa/pulley_shared/lower.isle line 838.
            return v22;
        }
        _ => {}
    }
    let v26 = C::floatcc_unordered(ctx, arg1);
    if v26 == true {
        let v27 = &C::floatcc_complement(ctx, arg1);
        let v28 = constructor_lower_fcmp(ctx, arg0, v27, arg2, arg3);
        let v30 = constructor_pulley_xbxor32_s8(ctx, v28, 1_i8);
        // Rule at src/isa/pulley_shared/lower.isle line 849.
        return v30;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_fcmp", "src/isa/pulley_shared/lower.isle line 822")
}

// Generated as internal constructor for term lower_vfcmp.
pub fn constructor_lower_vfcmp<C: Context>(
    ctx: &mut C,
    arg0: Type,
    arg1: &FloatCC,
    arg2: Value,
    arg3: Value,
) -> VReg {
    match arg1 {
        &FloatCC::Equal => {
            match arg0 {
                F32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v6 = constructor_pulley_veqf32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 855.
                    return v6;
                }
                F64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v7 = constructor_pulley_veqf64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 856.
                    return v7;
                }
                _ => {}
            }
        }
        &FloatCC::GreaterThan => {
            let v19 = constructor_lower_vfcmp(ctx, arg0, &FloatCC::LessThan, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 874.
            return v19;
        }
        &FloatCC::GreaterThanOrEqual => {
            let v21 = constructor_lower_vfcmp(ctx, arg0, &FloatCC::LessThanOrEqual, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 876.
            return v21;
        }
        &FloatCC::LessThan => {
            match arg0 {
                F32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v10 = constructor_pulley_vltf32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 859.
                    return v10;
                }
                F64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v11 = constructor_pulley_vltf64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 860.
                    return v11;
                }
                _ => {}
            }
        }
        &FloatCC::LessThanOrEqual => {
            match arg0 {
                F32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v12 = constructor_pulley_vlteqf32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 861.
                    return v12;
                }
                F64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v13 = constructor_pulley_vlteqf64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 862.
                    return v13;
                }
                _ => {}
            }
        }
        &FloatCC::NotEqual => {
            match arg0 {
                F32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v8 = constructor_pulley_vneqf32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 857.
                    return v8;
                }
                F64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v9 = constructor_pulley_vneqf64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 858.
                    return v9;
                }
                _ => {}
            }
        }
        &FloatCC::Unordered => {
            let v15 = constructor_lower_vfcmp(ctx, arg0, &FloatCC::NotEqual, arg2, arg2);
            let v16 = constructor_lower_vfcmp(ctx, arg0, &FloatCC::NotEqual, arg3, arg3);
            let v17 = constructor_pulley_vbor128(ctx, v15, v16);
            // Rule at src/isa/pulley_shared/lower.isle line 864.
            return v17;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_vfcmp", "src/isa/pulley_shared/lower.isle line 853")
}

// Generated as internal constructor for term gen_xload.
pub fn constructor_gen_xload<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Offset32,
    arg2: MemFlags,
    arg3: Type,
    arg4: &ExtKind,
) -> XReg {
    let v14 = &constructor_wasm_g32(ctx, arg0, arg1, arg2, arg3);
    if let Some(v15) = v14 {
        let v16 = constructor_gen_xload_g32(ctx, v15, arg3, arg4);
        // Rule at src/isa/pulley_shared/lower.isle line 1017.
        return v16;
    }
    let v11 = C::memflags_is_wasm(ctx, arg2);
    if v11 == true {
        let v12 = &constructor_addrz(ctx, arg0, arg1);
        let v13 = constructor_emit_addrz_xload(ctx, v12, arg3, arg4);
        // Rule at src/isa/pulley_shared/lower.isle line 992.
        return v13;
    }
    let v5 = C::memflags_nontrapping(ctx, arg2);
    if v5 == true {
        let v6 = &C::endianness(ctx, arg2);
        match v6 {
            &Endianness::Little => {
                let v9 = &constructor_addro32(ctx, arg0, arg1);
                let v10 = constructor_emit_addro32_xload(ctx, v9, arg3, arg4);
                // Rule at src/isa/pulley_shared/lower.isle line 967.
                return v10;
            }
            &Endianness::Big => {
                if let &ExtKind::None = arg4 {
                    let v7 = &constructor_amode(ctx, arg0, arg1);
                    let v8 = constructor_pulley_xload(ctx, v7, arg3, arg2);
                    // Rule at src/isa/pulley_shared/lower.isle line 960.
                    return v8;
                }
            }
            _ => {}
        }
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "gen_xload", "src/isa/pulley_shared/lower.isle line 954")
}

// Generated as internal constructor for term emit_addro32_xload.
pub fn constructor_emit_addro32_xload<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
    arg1: Type,
    arg2: &ExtKind,
) -> XReg {
    match arg1 {
        I8 => {
            match arg2 {
                &ExtKind::None => {
                    let v3 = constructor_pulley_xload8_u32_o32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 973.
                    return v3;
                }
                &ExtKind::Sign32 => {
                    let v4 = constructor_pulley_xload8_s32_o32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 974.
                    return v4;
                }
                &ExtKind::Sign64 => {
                    let v4 = constructor_pulley_xload8_s32_o32(ctx, arg0);
                    let v5 = constructor_pulley_sext32(ctx, v4);
                    // Rule at src/isa/pulley_shared/lower.isle line 976.
                    return v5;
                }
                &ExtKind::Zero32 => {
                    let v3 = constructor_pulley_xload8_u32_o32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 975.
                    return v3;
                }
                &ExtKind::Zero64 => {
                    let v3 = constructor_pulley_xload8_u32_o32(ctx, arg0);
                    let v6 = constructor_pulley_zext32(ctx, v3);
                    // Rule at src/isa/pulley_shared/lower.isle line 977.
                    return v6;
                }
                _ => {}
            }
        }
        I16 => {
            match arg2 {
                &ExtKind::None => {
                    let v7 = constructor_pulley_xload16le_u32_o32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 978.
                    return v7;
                }
                &ExtKind::Sign32 => {
                    let v8 = constructor_pulley_xload16le_s32_o32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 979.
                    return v8;
                }
                &ExtKind::Sign64 => {
                    let v8 = constructor_pulley_xload16le_s32_o32(ctx, arg0);
                    let v9 = constructor_pulley_sext32(ctx, v8);
                    // Rule at src/isa/pulley_shared/lower.isle line 981.
                    return v9;
                }
                &ExtKind::Zero32 => {
                    let v7 = constructor_pulley_xload16le_u32_o32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 980.
                    return v7;
                }
                &ExtKind::Zero64 => {
                    let v7 = constructor_pulley_xload16le_u32_o32(ctx, arg0);
                    let v10 = constructor_pulley_zext32(ctx, v7);
                    // Rule at src/isa/pulley_shared/lower.isle line 982.
                    return v10;
                }
                _ => {}
            }
        }
        I32 => {
            match arg2 {
                &ExtKind::None => {
                    let v11 = constructor_pulley_xload32le_o32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 983.
                    return v11;
                }
                &ExtKind::Sign32 => {
                    let v11 = constructor_pulley_xload32le_o32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 984.
                    return v11;
                }
                &ExtKind::Sign64 => {
                    let v11 = constructor_pulley_xload32le_o32(ctx, arg0);
                    let v12 = constructor_pulley_sext32(ctx, v11);
                    // Rule at src/isa/pulley_shared/lower.isle line 986.
                    return v12;
                }
                &ExtKind::Zero32 => {
                    let v11 = constructor_pulley_xload32le_o32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 985.
                    return v11;
                }
                &ExtKind::Zero64 => {
                    let v11 = constructor_pulley_xload32le_o32(ctx, arg0);
                    let v13 = constructor_pulley_zext32(ctx, v11);
                    // Rule at src/isa/pulley_shared/lower.isle line 987.
                    return v13;
                }
                _ => {}
            }
        }
        I64 => {
            let v14 = constructor_pulley_xload64le_o32(ctx, arg0);
            // Rule at src/isa/pulley_shared/lower.isle line 988.
            return v14;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_addro32_xload", "src/isa/pulley_shared/lower.isle line 972")
}

// Generated as internal constructor for term emit_addrz_xload.
pub fn constructor_emit_addrz_xload<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
    arg1: Type,
    arg2: &ExtKind,
) -> XReg {
    match arg1 {
        I8 => {
            match arg2 {
                &ExtKind::None => {
                    let v3 = constructor_pulley_xload8_u32_z(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 997.
                    return v3;
                }
                &ExtKind::Sign32 => {
                    let v4 = constructor_pulley_xload8_s32_z(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 998.
                    return v4;
                }
                &ExtKind::Sign64 => {
                    let v4 = constructor_pulley_xload8_s32_z(ctx, arg0);
                    let v5 = constructor_pulley_sext32(ctx, v4);
                    // Rule at src/isa/pulley_shared/lower.isle line 1000.
                    return v5;
                }
                &ExtKind::Zero32 => {
                    let v3 = constructor_pulley_xload8_u32_z(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 999.
                    return v3;
                }
                &ExtKind::Zero64 => {
                    let v3 = constructor_pulley_xload8_u32_z(ctx, arg0);
                    let v6 = constructor_pulley_zext32(ctx, v3);
                    // Rule at src/isa/pulley_shared/lower.isle line 1001.
                    return v6;
                }
                _ => {}
            }
        }
        I16 => {
            match arg2 {
                &ExtKind::None => {
                    let v7 = constructor_pulley_xload16le_u32_z(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1002.
                    return v7;
                }
                &ExtKind::Sign32 => {
                    let v8 = constructor_pulley_xload16le_s32_z(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1003.
                    return v8;
                }
                &ExtKind::Sign64 => {
                    let v8 = constructor_pulley_xload16le_s32_z(ctx, arg0);
                    let v9 = constructor_pulley_sext32(ctx, v8);
                    // Rule at src/isa/pulley_shared/lower.isle line 1005.
                    return v9;
                }
                &ExtKind::Zero32 => {
                    let v7 = constructor_pulley_xload16le_u32_z(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1004.
                    return v7;
                }
                &ExtKind::Zero64 => {
                    let v7 = constructor_pulley_xload16le_u32_z(ctx, arg0);
                    let v10 = constructor_pulley_zext32(ctx, v7);
                    // Rule at src/isa/pulley_shared/lower.isle line 1006.
                    return v10;
                }
                _ => {}
            }
        }
        I32 => {
            match arg2 {
                &ExtKind::None => {
                    let v11 = constructor_pulley_xload32le_z(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1007.
                    return v11;
                }
                &ExtKind::Sign32 => {
                    let v11 = constructor_pulley_xload32le_z(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1008.
                    return v11;
                }
                &ExtKind::Sign64 => {
                    let v11 = constructor_pulley_xload32le_z(ctx, arg0);
                    let v12 = constructor_pulley_sext32(ctx, v11);
                    // Rule at src/isa/pulley_shared/lower.isle line 1010.
                    return v12;
                }
                &ExtKind::Zero32 => {
                    let v11 = constructor_pulley_xload32le_z(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1009.
                    return v11;
                }
                &ExtKind::Zero64 => {
                    let v11 = constructor_pulley_xload32le_z(ctx, arg0);
                    let v13 = constructor_pulley_zext32(ctx, v11);
                    // Rule at src/isa/pulley_shared/lower.isle line 1011.
                    return v13;
                }
                _ => {}
            }
        }
        I64 => {
            let v14 = constructor_pulley_xload64le_z(ctx, arg0);
            // Rule at src/isa/pulley_shared/lower.isle line 1012.
            return v14;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_addrz_xload", "src/isa/pulley_shared/lower.isle line 996")
}

// Generated as internal constructor for term gen_xload_g32.
pub fn constructor_gen_xload_g32<C: Context>(
    ctx: &mut C,
    arg0: &G32,
    arg1: Type,
    arg2: &ExtKind,
) -> XReg {
    let v5 = &constructor_addrg32bne(ctx, arg0);
    if let Some(v6) = v5 {
        let v7 = &constructor_gen_addrg32bne(ctx, v6);
        let v8 = constructor_emit_addrg32bne_xload(ctx, v7, arg1, arg2);
        // Rule at src/isa/pulley_shared/lower.isle line 1044.
        return v8;
    }
    let v3 = &constructor_gen_addrg32(ctx, arg0);
    let v4 = constructor_emit_addrg32_xload(ctx, v3, arg1, arg2);
    // Rule at src/isa/pulley_shared/lower.isle line 1023.
    return v4;
}

// Generated as internal constructor for term emit_addrg32_xload.
pub fn constructor_emit_addrg32_xload<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
    arg1: Type,
    arg2: &ExtKind,
) -> XReg {
    match arg1 {
        I8 => {
            match arg2 {
                &ExtKind::None => {
                    let v3 = constructor_pulley_xload8_u32_g32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1026.
                    return v3;
                }
                &ExtKind::Sign32 => {
                    let v4 = constructor_pulley_xload8_s32_g32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1027.
                    return v4;
                }
                &ExtKind::Sign64 => {
                    let v4 = constructor_pulley_xload8_s32_g32(ctx, arg0);
                    let v5 = constructor_pulley_sext32(ctx, v4);
                    // Rule at src/isa/pulley_shared/lower.isle line 1029.
                    return v5;
                }
                &ExtKind::Zero32 => {
                    let v3 = constructor_pulley_xload8_u32_g32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1028.
                    return v3;
                }
                &ExtKind::Zero64 => {
                    let v3 = constructor_pulley_xload8_u32_g32(ctx, arg0);
                    let v6 = constructor_pulley_zext32(ctx, v3);
                    // Rule at src/isa/pulley_shared/lower.isle line 1030.
                    return v6;
                }
                _ => {}
            }
        }
        I16 => {
            match arg2 {
                &ExtKind::None => {
                    let v7 = constructor_pulley_xload16le_u32_g32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1031.
                    return v7;
                }
                &ExtKind::Sign32 => {
                    let v8 = constructor_pulley_xload16le_s32_g32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1032.
                    return v8;
                }
                &ExtKind::Sign64 => {
                    let v8 = constructor_pulley_xload16le_s32_g32(ctx, arg0);
                    let v9 = constructor_pulley_sext32(ctx, v8);
                    // Rule at src/isa/pulley_shared/lower.isle line 1034.
                    return v9;
                }
                &ExtKind::Zero32 => {
                    let v7 = constructor_pulley_xload16le_u32_g32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1033.
                    return v7;
                }
                &ExtKind::Zero64 => {
                    let v7 = constructor_pulley_xload16le_u32_g32(ctx, arg0);
                    let v10 = constructor_pulley_zext32(ctx, v7);
                    // Rule at src/isa/pulley_shared/lower.isle line 1035.
                    return v10;
                }
                _ => {}
            }
        }
        I32 => {
            match arg2 {
                &ExtKind::None => {
                    let v11 = constructor_pulley_xload32le_g32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1036.
                    return v11;
                }
                &ExtKind::Sign32 => {
                    let v11 = constructor_pulley_xload32le_g32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1037.
                    return v11;
                }
                &ExtKind::Sign64 => {
                    let v11 = constructor_pulley_xload32le_g32(ctx, arg0);
                    let v12 = constructor_pulley_sext32(ctx, v11);
                    // Rule at src/isa/pulley_shared/lower.isle line 1039.
                    return v12;
                }
                &ExtKind::Zero32 => {
                    let v11 = constructor_pulley_xload32le_g32(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1038.
                    return v11;
                }
                &ExtKind::Zero64 => {
                    let v11 = constructor_pulley_xload32le_g32(ctx, arg0);
                    let v13 = constructor_pulley_zext32(ctx, v11);
                    // Rule at src/isa/pulley_shared/lower.isle line 1040.
                    return v13;
                }
                _ => {}
            }
        }
        I64 => {
            let v14 = constructor_pulley_xload64le_g32(ctx, arg0);
            // Rule at src/isa/pulley_shared/lower.isle line 1041.
            return v14;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_addrg32_xload", "src/isa/pulley_shared/lower.isle line 1025")
}

// Generated as internal constructor for term emit_addrg32bne_xload.
pub fn constructor_emit_addrg32bne_xload<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32Bne,
    arg1: Type,
    arg2: &ExtKind,
) -> XReg {
    match arg1 {
        I8 => {
            match arg2 {
                &ExtKind::None => {
                    let v3 = constructor_pulley_xload8_u32_g32bne(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1049.
                    return v3;
                }
                &ExtKind::Sign32 => {
                    let v4 = constructor_pulley_xload8_s32_g32bne(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1050.
                    return v4;
                }
                &ExtKind::Sign64 => {
                    let v4 = constructor_pulley_xload8_s32_g32bne(ctx, arg0);
                    let v5 = constructor_pulley_sext32(ctx, v4);
                    // Rule at src/isa/pulley_shared/lower.isle line 1052.
                    return v5;
                }
                &ExtKind::Zero32 => {
                    let v3 = constructor_pulley_xload8_u32_g32bne(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1051.
                    return v3;
                }
                &ExtKind::Zero64 => {
                    let v3 = constructor_pulley_xload8_u32_g32bne(ctx, arg0);
                    let v6 = constructor_pulley_zext32(ctx, v3);
                    // Rule at src/isa/pulley_shared/lower.isle line 1053.
                    return v6;
                }
                _ => {}
            }
        }
        I16 => {
            match arg2 {
                &ExtKind::None => {
                    let v7 = constructor_pulley_xload16le_u32_g32bne(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1054.
                    return v7;
                }
                &ExtKind::Sign32 => {
                    let v8 = constructor_pulley_xload16le_s32_g32bne(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1055.
                    return v8;
                }
                &ExtKind::Sign64 => {
                    let v8 = constructor_pulley_xload16le_s32_g32bne(ctx, arg0);
                    let v9 = constructor_pulley_sext32(ctx, v8);
                    // Rule at src/isa/pulley_shared/lower.isle line 1057.
                    return v9;
                }
                &ExtKind::Zero32 => {
                    let v7 = constructor_pulley_xload16le_u32_g32bne(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1056.
                    return v7;
                }
                &ExtKind::Zero64 => {
                    let v7 = constructor_pulley_xload16le_u32_g32bne(ctx, arg0);
                    let v10 = constructor_pulley_zext32(ctx, v7);
                    // Rule at src/isa/pulley_shared/lower.isle line 1058.
                    return v10;
                }
                _ => {}
            }
        }
        I32 => {
            match arg2 {
                &ExtKind::None => {
                    let v11 = constructor_pulley_xload32le_g32bne(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1059.
                    return v11;
                }
                &ExtKind::Sign32 => {
                    let v11 = constructor_pulley_xload32le_g32bne(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1060.
                    return v11;
                }
                &ExtKind::Sign64 => {
                    let v11 = constructor_pulley_xload32le_g32bne(ctx, arg0);
                    let v12 = constructor_pulley_sext32(ctx, v11);
                    // Rule at src/isa/pulley_shared/lower.isle line 1062.
                    return v12;
                }
                &ExtKind::Zero32 => {
                    let v11 = constructor_pulley_xload32le_g32bne(ctx, arg0);
                    // Rule at src/isa/pulley_shared/lower.isle line 1061.
                    return v11;
                }
                &ExtKind::Zero64 => {
                    let v11 = constructor_pulley_xload32le_g32bne(ctx, arg0);
                    let v13 = constructor_pulley_zext32(ctx, v11);
                    // Rule at src/isa/pulley_shared/lower.isle line 1063.
                    return v13;
                }
                _ => {}
            }
        }
        I64 => {
            let v14 = constructor_pulley_xload64le_g32bne(ctx, arg0);
            // Rule at src/isa/pulley_shared/lower.isle line 1064.
            return v14;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_addrg32bne_xload", "src/isa/pulley_shared/lower.isle line 1048")
}

// Generated as internal constructor for term gen_fload.
pub fn constructor_gen_fload<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Offset32,
    arg2: MemFlags,
    arg3: Type,
) -> FReg {
    let v10 = &constructor_wasm_g32(ctx, arg0, arg1, arg2, arg3);
    if let Some(v11) = v10 {
        let v12 = &constructor_gen_addrg32(ctx, v11);
        let v13 = constructor_emit_addrg32_fload(ctx, v12, arg3);
        // Rule at src/isa/pulley_shared/lower.isle line 1087.
        return v13;
    }
    let v7 = C::memflags_is_wasm(ctx, arg2);
    if v7 == true {
        let v8 = &constructor_addrz(ctx, arg0, arg1);
        let v9 = constructor_emit_addrz_fload(ctx, v8, arg3);
        // Rule at src/isa/pulley_shared/lower.isle line 1077.
        return v9;
    }
    let v4 = C::memflags_nontrapping(ctx, arg2);
    if v4 == true {
        let v5 = &constructor_amode(ctx, arg0, arg1);
        let v6 = constructor_pulley_fload(ctx, v5, arg3, arg2);
        // Rule at src/isa/pulley_shared/lower.isle line 1071.
        return v6;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "gen_fload", "src/isa/pulley_shared/lower.isle line 1067")
}

// Generated as internal constructor for term emit_addrz_fload.
pub fn constructor_emit_addrz_fload<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
    arg1: Type,
) -> FReg {
    match arg1 {
        F32 => {
            let v2 = constructor_pulley_fload32le_z(ctx, arg0);
            // Rule at src/isa/pulley_shared/lower.isle line 1082.
            return v2;
        }
        F64 => {
            let v3 = constructor_pulley_fload64le_z(ctx, arg0);
            // Rule at src/isa/pulley_shared/lower.isle line 1083.
            return v3;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_addrz_fload", "src/isa/pulley_shared/lower.isle line 1081")
}

// Generated as internal constructor for term emit_addrg32_fload.
pub fn constructor_emit_addrg32_fload<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
    arg1: Type,
) -> FReg {
    match arg1 {
        F32 => {
            let v2 = constructor_pulley_fload32le_g32(ctx, arg0);
            // Rule at src/isa/pulley_shared/lower.isle line 1092.
            return v2;
        }
        F64 => {
            let v3 = constructor_pulley_fload64le_g32(ctx, arg0);
            // Rule at src/isa/pulley_shared/lower.isle line 1093.
            return v3;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_addrg32_fload", "src/isa/pulley_shared/lower.isle line 1091")
}

// Generated as internal constructor for term gen_vload.
pub fn constructor_gen_vload<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Offset32,
    arg2: MemFlags,
    arg3: Type,
    arg4: &VExtKind,
) -> VReg {
    if let &VExtKind::None = arg4 {
        let v11 = C::ty_vec128(ctx, arg3);
        if let Some(v12) = v11 {
            let v13 = &constructor_wasm_g32(ctx, arg0, arg1, arg2, v12);
            if let Some(v14) = v13 {
                let v15 = &constructor_gen_addrg32(ctx, v14);
                let v16 = constructor_pulley_vload128le_g32(ctx, v15);
                // Rule at src/isa/pulley_shared/lower.isle line 1121.
                return v16;
            }
        }
    }
    let v8 = C::memflags_is_wasm(ctx, arg2);
    if v8 == true {
        let v9 = &constructor_addrz(ctx, arg0, arg1);
        let v10 = constructor_emit_addrz_vload(ctx, v9, arg3, arg4);
        // Rule at src/isa/pulley_shared/lower.isle line 1106.
        return v10;
    }
    if let &VExtKind::None = arg4 {
        let v5 = C::memflags_nontrapping(ctx, arg2);
        if v5 == true {
            let v6 = &constructor_amode(ctx, arg0, arg1);
            let v7 = constructor_pulley_vload(ctx, v6, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 1101.
            return v7;
        }
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "gen_vload", "src/isa/pulley_shared/lower.isle line 1096")
}

// Generated as internal constructor for term emit_addrz_vload.
pub fn constructor_emit_addrz_vload<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
    arg1: Type,
    arg2: &VExtKind,
) -> VReg {
    let v2 = C::ty_vec128(ctx, arg1);
    if let Some(v3) = v2 {
        match arg2 {
            &VExtKind::None => {
                let v5 = constructor_pulley_vload128le_z(ctx, arg0);
                // Rule at src/isa/pulley_shared/lower.isle line 1111.
                return v5;
            }
            &VExtKind::S8x8 => {
                let v6 = constructor_pulley_vload8x8_s_z(ctx, arg0);
                // Rule at src/isa/pulley_shared/lower.isle line 1112.
                return v6;
            }
            &VExtKind::U8x8 => {
                let v7 = constructor_pulley_vload8x8_u_z(ctx, arg0);
                // Rule at src/isa/pulley_shared/lower.isle line 1113.
                return v7;
            }
            &VExtKind::S16x4 => {
                let v8 = constructor_pulley_vload16x4le_s_z(ctx, arg0);
                // Rule at src/isa/pulley_shared/lower.isle line 1114.
                return v8;
            }
            &VExtKind::U16x4 => {
                let v9 = constructor_pulley_vload16x4le_u_z(ctx, arg0);
                // Rule at src/isa/pulley_shared/lower.isle line 1115.
                return v9;
            }
            &VExtKind::S32x2 => {
                let v10 = constructor_pulley_vload32x2le_s_z(ctx, arg0);
                // Rule at src/isa/pulley_shared/lower.isle line 1116.
                return v10;
            }
            &VExtKind::U32x2 => {
                let v11 = constructor_pulley_vload32x2le_u_z(ctx, arg0);
                // Rule at src/isa/pulley_shared/lower.isle line 1117.
                return v11;
            }
            _ => {}
        }
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_addrz_vload", "src/isa/pulley_shared/lower.isle line 1110")
}

// Generated as internal constructor for term emit_store_i128.
pub fn constructor_emit_store_i128<C: Context>(
    ctx: &mut C,
    arg0: MemFlags,
    arg1: XReg,
    arg2: XReg,
    arg3: &Amode,
    arg4: &Amode,
) -> SideEffectNoResult {
    let v5 = &C::endianness(ctx, arg0);
    match v5 {
        &Endianness::Little => {
            let v7 = &constructor_pulley_xstore(ctx, arg3, arg1, I64, arg0);
            let v8 = constructor_side_effect(ctx, v7);
            let v9 = &constructor_pulley_xstore(ctx, arg4, arg2, I64, arg0);
            // Rule at src/isa/pulley_shared/lower.isle line 1159.
            return v9.clone();
        }
        &Endianness::Big => {
            let v10 = &constructor_pulley_xstore(ctx, arg3, arg2, I64, arg0);
            let v11 = constructor_side_effect(ctx, v10);
            let v12 = &constructor_pulley_xstore(ctx, arg4, arg1, I64, arg0);
            // Rule at src/isa/pulley_shared/lower.isle line 1163.
            return v12.clone();
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_store_i128", "src/isa/pulley_shared/lower.isle line 1158")
}

// Generated as internal constructor for term gen_store.
pub fn constructor_gen_store<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Value,
    arg2: Offset32,
    arg3: MemFlags,
    arg4: Type,
) -> SideEffectNoResult {
    let v22 = &constructor_wasm_g32(ctx, arg1, arg2, arg3, arg4);
    if let Some(v23) = v22 {
        let v24 = &constructor_gen_addrg32(ctx, v23);
        let v25 = &constructor_emit_addrg32_store(ctx, v24, arg0, arg4);
        // Rule at src/isa/pulley_shared/lower.isle line 1199.
        return v25.clone();
    }
    let v19 = C::memflags_is_wasm(ctx, arg3);
    if v19 == true {
        let v20 = &constructor_addrz(ctx, arg1, arg2);
        let v21 = &constructor_emit_addrz_store(ctx, v20, arg0, arg4);
        // Rule at src/isa/pulley_shared/lower.isle line 1185.
        return v21.clone();
    }
    let v7 = C::memflags_nontrapping(ctx, arg3);
    if v7 == true {
        let v15 = C::ty_vec128(ctx, arg4);
        if let Some(v16) = v15 {
            let v8 = &constructor_amode(ctx, arg1, arg2);
            let v17 = constructor_put_in_vreg(ctx, arg0);
            let v18 = &constructor_pulley_vstore(ctx, v8, v17, v16, arg3);
            // Rule at src/isa/pulley_shared/lower.isle line 1180.
            return v18.clone();
        }
        let v11 = C::ty_scalar_float(ctx, arg4);
        if let Some(v12) = v11 {
            let v8 = &constructor_amode(ctx, arg1, arg2);
            let v13 = constructor_put_in_freg(ctx, arg0);
            let v14 = &constructor_pulley_fstore(ctx, v8, v13, v12, arg3);
            // Rule at src/isa/pulley_shared/lower.isle line 1177.
            return v14.clone();
        }
        let v5 = C::ty_int(ctx, arg4);
        if let Some(v6) = v5 {
            let v8 = &constructor_amode(ctx, arg1, arg2);
            let v9 = constructor_put_in_xreg(ctx, arg0);
            let v10 = &constructor_pulley_xstore(ctx, v8, v9, v6, arg3);
            // Rule at src/isa/pulley_shared/lower.isle line 1174.
            return v10.clone();
        }
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "gen_store", "src/isa/pulley_shared/lower.isle line 1171")
}

// Generated as internal constructor for term emit_addrz_store.
pub fn constructor_emit_addrz_store<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
    arg1: Value,
    arg2: Type,
) -> SideEffectNoResult {
    let v11 = C::ty_vec128(ctx, arg2);
    if let Some(v12) = v11 {
        let v13 = constructor_put_in_vreg(ctx, arg1);
        let v14 = &constructor_pulley_vstore128le_z(ctx, arg0, v13);
        // Rule at src/isa/pulley_shared/lower.isle line 1196.
        return v14.clone();
    }
    match arg2 {
        I8 => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = &constructor_pulley_xstore8_z(ctx, arg0, v3);
            // Rule at src/isa/pulley_shared/lower.isle line 1190.
            return v4.clone();
        }
        I16 => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v5 = &constructor_pulley_xstore16le_z(ctx, arg0, v3);
            // Rule at src/isa/pulley_shared/lower.isle line 1191.
            return v5.clone();
        }
        I32 => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v6 = &constructor_pulley_xstore32le_z(ctx, arg0, v3);
            // Rule at src/isa/pulley_shared/lower.isle line 1192.
            return v6.clone();
        }
        I64 => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v7 = &constructor_pulley_xstore64le_z(ctx, arg0, v3);
            // Rule at src/isa/pulley_shared/lower.isle line 1193.
            return v7.clone();
        }
        F32 => {
            let v8 = constructor_put_in_freg(ctx, arg1);
            let v9 = &constructor_pulley_fstore32le_z(ctx, arg0, v8);
            // Rule at src/isa/pulley_shared/lower.isle line 1194.
            return v9.clone();
        }
        F64 => {
            let v8 = constructor_put_in_freg(ctx, arg1);
            let v10 = &constructor_pulley_fstore64le_z(ctx, arg0, v8);
            // Rule at src/isa/pulley_shared/lower.isle line 1195.
            return v10.clone();
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_addrz_store", "src/isa/pulley_shared/lower.isle line 1189")
}

// Generated as internal constructor for term emit_addrg32_store.
pub fn constructor_emit_addrg32_store<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
    arg1: Value,
    arg2: Type,
) -> SideEffectNoResult {
    let v11 = C::ty_vec128(ctx, arg2);
    if let Some(v12) = v11 {
        let v13 = constructor_put_in_vreg(ctx, arg1);
        let v14 = &constructor_pulley_vstore128le_g32(ctx, arg0, v13);
        // Rule at src/isa/pulley_shared/lower.isle line 1210.
        return v14.clone();
    }
    match arg2 {
        I8 => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = &constructor_pulley_xstore8_g32(ctx, arg0, v3);
            // Rule at src/isa/pulley_shared/lower.isle line 1204.
            return v4.clone();
        }
        I16 => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v5 = &constructor_pulley_xstore16le_g32(ctx, arg0, v3);
            // Rule at src/isa/pulley_shared/lower.isle line 1205.
            return v5.clone();
        }
        I32 => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v6 = &constructor_pulley_xstore32le_g32(ctx, arg0, v3);
            // Rule at src/isa/pulley_shared/lower.isle line 1206.
            return v6.clone();
        }
        I64 => {
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v7 = &constructor_pulley_xstore64le_g32(ctx, arg0, v3);
            // Rule at src/isa/pulley_shared/lower.isle line 1207.
            return v7.clone();
        }
        F32 => {
            let v8 = constructor_put_in_freg(ctx, arg1);
            let v9 = &constructor_pulley_fstore32le_g32(ctx, arg0, v8);
            // Rule at src/isa/pulley_shared/lower.isle line 1208.
            return v9.clone();
        }
        F64 => {
            let v8 = constructor_put_in_freg(ctx, arg1);
            let v10 = &constructor_pulley_fstore64le_g32(ctx, arg0, v8);
            // Rule at src/isa/pulley_shared/lower.isle line 1209.
            return v10.clone();
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_addrg32_store", "src/isa/pulley_shared/lower.isle line 1203")
}

// Generated as internal constructor for term lower_stack_addr.
pub fn constructor_lower_stack_addr<C: Context>(
    ctx: &mut C,
    arg0: StackSlot,
    arg1: Offset32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = C::writable_xreg_to_writable_reg(ctx, v2);
    let v4 = &C::abi_stackslot_addr(ctx, v3, arg0, arg1);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at src/isa/pulley_shared/lower.isle line 1218.
    return v6;
}

// Generated as internal constructor for term emit_cond.
pub fn constructor_emit_cond<C: Context>(
    ctx: &mut C,
    arg0: &Cond,
) -> XReg {
    match arg0 {
        &Cond::If32 {
            reg: v1,
        } => {
            // Rule at src/isa/pulley_shared/lower.isle line 1292.
            return v1;
        }
        &Cond::IfNot32 {
            reg: v2,
        } => {
            let v4 = constructor_pulley_xconst8(ctx, 0_i8);
            let v5 = constructor_pulley_xeq32(ctx, v2, v4);
            // Rule at src/isa/pulley_shared/lower.isle line 1293.
            return v5;
        }
        &Cond::IfXeq32 {
            src1: v6,
            src2: v7,
        } => {
            let v8 = constructor_pulley_xeq32(ctx, v6, v7);
            // Rule at src/isa/pulley_shared/lower.isle line 1294.
            return v8;
        }
        &Cond::IfXneq32 {
            src1: v9,
            src2: v10,
        } => {
            let v11 = constructor_pulley_xneq32(ctx, v9, v10);
            // Rule at src/isa/pulley_shared/lower.isle line 1295.
            return v11;
        }
        &Cond::IfXslt32 {
            src1: v12,
            src2: v13,
        } => {
            let v14 = constructor_pulley_xslt32(ctx, v12, v13);
            // Rule at src/isa/pulley_shared/lower.isle line 1296.
            return v14;
        }
        &Cond::IfXslteq32 {
            src1: v15,
            src2: v16,
        } => {
            let v17 = constructor_pulley_xslteq32(ctx, v15, v16);
            // Rule at src/isa/pulley_shared/lower.isle line 1297.
            return v17;
        }
        &Cond::IfXult32 {
            src1: v18,
            src2: v19,
        } => {
            let v20 = constructor_pulley_xult32(ctx, v18, v19);
            // Rule at src/isa/pulley_shared/lower.isle line 1298.
            return v20;
        }
        &Cond::IfXulteq32 {
            src1: v21,
            src2: v22,
        } => {
            let v23 = constructor_pulley_xulteq32(ctx, v21, v22);
            // Rule at src/isa/pulley_shared/lower.isle line 1299.
            return v23;
        }
        &Cond::IfXeq32I32 {
            src1: v42,
            src2: v43,
        } => {
            let v45 = C::i32_as_i64(ctx, v43);
            let v46 = C::i64_as_u64(ctx, v45);
            let v47 = constructor_imm(ctx, I32, v46);
            let v48 = C::xreg_new(ctx, v47);
            let v49 = constructor_pulley_xeq32(ctx, v42, v48);
            // Rule at src/isa/pulley_shared/lower.isle line 1307.
            return v49;
        }
        &Cond::IfXneq32I32 {
            src1: v50,
            src2: v51,
        } => {
            let v52 = C::i32_as_i64(ctx, v51);
            let v53 = C::i64_as_u64(ctx, v52);
            let v54 = constructor_imm(ctx, I32, v53);
            let v55 = C::xreg_new(ctx, v54);
            let v56 = constructor_pulley_xneq32(ctx, v50, v55);
            // Rule at src/isa/pulley_shared/lower.isle line 1309.
            return v56;
        }
        &Cond::IfXslt32I32 {
            src1: v57,
            src2: v58,
        } => {
            let v59 = C::i32_as_i64(ctx, v58);
            let v60 = C::i64_as_u64(ctx, v59);
            let v61 = constructor_imm(ctx, I32, v60);
            let v62 = C::xreg_new(ctx, v61);
            let v63 = constructor_pulley_xslt32(ctx, v57, v62);
            // Rule at src/isa/pulley_shared/lower.isle line 1311.
            return v63;
        }
        &Cond::IfXslteq32I32 {
            src1: v64,
            src2: v65,
        } => {
            let v66 = C::i32_as_i64(ctx, v65);
            let v67 = C::i64_as_u64(ctx, v66);
            let v68 = constructor_imm(ctx, I32, v67);
            let v69 = C::xreg_new(ctx, v68);
            let v70 = constructor_pulley_xslteq32(ctx, v64, v69);
            // Rule at src/isa/pulley_shared/lower.isle line 1313.
            return v70;
        }
        &Cond::IfXult32I32 {
            src1: v71,
            src2: v72,
        } => {
            let v73 = C::u32_as_u64(ctx, v72);
            let v74 = constructor_imm(ctx, I32, v73);
            let v75 = C::xreg_new(ctx, v74);
            let v76 = constructor_pulley_xult32(ctx, v71, v75);
            // Rule at src/isa/pulley_shared/lower.isle line 1315.
            return v76;
        }
        &Cond::IfXulteq32I32 {
            src1: v77,
            src2: v78,
        } => {
            let v79 = C::u32_as_u64(ctx, v78);
            let v80 = constructor_imm(ctx, I32, v79);
            let v81 = C::xreg_new(ctx, v80);
            let v82 = constructor_pulley_xulteq32(ctx, v77, v81);
            // Rule at src/isa/pulley_shared/lower.isle line 1317.
            return v82;
        }
        &Cond::IfXsgt32I32 {
            src1: v83,
            src2: v84,
        } => {
            let v85 = C::i32_as_i64(ctx, v84);
            let v86 = C::i64_as_u64(ctx, v85);
            let v87 = constructor_imm(ctx, I32, v86);
            let v88 = C::xreg_new(ctx, v87);
            let v89 = constructor_pulley_xslt32(ctx, v88, v83);
            // Rule at src/isa/pulley_shared/lower.isle line 1321.
            return v89;
        }
        &Cond::IfXsgteq32I32 {
            src1: v90,
            src2: v91,
        } => {
            let v92 = C::i32_as_i64(ctx, v91);
            let v93 = C::i64_as_u64(ctx, v92);
            let v94 = constructor_imm(ctx, I32, v93);
            let v95 = C::xreg_new(ctx, v94);
            let v96 = constructor_pulley_xslteq32(ctx, v95, v90);
            // Rule at src/isa/pulley_shared/lower.isle line 1323.
            return v96;
        }
        &Cond::IfXugt32I32 {
            src1: v97,
            src2: v98,
        } => {
            let v99 = C::u32_as_u64(ctx, v98);
            let v100 = constructor_imm(ctx, I32, v99);
            let v101 = C::xreg_new(ctx, v100);
            let v102 = constructor_pulley_xult32(ctx, v101, v97);
            // Rule at src/isa/pulley_shared/lower.isle line 1325.
            return v102;
        }
        &Cond::IfXugteq32I32 {
            src1: v103,
            src2: v104,
        } => {
            let v105 = C::u32_as_u64(ctx, v104);
            let v106 = constructor_imm(ctx, I32, v105);
            let v107 = C::xreg_new(ctx, v106);
            let v108 = constructor_pulley_xulteq32(ctx, v107, v103);
            // Rule at src/isa/pulley_shared/lower.isle line 1327.
            return v108;
        }
        &Cond::IfXeq64 {
            src1: v24,
            src2: v25,
        } => {
            let v26 = constructor_pulley_xeq64(ctx, v24, v25);
            // Rule at src/isa/pulley_shared/lower.isle line 1300.
            return v26;
        }
        &Cond::IfXneq64 {
            src1: v27,
            src2: v28,
        } => {
            let v29 = constructor_pulley_xneq64(ctx, v27, v28);
            // Rule at src/isa/pulley_shared/lower.isle line 1301.
            return v29;
        }
        &Cond::IfXslt64 {
            src1: v30,
            src2: v31,
        } => {
            let v32 = constructor_pulley_xslt64(ctx, v30, v31);
            // Rule at src/isa/pulley_shared/lower.isle line 1302.
            return v32;
        }
        &Cond::IfXslteq64 {
            src1: v33,
            src2: v34,
        } => {
            let v35 = constructor_pulley_xslteq64(ctx, v33, v34);
            // Rule at src/isa/pulley_shared/lower.isle line 1303.
            return v35;
        }
        &Cond::IfXult64 {
            src1: v36,
            src2: v37,
        } => {
            let v38 = constructor_pulley_xult64(ctx, v36, v37);
            // Rule at src/isa/pulley_shared/lower.isle line 1304.
            return v38;
        }
        &Cond::IfXulteq64 {
            src1: v39,
            src2: v40,
        } => {
            let v41 = constructor_pulley_xulteq64(ctx, v39, v40);
            // Rule at src/isa/pulley_shared/lower.isle line 1305.
            return v41;
        }
        &Cond::IfXeq64I32 {
            src1: v109,
            src2: v110,
        } => {
            let v112 = C::i32_as_i64(ctx, v110);
            let v113 = C::i64_as_u64(ctx, v112);
            let v114 = constructor_imm(ctx, I64, v113);
            let v115 = C::xreg_new(ctx, v114);
            let v116 = constructor_pulley_xeq64(ctx, v109, v115);
            // Rule at src/isa/pulley_shared/lower.isle line 1330.
            return v116;
        }
        &Cond::IfXneq64I32 {
            src1: v117,
            src2: v118,
        } => {
            let v119 = C::i32_as_i64(ctx, v118);
            let v120 = C::i64_as_u64(ctx, v119);
            let v121 = constructor_imm(ctx, I64, v120);
            let v122 = C::xreg_new(ctx, v121);
            let v123 = constructor_pulley_xneq64(ctx, v117, v122);
            // Rule at src/isa/pulley_shared/lower.isle line 1332.
            return v123;
        }
        &Cond::IfXslt64I32 {
            src1: v124,
            src2: v125,
        } => {
            let v126 = C::i32_as_i64(ctx, v125);
            let v127 = C::i64_as_u64(ctx, v126);
            let v128 = constructor_imm(ctx, I64, v127);
            let v129 = C::xreg_new(ctx, v128);
            let v130 = constructor_pulley_xslt64(ctx, v124, v129);
            // Rule at src/isa/pulley_shared/lower.isle line 1334.
            return v130;
        }
        &Cond::IfXslteq64I32 {
            src1: v131,
            src2: v132,
        } => {
            let v133 = C::i32_as_i64(ctx, v132);
            let v134 = C::i64_as_u64(ctx, v133);
            let v135 = constructor_imm(ctx, I64, v134);
            let v136 = C::xreg_new(ctx, v135);
            let v137 = constructor_pulley_xslteq64(ctx, v131, v136);
            // Rule at src/isa/pulley_shared/lower.isle line 1336.
            return v137;
        }
        &Cond::IfXult64I32 {
            src1: v138,
            src2: v139,
        } => {
            let v140 = C::u32_as_u64(ctx, v139);
            let v141 = constructor_imm(ctx, I64, v140);
            let v142 = C::xreg_new(ctx, v141);
            let v143 = constructor_pulley_xult64(ctx, v138, v142);
            // Rule at src/isa/pulley_shared/lower.isle line 1338.
            return v143;
        }
        &Cond::IfXulteq64I32 {
            src1: v144,
            src2: v145,
        } => {
            let v146 = C::u32_as_u64(ctx, v145);
            let v147 = constructor_imm(ctx, I64, v146);
            let v148 = C::xreg_new(ctx, v147);
            let v149 = constructor_pulley_xulteq64(ctx, v144, v148);
            // Rule at src/isa/pulley_shared/lower.isle line 1340.
            return v149;
        }
        &Cond::IfXsgt64I32 {
            src1: v150,
            src2: v151,
        } => {
            let v152 = C::i32_as_i64(ctx, v151);
            let v153 = C::i64_as_u64(ctx, v152);
            let v154 = constructor_imm(ctx, I64, v153);
            let v155 = C::xreg_new(ctx, v154);
            let v156 = constructor_pulley_xslt64(ctx, v155, v150);
            // Rule at src/isa/pulley_shared/lower.isle line 1344.
            return v156;
        }
        &Cond::IfXsgteq64I32 {
            src1: v157,
            src2: v158,
        } => {
            let v159 = C::i32_as_i64(ctx, v158);
            let v160 = C::i64_as_u64(ctx, v159);
            let v161 = constructor_imm(ctx, I64, v160);
            let v162 = C::xreg_new(ctx, v161);
            let v163 = constructor_pulley_xslteq64(ctx, v162, v157);
            // Rule at src/isa/pulley_shared/lower.isle line 1346.
            return v163;
        }
        &Cond::IfXugt64I32 {
            src1: v164,
            src2: v165,
        } => {
            let v166 = C::u32_as_u64(ctx, v165);
            let v167 = constructor_imm(ctx, I64, v166);
            let v168 = C::xreg_new(ctx, v167);
            let v169 = constructor_pulley_xult64(ctx, v168, v164);
            // Rule at src/isa/pulley_shared/lower.isle line 1348.
            return v169;
        }
        &Cond::IfXugteq64I32 {
            src1: v170,
            src2: v171,
        } => {
            let v172 = C::u32_as_u64(ctx, v171);
            let v173 = constructor_imm(ctx, I64, v172);
            let v174 = C::xreg_new(ctx, v173);
            let v175 = constructor_pulley_xulteq64(ctx, v174, v170);
            // Rule at src/isa/pulley_shared/lower.isle line 1350.
            return v175;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_cond", "src/isa/pulley_shared/lower.isle line 1291")
}

// Generated as internal constructor for term pulley_ret.
pub fn constructor_pulley_ret<C: Context>(
    ctx: &mut C,
) -> SideEffectNoResult {
    let v1 = &constructor_raw_inst_to_inst(ctx, &RawInst::Ret);
    let v2 = SideEffectNoResult::Inst {
        inst: v1.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1649.
    return v2;
}

// Generated as internal constructor for term pulley_xjump.
pub fn constructor_pulley_xjump<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> SideEffectNoResult {
    let v1 = RawInst::XJump {
        reg: arg0,
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = SideEffectNoResult::Inst {
        inst: v2.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1651.
    return v3;
}

// Generated as internal constructor for term pulley_xmov.
pub fn constructor_pulley_xmov<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xmov {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1653.
    return v5;
}

// Generated as internal constructor for term pulley_xzero.
pub fn constructor_pulley_xzero<C: Context>(
    ctx: &mut C,
) -> XReg {
    let v0 = constructor_temp_writable_xreg(ctx);
    let v1 = RawInst::Xzero {
        dst: v0,
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = C::emit(ctx, v2);
    let v4 = C::writable_xreg_to_xreg(ctx, v0);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1660.
    return v4;
}

// Generated as internal constructor for term pulley_xone.
pub fn constructor_pulley_xone<C: Context>(
    ctx: &mut C,
) -> XReg {
    let v0 = constructor_temp_writable_xreg(ctx);
    let v1 = RawInst::Xone {
        dst: v0,
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = C::emit(ctx, v2);
    let v4 = C::writable_xreg_to_xreg(ctx, v0);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1667.
    return v4;
}

// Generated as internal constructor for term pulley_xconst8.
pub fn constructor_pulley_xconst8<C: Context>(
    ctx: &mut C,
    arg0: i8,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xconst8 {
        dst: v1,
        imm: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1674.
    return v5;
}

// Generated as internal constructor for term pulley_xconst16.
pub fn constructor_pulley_xconst16<C: Context>(
    ctx: &mut C,
    arg0: i16,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xconst16 {
        dst: v1,
        imm: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1681.
    return v5;
}

// Generated as internal constructor for term pulley_xconst32.
pub fn constructor_pulley_xconst32<C: Context>(
    ctx: &mut C,
    arg0: i32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xconst32 {
        dst: v1,
        imm: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1688.
    return v5;
}

// Generated as internal constructor for term pulley_xconst64.
pub fn constructor_pulley_xconst64<C: Context>(
    ctx: &mut C,
    arg0: i64,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xconst64 {
        dst: v1,
        imm: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1695.
    return v5;
}

// Generated as internal constructor for term pulley_xadd32.
pub fn constructor_pulley_xadd32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xadd32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1702.
    return v6;
}

// Generated as internal constructor for term pulley_xadd32_u8.
pub fn constructor_pulley_xadd32_u8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xadd32U8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1709.
    return v6;
}

// Generated as internal constructor for term pulley_xadd32_u32.
pub fn constructor_pulley_xadd32_u32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xadd32U32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1716.
    return v6;
}

// Generated as internal constructor for term pulley_xadd64.
pub fn constructor_pulley_xadd64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xadd64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1723.
    return v6;
}

// Generated as internal constructor for term pulley_xadd64_u8.
pub fn constructor_pulley_xadd64_u8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xadd64U8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1730.
    return v6;
}

// Generated as internal constructor for term pulley_xadd64_u32.
pub fn constructor_pulley_xadd64_u32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xadd64U32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1737.
    return v6;
}

// Generated as internal constructor for term pulley_xmadd32.
pub fn constructor_pulley_xmadd32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: XReg,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::Xmadd32 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        src3: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1744.
    return v7;
}

// Generated as internal constructor for term pulley_xmadd64.
pub fn constructor_pulley_xmadd64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: XReg,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::Xmadd64 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        src3: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1751.
    return v7;
}

// Generated as internal constructor for term pulley_xsub32.
pub fn constructor_pulley_xsub32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xsub32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1758.
    return v6;
}

// Generated as internal constructor for term pulley_xsub32_u8.
pub fn constructor_pulley_xsub32_u8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xsub32U8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1765.
    return v6;
}

// Generated as internal constructor for term pulley_xsub32_u32.
pub fn constructor_pulley_xsub32_u32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xsub32U32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1772.
    return v6;
}

// Generated as internal constructor for term pulley_xsub64.
pub fn constructor_pulley_xsub64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xsub64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1779.
    return v6;
}

// Generated as internal constructor for term pulley_xsub64_u8.
pub fn constructor_pulley_xsub64_u8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xsub64U8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1786.
    return v6;
}

// Generated as internal constructor for term pulley_xsub64_u32.
pub fn constructor_pulley_xsub64_u32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xsub64U32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1793.
    return v6;
}

// Generated as internal constructor for term pulley_xmul32.
pub fn constructor_pulley_xmul32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XMul32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1800.
    return v6;
}

// Generated as internal constructor for term pulley_xmul32_s8.
pub fn constructor_pulley_xmul32_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmul32S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1807.
    return v6;
}

// Generated as internal constructor for term pulley_xmul32_s32.
pub fn constructor_pulley_xmul32_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmul32S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1814.
    return v6;
}

// Generated as internal constructor for term pulley_xmul64.
pub fn constructor_pulley_xmul64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XMul64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1821.
    return v6;
}

// Generated as internal constructor for term pulley_xmul64_s8.
pub fn constructor_pulley_xmul64_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmul64S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1828.
    return v6;
}

// Generated as internal constructor for term pulley_xmul64_s32.
pub fn constructor_pulley_xmul64_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmul64S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1835.
    return v6;
}

// Generated as internal constructor for term pulley_xctz32.
pub fn constructor_pulley_xctz32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xctz32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1842.
    return v5;
}

// Generated as internal constructor for term pulley_xctz64.
pub fn constructor_pulley_xctz64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xctz64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1849.
    return v5;
}

// Generated as internal constructor for term pulley_xclz32.
pub fn constructor_pulley_xclz32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xclz32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1856.
    return v5;
}

// Generated as internal constructor for term pulley_xclz64.
pub fn constructor_pulley_xclz64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xclz64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1863.
    return v5;
}

// Generated as internal constructor for term pulley_xpopcnt32.
pub fn constructor_pulley_xpopcnt32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xpopcnt32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1870.
    return v5;
}

// Generated as internal constructor for term pulley_xpopcnt64.
pub fn constructor_pulley_xpopcnt64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xpopcnt64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1877.
    return v5;
}

// Generated as internal constructor for term pulley_xrotl32.
pub fn constructor_pulley_xrotl32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xrotl32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1884.
    return v6;
}

// Generated as internal constructor for term pulley_xrotl64.
pub fn constructor_pulley_xrotl64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xrotl64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1891.
    return v6;
}

// Generated as internal constructor for term pulley_xrotr32.
pub fn constructor_pulley_xrotr32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xrotr32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1898.
    return v6;
}

// Generated as internal constructor for term pulley_xrotr64.
pub fn constructor_pulley_xrotr64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xrotr64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1905.
    return v6;
}

// Generated as internal constructor for term pulley_xshl32.
pub fn constructor_pulley_xshl32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshl32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1912.
    return v6;
}

// Generated as internal constructor for term pulley_xshr32_s.
pub fn constructor_pulley_xshr32_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr32S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1919.
    return v6;
}

// Generated as internal constructor for term pulley_xshr32_u.
pub fn constructor_pulley_xshr32_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr32U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1926.
    return v6;
}

// Generated as internal constructor for term pulley_xshl64.
pub fn constructor_pulley_xshl64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshl64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1933.
    return v6;
}

// Generated as internal constructor for term pulley_xshr64_s.
pub fn constructor_pulley_xshr64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr64S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1940.
    return v6;
}

// Generated as internal constructor for term pulley_xshr64_u.
pub fn constructor_pulley_xshr64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr64U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1947.
    return v6;
}

// Generated as internal constructor for term pulley_xshl32_u6.
pub fn constructor_pulley_xshl32_u6<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: U6,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshl32U6 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1954.
    return v6;
}

// Generated as internal constructor for term pulley_xshr32_s_u6.
pub fn constructor_pulley_xshr32_s_u6<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: U6,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr32SU6 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1961.
    return v6;
}

// Generated as internal constructor for term pulley_xshr32_u_u6.
pub fn constructor_pulley_xshr32_u_u6<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: U6,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr32UU6 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1968.
    return v6;
}

// Generated as internal constructor for term pulley_xshl64_u6.
pub fn constructor_pulley_xshl64_u6<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: U6,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshl64U6 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1975.
    return v6;
}

// Generated as internal constructor for term pulley_xshr64_s_u6.
pub fn constructor_pulley_xshr64_s_u6<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: U6,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr64SU6 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1982.
    return v6;
}

// Generated as internal constructor for term pulley_xshr64_u_u6.
pub fn constructor_pulley_xshr64_u_u6<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: U6,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr64UU6 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1989.
    return v6;
}

// Generated as internal constructor for term pulley_xneg32.
pub fn constructor_pulley_xneg32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xneg32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 1996.
    return v5;
}

// Generated as internal constructor for term pulley_xneg64.
pub fn constructor_pulley_xneg64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xneg64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2003.
    return v5;
}

// Generated as internal constructor for term pulley_xeq64.
pub fn constructor_pulley_xeq64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xeq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2010.
    return v6;
}

// Generated as internal constructor for term pulley_xneq64.
pub fn constructor_pulley_xneq64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xneq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2017.
    return v6;
}

// Generated as internal constructor for term pulley_xslt64.
pub fn constructor_pulley_xslt64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xslt64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2024.
    return v6;
}

// Generated as internal constructor for term pulley_xslteq64.
pub fn constructor_pulley_xslteq64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xslteq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2031.
    return v6;
}

// Generated as internal constructor for term pulley_xult64.
pub fn constructor_pulley_xult64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xult64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2038.
    return v6;
}

// Generated as internal constructor for term pulley_xulteq64.
pub fn constructor_pulley_xulteq64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xulteq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2045.
    return v6;
}

// Generated as internal constructor for term pulley_xeq32.
pub fn constructor_pulley_xeq32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xeq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2052.
    return v6;
}

// Generated as internal constructor for term pulley_xneq32.
pub fn constructor_pulley_xneq32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xneq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2059.
    return v6;
}

// Generated as internal constructor for term pulley_xslt32.
pub fn constructor_pulley_xslt32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xslt32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2066.
    return v6;
}

// Generated as internal constructor for term pulley_xslteq32.
pub fn constructor_pulley_xslteq32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xslteq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2073.
    return v6;
}

// Generated as internal constructor for term pulley_xult32.
pub fn constructor_pulley_xult32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xult32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2080.
    return v6;
}

// Generated as internal constructor for term pulley_xulteq32.
pub fn constructor_pulley_xulteq32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xulteq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2087.
    return v6;
}

// Generated as internal constructor for term pulley_xload8_u32_o32.
pub fn constructor_pulley_xload8_u32_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad8U32O32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2094.
    return v5;
}

// Generated as internal constructor for term pulley_xload8_s32_o32.
pub fn constructor_pulley_xload8_s32_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad8S32O32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2101.
    return v5;
}

// Generated as internal constructor for term pulley_xload16le_u32_o32.
pub fn constructor_pulley_xload16le_u32_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad16LeU32O32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2108.
    return v5;
}

// Generated as internal constructor for term pulley_xload16le_s32_o32.
pub fn constructor_pulley_xload16le_s32_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad16LeS32O32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2115.
    return v5;
}

// Generated as internal constructor for term pulley_xload32le_o32.
pub fn constructor_pulley_xload32le_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad32LeO32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2122.
    return v5;
}

// Generated as internal constructor for term pulley_xload64le_o32.
pub fn constructor_pulley_xload64le_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad64LeO32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2129.
    return v5;
}

// Generated as internal constructor for term pulley_xstore8_o32.
pub fn constructor_pulley_xstore8_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore8O32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2136.
    return v4;
}

// Generated as internal constructor for term pulley_xstore16le_o32.
pub fn constructor_pulley_xstore16le_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore16LeO32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2138.
    return v4;
}

// Generated as internal constructor for term pulley_xstore32le_o32.
pub fn constructor_pulley_xstore32le_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore32LeO32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2140.
    return v4;
}

// Generated as internal constructor for term pulley_xstore64le_o32.
pub fn constructor_pulley_xstore64le_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore64LeO32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2142.
    return v4;
}

// Generated as internal constructor for term pulley_xload8_u32_z.
pub fn constructor_pulley_xload8_u32_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad8U32Z {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2144.
    return v5;
}

// Generated as internal constructor for term pulley_xload8_s32_z.
pub fn constructor_pulley_xload8_s32_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad8S32Z {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2151.
    return v5;
}

// Generated as internal constructor for term pulley_xload16le_u32_z.
pub fn constructor_pulley_xload16le_u32_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad16LeU32Z {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2158.
    return v5;
}

// Generated as internal constructor for term pulley_xload16le_s32_z.
pub fn constructor_pulley_xload16le_s32_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad16LeS32Z {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2165.
    return v5;
}

// Generated as internal constructor for term pulley_xload32le_z.
pub fn constructor_pulley_xload32le_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad32LeZ {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2172.
    return v5;
}

// Generated as internal constructor for term pulley_xload64le_z.
pub fn constructor_pulley_xload64le_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad64LeZ {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2179.
    return v5;
}

// Generated as internal constructor for term pulley_xstore8_z.
pub fn constructor_pulley_xstore8_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore8Z {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2186.
    return v4;
}

// Generated as internal constructor for term pulley_xstore16le_z.
pub fn constructor_pulley_xstore16le_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore16LeZ {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2188.
    return v4;
}

// Generated as internal constructor for term pulley_xstore32le_z.
pub fn constructor_pulley_xstore32le_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore32LeZ {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2190.
    return v4;
}

// Generated as internal constructor for term pulley_xstore64le_z.
pub fn constructor_pulley_xstore64le_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore64LeZ {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2192.
    return v4;
}

// Generated as internal constructor for term pulley_xload8_u32_g32.
pub fn constructor_pulley_xload8_u32_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad8U32G32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2194.
    return v5;
}

// Generated as internal constructor for term pulley_xload8_s32_g32.
pub fn constructor_pulley_xload8_s32_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad8S32G32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2201.
    return v5;
}

// Generated as internal constructor for term pulley_xload16le_u32_g32.
pub fn constructor_pulley_xload16le_u32_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad16LeU32G32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2208.
    return v5;
}

// Generated as internal constructor for term pulley_xload16le_s32_g32.
pub fn constructor_pulley_xload16le_s32_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad16LeS32G32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2215.
    return v5;
}

// Generated as internal constructor for term pulley_xload32le_g32.
pub fn constructor_pulley_xload32le_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad32LeG32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2222.
    return v5;
}

// Generated as internal constructor for term pulley_xload64le_g32.
pub fn constructor_pulley_xload64le_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad64LeG32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2229.
    return v5;
}

// Generated as internal constructor for term pulley_xstore8_g32.
pub fn constructor_pulley_xstore8_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore8G32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2236.
    return v4;
}

// Generated as internal constructor for term pulley_xstore16le_g32.
pub fn constructor_pulley_xstore16le_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore16LeG32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2238.
    return v4;
}

// Generated as internal constructor for term pulley_xstore32le_g32.
pub fn constructor_pulley_xstore32le_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore32LeG32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2240.
    return v4;
}

// Generated as internal constructor for term pulley_xstore64le_g32.
pub fn constructor_pulley_xstore64le_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore64LeG32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2242.
    return v4;
}

// Generated as internal constructor for term pulley_xload8_u32_g32bne.
pub fn constructor_pulley_xload8_u32_g32bne<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32Bne,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad8U32G32Bne {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2244.
    return v5;
}

// Generated as internal constructor for term pulley_xload8_s32_g32bne.
pub fn constructor_pulley_xload8_s32_g32bne<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32Bne,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad8S32G32Bne {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2251.
    return v5;
}

// Generated as internal constructor for term pulley_xload16le_u32_g32bne.
pub fn constructor_pulley_xload16le_u32_g32bne<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32Bne,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad16LeU32G32Bne {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2258.
    return v5;
}

// Generated as internal constructor for term pulley_xload16le_s32_g32bne.
pub fn constructor_pulley_xload16le_s32_g32bne<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32Bne,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad16LeS32G32Bne {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2265.
    return v5;
}

// Generated as internal constructor for term pulley_xload32le_g32bne.
pub fn constructor_pulley_xload32le_g32bne<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32Bne,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad32LeG32Bne {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2272.
    return v5;
}

// Generated as internal constructor for term pulley_xload64le_g32bne.
pub fn constructor_pulley_xload64le_g32bne<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32Bne,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad64LeG32Bne {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2279.
    return v5;
}

// Generated as internal constructor for term pulley_xstore8_g32bne.
pub fn constructor_pulley_xstore8_g32bne<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32Bne,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore8G32Bne {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2286.
    return v4;
}

// Generated as internal constructor for term pulley_xstore16le_g32bne.
pub fn constructor_pulley_xstore16le_g32bne<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32Bne,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore16LeG32Bne {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2288.
    return v4;
}

// Generated as internal constructor for term pulley_xstore32le_g32bne.
pub fn constructor_pulley_xstore32le_g32bne<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32Bne,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore32LeG32Bne {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2290.
    return v4;
}

// Generated as internal constructor for term pulley_xstore64le_g32bne.
pub fn constructor_pulley_xstore64le_g32bne<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32Bne,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore64LeG32Bne {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2292.
    return v4;
}

// Generated as internal constructor for term pulley_push_frame.
pub fn constructor_pulley_push_frame<C: Context>(
    ctx: &mut C,
) -> SideEffectNoResult {
    let v1 = &constructor_raw_inst_to_inst(ctx, &RawInst::PushFrame);
    let v2 = SideEffectNoResult::Inst {
        inst: v1.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2294.
    return v2;
}

// Generated as internal constructor for term pulley_pop_frame.
pub fn constructor_pulley_pop_frame<C: Context>(
    ctx: &mut C,
) -> SideEffectNoResult {
    let v1 = &constructor_raw_inst_to_inst(ctx, &RawInst::PopFrame);
    let v2 = SideEffectNoResult::Inst {
        inst: v1.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2296.
    return v2;
}

// Generated as internal constructor for term pulley_push_frame_save.
pub fn constructor_pulley_push_frame_save<C: Context>(
    ctx: &mut C,
    arg0: u16,
    arg1: UpperXRegSet,
) -> SideEffectNoResult {
    let v2 = RawInst::PushFrameSave {
        amt: arg0,
        regs: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2298.
    return v4;
}

// Generated as internal constructor for term pulley_pop_frame_restore.
pub fn constructor_pulley_pop_frame_restore<C: Context>(
    ctx: &mut C,
    arg0: u16,
    arg1: UpperXRegSet,
) -> SideEffectNoResult {
    let v2 = RawInst::PopFrameRestore {
        amt: arg0,
        regs: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2300.
    return v4;
}

// Generated as internal constructor for term pulley_stack_alloc32.
pub fn constructor_pulley_stack_alloc32<C: Context>(
    ctx: &mut C,
    arg0: u32,
) -> SideEffectNoResult {
    let v1 = RawInst::StackAlloc32 {
        amt: arg0,
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = SideEffectNoResult::Inst {
        inst: v2.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2302.
    return v3;
}

// Generated as internal constructor for term pulley_stack_free32.
pub fn constructor_pulley_stack_free32<C: Context>(
    ctx: &mut C,
    arg0: u32,
) -> SideEffectNoResult {
    let v1 = RawInst::StackFree32 {
        amt: arg0,
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = SideEffectNoResult::Inst {
        inst: v2.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2304.
    return v3;
}

// Generated as internal constructor for term pulley_zext8.
pub fn constructor_pulley_zext8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Zext8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2306.
    return v5;
}

// Generated as internal constructor for term pulley_zext16.
pub fn constructor_pulley_zext16<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Zext16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2313.
    return v5;
}

// Generated as internal constructor for term pulley_zext32.
pub fn constructor_pulley_zext32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Zext32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2320.
    return v5;
}

// Generated as internal constructor for term pulley_sext8.
pub fn constructor_pulley_sext8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Sext8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2327.
    return v5;
}

// Generated as internal constructor for term pulley_sext16.
pub fn constructor_pulley_sext16<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Sext16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2334.
    return v5;
}

// Generated as internal constructor for term pulley_sext32.
pub fn constructor_pulley_sext32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Sext32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2341.
    return v5;
}

// Generated as internal constructor for term pulley_xabs32.
pub fn constructor_pulley_xabs32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XAbs32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2348.
    return v5;
}

// Generated as internal constructor for term pulley_xabs64.
pub fn constructor_pulley_xabs64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XAbs64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2355.
    return v5;
}

// Generated as internal constructor for term pulley_xdiv32_s.
pub fn constructor_pulley_xdiv32_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XDiv32S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2362.
    return v6;
}

// Generated as internal constructor for term pulley_xdiv64_s.
pub fn constructor_pulley_xdiv64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XDiv64S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2369.
    return v6;
}

// Generated as internal constructor for term pulley_xdiv32_u.
pub fn constructor_pulley_xdiv32_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XDiv32U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2376.
    return v6;
}

// Generated as internal constructor for term pulley_xdiv64_u.
pub fn constructor_pulley_xdiv64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XDiv64U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2383.
    return v6;
}

// Generated as internal constructor for term pulley_xrem32_s.
pub fn constructor_pulley_xrem32_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XRem32S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2390.
    return v6;
}

// Generated as internal constructor for term pulley_xrem64_s.
pub fn constructor_pulley_xrem64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XRem64S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2397.
    return v6;
}

// Generated as internal constructor for term pulley_xrem32_u.
pub fn constructor_pulley_xrem32_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XRem32U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2404.
    return v6;
}

// Generated as internal constructor for term pulley_xrem64_u.
pub fn constructor_pulley_xrem64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XRem64U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2411.
    return v6;
}

// Generated as internal constructor for term pulley_xband32.
pub fn constructor_pulley_xband32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBand32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2418.
    return v6;
}

// Generated as internal constructor for term pulley_xband32_s8.
pub fn constructor_pulley_xband32_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xband32S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2425.
    return v6;
}

// Generated as internal constructor for term pulley_xband32_s32.
pub fn constructor_pulley_xband32_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xband32S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2432.
    return v6;
}

// Generated as internal constructor for term pulley_xband64.
pub fn constructor_pulley_xband64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBand64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2439.
    return v6;
}

// Generated as internal constructor for term pulley_xband64_s8.
pub fn constructor_pulley_xband64_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xband64S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2446.
    return v6;
}

// Generated as internal constructor for term pulley_xband64_s32.
pub fn constructor_pulley_xband64_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xband64S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2453.
    return v6;
}

// Generated as internal constructor for term pulley_xbor32.
pub fn constructor_pulley_xbor32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBor32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2460.
    return v6;
}

// Generated as internal constructor for term pulley_xbor32_s8.
pub fn constructor_pulley_xbor32_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbor32S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2467.
    return v6;
}

// Generated as internal constructor for term pulley_xbor32_s32.
pub fn constructor_pulley_xbor32_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbor32S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2474.
    return v6;
}

// Generated as internal constructor for term pulley_xbor64.
pub fn constructor_pulley_xbor64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBor64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2481.
    return v6;
}

// Generated as internal constructor for term pulley_xbor64_s8.
pub fn constructor_pulley_xbor64_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbor64S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2488.
    return v6;
}

// Generated as internal constructor for term pulley_xbor64_s32.
pub fn constructor_pulley_xbor64_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbor64S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2495.
    return v6;
}

// Generated as internal constructor for term pulley_xbxor32.
pub fn constructor_pulley_xbxor32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBxor32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2502.
    return v6;
}

// Generated as internal constructor for term pulley_xbxor32_s8.
pub fn constructor_pulley_xbxor32_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbxor32S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2509.
    return v6;
}

// Generated as internal constructor for term pulley_xbxor32_s32.
pub fn constructor_pulley_xbxor32_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbxor32S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2516.
    return v6;
}

// Generated as internal constructor for term pulley_xbxor64.
pub fn constructor_pulley_xbxor64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBxor64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2523.
    return v6;
}

// Generated as internal constructor for term pulley_xbxor64_s8.
pub fn constructor_pulley_xbxor64_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbxor64S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2530.
    return v6;
}

// Generated as internal constructor for term pulley_xbxor64_s32.
pub fn constructor_pulley_xbxor64_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbxor64S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2537.
    return v6;
}

// Generated as internal constructor for term pulley_xbnot32.
pub fn constructor_pulley_xbnot32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XBnot32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2544.
    return v5;
}

// Generated as internal constructor for term pulley_xbnot64.
pub fn constructor_pulley_xbnot64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XBnot64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2551.
    return v5;
}

// Generated as internal constructor for term pulley_xmin32_u.
pub fn constructor_pulley_xmin32_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmin32U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2558.
    return v6;
}

// Generated as internal constructor for term pulley_xmin32_s.
pub fn constructor_pulley_xmin32_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmin32S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2565.
    return v6;
}

// Generated as internal constructor for term pulley_xmax32_u.
pub fn constructor_pulley_xmax32_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmax32U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2572.
    return v6;
}

// Generated as internal constructor for term pulley_xmax32_s.
pub fn constructor_pulley_xmax32_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmax32S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2579.
    return v6;
}

// Generated as internal constructor for term pulley_xmin64_u.
pub fn constructor_pulley_xmin64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmin64U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2586.
    return v6;
}

// Generated as internal constructor for term pulley_xmin64_s.
pub fn constructor_pulley_xmin64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmin64S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2593.
    return v6;
}

// Generated as internal constructor for term pulley_xmax64_u.
pub fn constructor_pulley_xmax64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmax64U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2600.
    return v6;
}

// Generated as internal constructor for term pulley_xmax64_s.
pub fn constructor_pulley_xmax64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmax64S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2607.
    return v6;
}

// Generated as internal constructor for term pulley_xselect32.
pub fn constructor_pulley_xselect32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: XReg,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::XSelect32 {
        dst: v3,
        cond: arg0,
        if_nonzero: arg1,
        if_zero: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2614.
    return v7;
}

// Generated as internal constructor for term pulley_xselect64.
pub fn constructor_pulley_xselect64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: XReg,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::XSelect64 {
        dst: v3,
        cond: arg0,
        if_nonzero: arg1,
        if_zero: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2621.
    return v7;
}

// Generated as internal constructor for term pulley_trap.
pub fn constructor_pulley_trap<C: Context>(
    ctx: &mut C,
    arg0: &TrapCode,
) -> SideEffectNoResult {
    let v1 = RawInst::Trap {
        code: arg0.clone(),
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = SideEffectNoResult::Inst {
        inst: v2.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2628.
    return v3;
}

// Generated as internal constructor for term pulley_nop.
pub fn constructor_pulley_nop<C: Context>(
    ctx: &mut C,
) -> SideEffectNoResult {
    let v1 = &constructor_raw_inst_to_inst(ctx, &RawInst::Nop);
    let v2 = SideEffectNoResult::Inst {
        inst: v1.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2630.
    return v2;
}

// Generated as internal constructor for term pulley_xmov_fp.
pub fn constructor_pulley_xmov_fp<C: Context>(
    ctx: &mut C,
) -> XReg {
    let v0 = constructor_temp_writable_xreg(ctx);
    let v1 = RawInst::XmovFp {
        dst: v0,
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = C::emit(ctx, v2);
    let v4 = C::writable_xreg_to_xreg(ctx, v0);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2632.
    return v4;
}

// Generated as internal constructor for term pulley_xmov_lr.
pub fn constructor_pulley_xmov_lr<C: Context>(
    ctx: &mut C,
) -> XReg {
    let v0 = constructor_temp_writable_xreg(ctx);
    let v1 = RawInst::XmovLr {
        dst: v0,
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = C::emit(ctx, v2);
    let v4 = C::writable_xreg_to_xreg(ctx, v0);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2639.
    return v4;
}

// Generated as internal constructor for term pulley_bswap32.
pub fn constructor_pulley_bswap32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Bswap32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2646.
    return v5;
}

// Generated as internal constructor for term pulley_bswap64.
pub fn constructor_pulley_bswap64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Bswap64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2653.
    return v5;
}

// Generated as internal constructor for term pulley_xadd32_uoverflow_trap.
pub fn constructor_pulley_xadd32_uoverflow_trap<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: &TrapCode,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::Xadd32UoverflowTrap {
        dst: v3,
        src1: arg0,
        src2: arg1,
        code: arg2.clone(),
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2660.
    return v7;
}

// Generated as internal constructor for term pulley_xadd64_uoverflow_trap.
pub fn constructor_pulley_xadd64_uoverflow_trap<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: &TrapCode,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::Xadd64UoverflowTrap {
        dst: v3,
        src1: arg0,
        src2: arg1,
        code: arg2.clone(),
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2667.
    return v7;
}

// Generated as internal constructor for term pulley_xmulhi64_s.
pub fn constructor_pulley_xmulhi64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XMulHi64S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2674.
    return v6;
}

// Generated as internal constructor for term pulley_xmulhi64_u.
pub fn constructor_pulley_xmulhi64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XMulHi64U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2681.
    return v6;
}

// Generated as internal constructor for term pulley_xbmask32.
pub fn constructor_pulley_xbmask32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xbmask32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2688.
    return v5;
}

// Generated as internal constructor for term pulley_xbmask64.
pub fn constructor_pulley_xbmask64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xbmask64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2695.
    return v5;
}

// Generated as internal constructor for term pulley_xload16be_u32_o32.
pub fn constructor_pulley_xload16be_u32_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad16BeU32O32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2702.
    return v5;
}

// Generated as internal constructor for term pulley_xload16be_s32_o32.
pub fn constructor_pulley_xload16be_s32_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad16BeS32O32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2709.
    return v5;
}

// Generated as internal constructor for term pulley_xload32be_o32.
pub fn constructor_pulley_xload32be_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad32BeO32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2716.
    return v5;
}

// Generated as internal constructor for term pulley_xload64be_o32.
pub fn constructor_pulley_xload64be_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XLoad64BeO32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2723.
    return v5;
}

// Generated as internal constructor for term pulley_xstore16be_o32.
pub fn constructor_pulley_xstore16be_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore16BeO32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2730.
    return v4;
}

// Generated as internal constructor for term pulley_xstore32be_o32.
pub fn constructor_pulley_xstore32be_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore32BeO32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2732.
    return v4;
}

// Generated as internal constructor for term pulley_xstore64be_o32.
pub fn constructor_pulley_xstore64be_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
    arg1: XReg,
) -> SideEffectNoResult {
    let v2 = RawInst::XStore64BeO32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2734.
    return v4;
}

// Generated as internal constructor for term pulley_fload32be_o32.
pub fn constructor_pulley_fload32be_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fload32BeO32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2736.
    return v5;
}

// Generated as internal constructor for term pulley_fload64be_o32.
pub fn constructor_pulley_fload64be_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fload64BeO32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2743.
    return v5;
}

// Generated as internal constructor for term pulley_fstore32be_o32.
pub fn constructor_pulley_fstore32be_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
    arg1: FReg,
) -> SideEffectNoResult {
    let v2 = RawInst::Fstore32BeO32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2750.
    return v4;
}

// Generated as internal constructor for term pulley_fstore64be_o32.
pub fn constructor_pulley_fstore64be_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
    arg1: FReg,
) -> SideEffectNoResult {
    let v2 = RawInst::Fstore64BeO32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2752.
    return v4;
}

// Generated as internal constructor for term pulley_fload32le_o32.
pub fn constructor_pulley_fload32le_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fload32LeO32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2754.
    return v5;
}

// Generated as internal constructor for term pulley_fload64le_o32.
pub fn constructor_pulley_fload64le_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fload64LeO32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2761.
    return v5;
}

// Generated as internal constructor for term pulley_fstore32le_o32.
pub fn constructor_pulley_fstore32le_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
    arg1: FReg,
) -> SideEffectNoResult {
    let v2 = RawInst::Fstore32LeO32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2768.
    return v4;
}

// Generated as internal constructor for term pulley_fstore64le_o32.
pub fn constructor_pulley_fstore64le_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
    arg1: FReg,
) -> SideEffectNoResult {
    let v2 = RawInst::Fstore64LeO32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2770.
    return v4;
}

// Generated as internal constructor for term pulley_fload32le_z.
pub fn constructor_pulley_fload32le_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fload32LeZ {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2772.
    return v5;
}

// Generated as internal constructor for term pulley_fload64le_z.
pub fn constructor_pulley_fload64le_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fload64LeZ {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2779.
    return v5;
}

// Generated as internal constructor for term pulley_fstore32le_z.
pub fn constructor_pulley_fstore32le_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
    arg1: FReg,
) -> SideEffectNoResult {
    let v2 = RawInst::Fstore32LeZ {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2786.
    return v4;
}

// Generated as internal constructor for term pulley_fstore64le_z.
pub fn constructor_pulley_fstore64le_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
    arg1: FReg,
) -> SideEffectNoResult {
    let v2 = RawInst::Fstore64LeZ {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2788.
    return v4;
}

// Generated as internal constructor for term pulley_fload32le_g32.
pub fn constructor_pulley_fload32le_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fload32LeG32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2790.
    return v5;
}

// Generated as internal constructor for term pulley_fload64le_g32.
pub fn constructor_pulley_fload64le_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fload64LeG32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2797.
    return v5;
}

// Generated as internal constructor for term pulley_fstore32le_g32.
pub fn constructor_pulley_fstore32le_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
    arg1: FReg,
) -> SideEffectNoResult {
    let v2 = RawInst::Fstore32LeG32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2804.
    return v4;
}

// Generated as internal constructor for term pulley_fstore64le_g32.
pub fn constructor_pulley_fstore64le_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
    arg1: FReg,
) -> SideEffectNoResult {
    let v2 = RawInst::Fstore64LeG32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2806.
    return v4;
}

// Generated as internal constructor for term pulley_vload128le_o32.
pub fn constructor_pulley_vload128le_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VLoad128O32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2808.
    return v5;
}

// Generated as internal constructor for term pulley_vstore128le_o32.
pub fn constructor_pulley_vstore128le_o32<C: Context>(
    ctx: &mut C,
    arg0: &AddrO32,
    arg1: VReg,
) -> SideEffectNoResult {
    let v2 = RawInst::Vstore128LeO32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2815.
    return v4;
}

// Generated as internal constructor for term pulley_vload128le_z.
pub fn constructor_pulley_vload128le_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VLoad128Z {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2817.
    return v5;
}

// Generated as internal constructor for term pulley_vstore128le_z.
pub fn constructor_pulley_vstore128le_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
    arg1: VReg,
) -> SideEffectNoResult {
    let v2 = RawInst::Vstore128LeZ {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2824.
    return v4;
}

// Generated as internal constructor for term pulley_vload128le_g32.
pub fn constructor_pulley_vload128le_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VLoad128G32 {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2826.
    return v5;
}

// Generated as internal constructor for term pulley_vstore128le_g32.
pub fn constructor_pulley_vstore128le_g32<C: Context>(
    ctx: &mut C,
    arg0: &AddrG32,
    arg1: VReg,
) -> SideEffectNoResult {
    let v2 = RawInst::Vstore128LeG32 {
        addr: arg0.clone(),
        src: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2833.
    return v4;
}

// Generated as internal constructor for term pulley_fmov.
pub fn constructor_pulley_fmov<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fmov {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2835.
    return v5;
}

// Generated as internal constructor for term pulley_vmov.
pub fn constructor_pulley_vmov<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vmov {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2842.
    return v5;
}

// Generated as internal constructor for term pulley_bitcast_int_from_float_32.
pub fn constructor_pulley_bitcast_int_from_float_32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::BitcastIntFromFloat32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2849.
    return v5;
}

// Generated as internal constructor for term pulley_bitcast_int_from_float_64.
pub fn constructor_pulley_bitcast_int_from_float_64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::BitcastIntFromFloat64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2856.
    return v5;
}

// Generated as internal constructor for term pulley_bitcast_float_from_int_32.
pub fn constructor_pulley_bitcast_float_from_int_32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::BitcastFloatFromInt32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2863.
    return v5;
}

// Generated as internal constructor for term pulley_bitcast_float_from_int_64.
pub fn constructor_pulley_bitcast_float_from_int_64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::BitcastFloatFromInt64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2870.
    return v5;
}

// Generated as internal constructor for term pulley_fconst32.
pub fn constructor_pulley_fconst32<C: Context>(
    ctx: &mut C,
    arg0: u32,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::FConst32 {
        dst: v1,
        bits: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2877.
    return v5;
}

// Generated as internal constructor for term pulley_fconst64.
pub fn constructor_pulley_fconst64<C: Context>(
    ctx: &mut C,
    arg0: u64,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::FConst64 {
        dst: v1,
        bits: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2884.
    return v5;
}

// Generated as internal constructor for term pulley_feq32.
pub fn constructor_pulley_feq32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Feq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2891.
    return v6;
}

// Generated as internal constructor for term pulley_fneq32.
pub fn constructor_pulley_fneq32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Fneq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2898.
    return v6;
}

// Generated as internal constructor for term pulley_flt32.
pub fn constructor_pulley_flt32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Flt32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2905.
    return v6;
}

// Generated as internal constructor for term pulley_flteq32.
pub fn constructor_pulley_flteq32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Flteq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2912.
    return v6;
}

// Generated as internal constructor for term pulley_feq64.
pub fn constructor_pulley_feq64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Feq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2919.
    return v6;
}

// Generated as internal constructor for term pulley_fneq64.
pub fn constructor_pulley_fneq64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Fneq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2926.
    return v6;
}

// Generated as internal constructor for term pulley_flt64.
pub fn constructor_pulley_flt64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Flt64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2933.
    return v6;
}

// Generated as internal constructor for term pulley_flteq64.
pub fn constructor_pulley_flteq64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Flteq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2940.
    return v6;
}

// Generated as internal constructor for term pulley_fselect32.
pub fn constructor_pulley_fselect32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: FReg,
    arg2: FReg,
) -> FReg {
    let v3 = constructor_temp_writable_freg(ctx);
    let v4 = RawInst::FSelect32 {
        dst: v3,
        cond: arg0,
        if_nonzero: arg1,
        if_zero: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_freg_to_freg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2947.
    return v7;
}

// Generated as internal constructor for term pulley_fselect64.
pub fn constructor_pulley_fselect64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: FReg,
    arg2: FReg,
) -> FReg {
    let v3 = constructor_temp_writable_freg(ctx);
    let v4 = RawInst::FSelect64 {
        dst: v3,
        cond: arg0,
        if_nonzero: arg1,
        if_zero: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_freg_to_freg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2954.
    return v7;
}

// Generated as internal constructor for term pulley_f32_from_f64.
pub fn constructor_pulley_f32_from_f64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F32FromF64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2961.
    return v5;
}

// Generated as internal constructor for term pulley_f64_from_f32.
pub fn constructor_pulley_f64_from_f32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F64FromF32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2968.
    return v5;
}

// Generated as internal constructor for term pulley_f32_from_x32_s.
pub fn constructor_pulley_f32_from_x32_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F32FromX32S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2975.
    return v5;
}

// Generated as internal constructor for term pulley_f32_from_x32_u.
pub fn constructor_pulley_f32_from_x32_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F32FromX32U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2982.
    return v5;
}

// Generated as internal constructor for term pulley_f32_from_x64_s.
pub fn constructor_pulley_f32_from_x64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F32FromX64S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2989.
    return v5;
}

// Generated as internal constructor for term pulley_f32_from_x64_u.
pub fn constructor_pulley_f32_from_x64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F32FromX64U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 2996.
    return v5;
}

// Generated as internal constructor for term pulley_f64_from_x32_s.
pub fn constructor_pulley_f64_from_x32_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F64FromX32S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3003.
    return v5;
}

// Generated as internal constructor for term pulley_f64_from_x32_u.
pub fn constructor_pulley_f64_from_x32_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F64FromX32U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3010.
    return v5;
}

// Generated as internal constructor for term pulley_f64_from_x64_s.
pub fn constructor_pulley_f64_from_x64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F64FromX64S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3017.
    return v5;
}

// Generated as internal constructor for term pulley_f64_from_x64_u.
pub fn constructor_pulley_f64_from_x64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F64FromX64U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3024.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f32_s.
pub fn constructor_pulley_x32_from_f32_s<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF32S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3031.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f32_u.
pub fn constructor_pulley_x32_from_f32_u<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF32U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3038.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f64_s.
pub fn constructor_pulley_x32_from_f64_s<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF64S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3045.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f64_u.
pub fn constructor_pulley_x32_from_f64_u<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF64U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3052.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f32_s.
pub fn constructor_pulley_x64_from_f32_s<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF32S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3059.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f32_u.
pub fn constructor_pulley_x64_from_f32_u<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF32U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3066.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f64_s.
pub fn constructor_pulley_x64_from_f64_s<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF64S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3073.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f64_u.
pub fn constructor_pulley_x64_from_f64_u<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF64U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3080.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f32_s_sat.
pub fn constructor_pulley_x32_from_f32_s_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF32SSat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3087.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f32_u_sat.
pub fn constructor_pulley_x32_from_f32_u_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF32USat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3094.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f64_s_sat.
pub fn constructor_pulley_x32_from_f64_s_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF64SSat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3101.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f64_u_sat.
pub fn constructor_pulley_x32_from_f64_u_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF64USat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3108.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f32_s_sat.
pub fn constructor_pulley_x64_from_f32_s_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF32SSat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3115.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f32_u_sat.
pub fn constructor_pulley_x64_from_f32_u_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF32USat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3122.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f64_s_sat.
pub fn constructor_pulley_x64_from_f64_s_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF64SSat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3129.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f64_u_sat.
pub fn constructor_pulley_x64_from_f64_u_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF64USat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3136.
    return v5;
}

// Generated as internal constructor for term pulley_fcopysign32.
pub fn constructor_pulley_fcopysign32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::FCopySign32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3143.
    return v6;
}

// Generated as internal constructor for term pulley_fcopysign64.
pub fn constructor_pulley_fcopysign64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::FCopySign64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3150.
    return v6;
}

// Generated as internal constructor for term pulley_fadd32.
pub fn constructor_pulley_fadd32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fadd32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3157.
    return v6;
}

// Generated as internal constructor for term pulley_fsub32.
pub fn constructor_pulley_fsub32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fsub32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3164.
    return v6;
}

// Generated as internal constructor for term pulley_vsubf32x4.
pub fn constructor_pulley_vsubf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vsubf32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3171.
    return v6;
}

// Generated as internal constructor for term pulley_fmul32.
pub fn constructor_pulley_fmul32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fmul32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3178.
    return v6;
}

// Generated as internal constructor for term pulley_vmulf32x4.
pub fn constructor_pulley_vmulf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmulf32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3185.
    return v6;
}

// Generated as internal constructor for term pulley_fdiv32.
pub fn constructor_pulley_fdiv32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fdiv32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3192.
    return v6;
}

// Generated as internal constructor for term pulley_vdivf32x4.
pub fn constructor_pulley_vdivf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vdivf32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3199.
    return v6;
}

// Generated as internal constructor for term pulley_fmaximum32.
pub fn constructor_pulley_fmaximum32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fmaximum32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3206.
    return v6;
}

// Generated as internal constructor for term pulley_fminimum32.
pub fn constructor_pulley_fminimum32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fminimum32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3213.
    return v6;
}

// Generated as internal constructor for term pulley_ftrunc32.
pub fn constructor_pulley_ftrunc32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Ftrunc32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3220.
    return v5;
}

// Generated as internal constructor for term pulley_vtrunc32x4.
pub fn constructor_pulley_vtrunc32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vtrunc32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3227.
    return v5;
}

// Generated as internal constructor for term pulley_vtrunc64x2.
pub fn constructor_pulley_vtrunc64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vtrunc64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3234.
    return v5;
}

// Generated as internal constructor for term pulley_ffloor32.
pub fn constructor_pulley_ffloor32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Ffloor32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3241.
    return v5;
}

// Generated as internal constructor for term pulley_vfloor32x4.
pub fn constructor_pulley_vfloor32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vfloor32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3248.
    return v5;
}

// Generated as internal constructor for term pulley_vfloor64x2.
pub fn constructor_pulley_vfloor64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vfloor64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3255.
    return v5;
}

// Generated as internal constructor for term pulley_fceil32.
pub fn constructor_pulley_fceil32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fceil32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3262.
    return v5;
}

// Generated as internal constructor for term pulley_vceil32x4.
pub fn constructor_pulley_vceil32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vceil32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3269.
    return v5;
}

// Generated as internal constructor for term pulley_vceil64x2.
pub fn constructor_pulley_vceil64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vceil64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3276.
    return v5;
}

// Generated as internal constructor for term pulley_fnearest32.
pub fn constructor_pulley_fnearest32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fnearest32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3283.
    return v5;
}

// Generated as internal constructor for term pulley_fsqrt32.
pub fn constructor_pulley_fsqrt32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fsqrt32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3290.
    return v5;
}

// Generated as internal constructor for term pulley_vsqrt32x4.
pub fn constructor_pulley_vsqrt32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vsqrt32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3297.
    return v5;
}

// Generated as internal constructor for term pulley_vsqrt64x2.
pub fn constructor_pulley_vsqrt64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vsqrt64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3304.
    return v5;
}

// Generated as internal constructor for term pulley_fneg32.
pub fn constructor_pulley_fneg32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fneg32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3311.
    return v5;
}

// Generated as internal constructor for term pulley_vnegf32x4.
pub fn constructor_pulley_vnegf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vnegf32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3318.
    return v5;
}

// Generated as internal constructor for term pulley_fabs32.
pub fn constructor_pulley_fabs32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fabs32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3325.
    return v5;
}

// Generated as internal constructor for term pulley_fadd64.
pub fn constructor_pulley_fadd64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fadd64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3332.
    return v6;
}

// Generated as internal constructor for term pulley_fsub64.
pub fn constructor_pulley_fsub64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fsub64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3339.
    return v6;
}

// Generated as internal constructor for term pulley_fmul64.
pub fn constructor_pulley_fmul64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fmul64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3346.
    return v6;
}

// Generated as internal constructor for term pulley_fdiv64.
pub fn constructor_pulley_fdiv64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fdiv64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3353.
    return v6;
}

// Generated as internal constructor for term pulley_vdivf64x2.
pub fn constructor_pulley_vdivf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VDivF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3360.
    return v6;
}

// Generated as internal constructor for term pulley_fmaximum64.
pub fn constructor_pulley_fmaximum64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fmaximum64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3367.
    return v6;
}

// Generated as internal constructor for term pulley_fminimum64.
pub fn constructor_pulley_fminimum64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fminimum64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3374.
    return v6;
}

// Generated as internal constructor for term pulley_ftrunc64.
pub fn constructor_pulley_ftrunc64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Ftrunc64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3381.
    return v5;
}

// Generated as internal constructor for term pulley_ffloor64.
pub fn constructor_pulley_ffloor64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Ffloor64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3388.
    return v5;
}

// Generated as internal constructor for term pulley_fceil64.
pub fn constructor_pulley_fceil64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fceil64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3395.
    return v5;
}

// Generated as internal constructor for term pulley_fnearest64.
pub fn constructor_pulley_fnearest64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fnearest64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3402.
    return v5;
}

// Generated as internal constructor for term pulley_vnearest32x4.
pub fn constructor_pulley_vnearest32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vnearest32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3409.
    return v5;
}

// Generated as internal constructor for term pulley_vnearest64x2.
pub fn constructor_pulley_vnearest64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vnearest64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3416.
    return v5;
}

// Generated as internal constructor for term pulley_fsqrt64.
pub fn constructor_pulley_fsqrt64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fsqrt64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3423.
    return v5;
}

// Generated as internal constructor for term pulley_fneg64.
pub fn constructor_pulley_fneg64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fneg64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3430.
    return v5;
}

// Generated as internal constructor for term pulley_fabs64.
pub fn constructor_pulley_fabs64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fabs64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3437.
    return v5;
}

// Generated as internal constructor for term pulley_vconst128.
pub fn constructor_pulley_vconst128<C: Context>(
    ctx: &mut C,
    arg0: u128,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vconst128 {
        dst: v1,
        imm: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3444.
    return v5;
}

// Generated as internal constructor for term pulley_vaddi8x16.
pub fn constructor_pulley_vaddi8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddI8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3451.
    return v6;
}

// Generated as internal constructor for term pulley_vaddi16x8.
pub fn constructor_pulley_vaddi16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddI16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3458.
    return v6;
}

// Generated as internal constructor for term pulley_vaddi32x4.
pub fn constructor_pulley_vaddi32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddI32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3465.
    return v6;
}

// Generated as internal constructor for term pulley_vaddi64x2.
pub fn constructor_pulley_vaddi64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddI64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3472.
    return v6;
}

// Generated as internal constructor for term pulley_vaddf32x4.
pub fn constructor_pulley_vaddf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddF32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3479.
    return v6;
}

// Generated as internal constructor for term pulley_vaddf64x2.
pub fn constructor_pulley_vaddf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3486.
    return v6;
}

// Generated as internal constructor for term pulley_vaddi8x16_sat.
pub fn constructor_pulley_vaddi8x16_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddI8x16Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3493.
    return v6;
}

// Generated as internal constructor for term pulley_vaddu8x16_sat.
pub fn constructor_pulley_vaddu8x16_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddU8x16Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3500.
    return v6;
}

// Generated as internal constructor for term pulley_vaddi16x8_sat.
pub fn constructor_pulley_vaddi16x8_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddI16x8Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3507.
    return v6;
}

// Generated as internal constructor for term pulley_vaddu16x8_sat.
pub fn constructor_pulley_vaddu16x8_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddU16x8Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3514.
    return v6;
}

// Generated as internal constructor for term pulley_vaddpairwisei16x8_s.
pub fn constructor_pulley_vaddpairwisei16x8_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddpairwiseI16x8S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3521.
    return v6;
}

// Generated as internal constructor for term pulley_vaddpairwisei32x4_s.
pub fn constructor_pulley_vaddpairwisei32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddpairwiseI32x4S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3528.
    return v6;
}

// Generated as internal constructor for term pulley_vshli8x16.
pub fn constructor_pulley_vshli8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShlI8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3535.
    return v6;
}

// Generated as internal constructor for term pulley_vshli16x8.
pub fn constructor_pulley_vshli16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShlI16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3542.
    return v6;
}

// Generated as internal constructor for term pulley_vshli32x4.
pub fn constructor_pulley_vshli32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShlI32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3549.
    return v6;
}

// Generated as internal constructor for term pulley_vshli64x2.
pub fn constructor_pulley_vshli64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShlI64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3556.
    return v6;
}

// Generated as internal constructor for term pulley_vshri8x16_s.
pub fn constructor_pulley_vshri8x16_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI8x16S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3563.
    return v6;
}

// Generated as internal constructor for term pulley_vshri16x8_s.
pub fn constructor_pulley_vshri16x8_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI16x8S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3570.
    return v6;
}

// Generated as internal constructor for term pulley_vshri32x4_s.
pub fn constructor_pulley_vshri32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI32x4S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3577.
    return v6;
}

// Generated as internal constructor for term pulley_vshri64x2_s.
pub fn constructor_pulley_vshri64x2_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI64x2S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3584.
    return v6;
}

// Generated as internal constructor for term pulley_vshri8x16_u.
pub fn constructor_pulley_vshri8x16_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI8x16U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3591.
    return v6;
}

// Generated as internal constructor for term pulley_vshri16x8_u.
pub fn constructor_pulley_vshri16x8_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI16x8U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3598.
    return v6;
}

// Generated as internal constructor for term pulley_vshri32x4_u.
pub fn constructor_pulley_vshri32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI32x4U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3605.
    return v6;
}

// Generated as internal constructor for term pulley_vshri64x2_u.
pub fn constructor_pulley_vshri64x2_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI64x2U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3612.
    return v6;
}

// Generated as internal constructor for term pulley_vsplatx8.
pub fn constructor_pulley_vsplatx8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VSplatX8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3619.
    return v5;
}

// Generated as internal constructor for term pulley_vsplatx16.
pub fn constructor_pulley_vsplatx16<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VSplatX16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3626.
    return v5;
}

// Generated as internal constructor for term pulley_vsplatx32.
pub fn constructor_pulley_vsplatx32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VSplatX32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3633.
    return v5;
}

// Generated as internal constructor for term pulley_vsplatx64.
pub fn constructor_pulley_vsplatx64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VSplatX64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3640.
    return v5;
}

// Generated as internal constructor for term pulley_vsplatf32.
pub fn constructor_pulley_vsplatf32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VSplatF32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3647.
    return v5;
}

// Generated as internal constructor for term pulley_vsplatf64.
pub fn constructor_pulley_vsplatf64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VSplatF64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3654.
    return v5;
}

// Generated as internal constructor for term pulley_vload8x8_s_z.
pub fn constructor_pulley_vload8x8_s_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VLoad8x8SZ {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3661.
    return v5;
}

// Generated as internal constructor for term pulley_vload8x8_u_z.
pub fn constructor_pulley_vload8x8_u_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VLoad8x8UZ {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3668.
    return v5;
}

// Generated as internal constructor for term pulley_vload16x4le_s_z.
pub fn constructor_pulley_vload16x4le_s_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VLoad16x4LeSZ {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3675.
    return v5;
}

// Generated as internal constructor for term pulley_vload16x4le_u_z.
pub fn constructor_pulley_vload16x4le_u_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VLoad16x4LeUZ {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3682.
    return v5;
}

// Generated as internal constructor for term pulley_vload32x2le_s_z.
pub fn constructor_pulley_vload32x2le_s_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VLoad32x2LeSZ {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3689.
    return v5;
}

// Generated as internal constructor for term pulley_vload32x2le_u_z.
pub fn constructor_pulley_vload32x2le_u_z<C: Context>(
    ctx: &mut C,
    arg0: &AddrZ,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VLoad32x2LeUZ {
        dst: v1,
        addr: arg0.clone(),
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3696.
    return v5;
}

// Generated as internal constructor for term pulley_vband128.
pub fn constructor_pulley_vband128<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VBand128 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3703.
    return v6;
}

// Generated as internal constructor for term pulley_vbor128.
pub fn constructor_pulley_vbor128<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VBor128 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3710.
    return v6;
}

// Generated as internal constructor for term pulley_vbxor128.
pub fn constructor_pulley_vbxor128<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VBxor128 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3717.
    return v6;
}

// Generated as internal constructor for term pulley_vbnot128.
pub fn constructor_pulley_vbnot128<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VBnot128 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3724.
    return v5;
}

// Generated as internal constructor for term pulley_vbitselect128.
pub fn constructor_pulley_vbitselect128<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
    arg2: VReg,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VBitselect128 {
        dst: v3,
        c: arg0,
        x: arg1,
        y: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3731.
    return v7;
}

// Generated as internal constructor for term pulley_vbitmask8x16.
pub fn constructor_pulley_vbitmask8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vbitmask8x16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3738.
    return v5;
}

// Generated as internal constructor for term pulley_vbitmask16x8.
pub fn constructor_pulley_vbitmask16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vbitmask16x8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3745.
    return v5;
}

// Generated as internal constructor for term pulley_vbitmask32x4.
pub fn constructor_pulley_vbitmask32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vbitmask32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3752.
    return v5;
}

// Generated as internal constructor for term pulley_vbitmask64x2.
pub fn constructor_pulley_vbitmask64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vbitmask64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3759.
    return v5;
}

// Generated as internal constructor for term pulley_valltrue8x16.
pub fn constructor_pulley_valltrue8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Valltrue8x16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3766.
    return v5;
}

// Generated as internal constructor for term pulley_valltrue16x8.
pub fn constructor_pulley_valltrue16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Valltrue16x8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3773.
    return v5;
}

// Generated as internal constructor for term pulley_valltrue32x4.
pub fn constructor_pulley_valltrue32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Valltrue32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3780.
    return v5;
}

// Generated as internal constructor for term pulley_valltrue64x2.
pub fn constructor_pulley_valltrue64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Valltrue64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3787.
    return v5;
}

// Generated as internal constructor for term pulley_vanytrue8x16.
pub fn constructor_pulley_vanytrue8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vanytrue8x16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3794.
    return v5;
}

// Generated as internal constructor for term pulley_vanytrue16x8.
pub fn constructor_pulley_vanytrue16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vanytrue16x8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3801.
    return v5;
}

// Generated as internal constructor for term pulley_vanytrue32x4.
pub fn constructor_pulley_vanytrue32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vanytrue32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3808.
    return v5;
}

// Generated as internal constructor for term pulley_vanytrue64x2.
pub fn constructor_pulley_vanytrue64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vanytrue64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3815.
    return v5;
}

// Generated as internal constructor for term pulley_vf32x4_from_i32x4_s.
pub fn constructor_pulley_vf32x4_from_i32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VF32x4FromI32x4S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3822.
    return v5;
}

// Generated as internal constructor for term pulley_vf32x4_from_i32x4_u.
pub fn constructor_pulley_vf32x4_from_i32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VF32x4FromI32x4U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3829.
    return v5;
}

// Generated as internal constructor for term pulley_vf64x2_from_i64x2_s.
pub fn constructor_pulley_vf64x2_from_i64x2_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VF64x2FromI64x2S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3836.
    return v5;
}

// Generated as internal constructor for term pulley_vf64x2_from_i64x2_u.
pub fn constructor_pulley_vf64x2_from_i64x2_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VF64x2FromI64x2U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3843.
    return v5;
}

// Generated as internal constructor for term pulley_vi32x4_from_f32x4_s.
pub fn constructor_pulley_vi32x4_from_f32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VI32x4FromF32x4S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3850.
    return v5;
}

// Generated as internal constructor for term pulley_vi32x4_from_f32x4_u.
pub fn constructor_pulley_vi32x4_from_f32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VI32x4FromF32x4U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3857.
    return v5;
}

// Generated as internal constructor for term pulley_vi64x2_from_f64x2_s.
pub fn constructor_pulley_vi64x2_from_f64x2_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VI64x2FromF64x2S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3864.
    return v5;
}

// Generated as internal constructor for term pulley_vi64x2_from_f64x2_u.
pub fn constructor_pulley_vi64x2_from_f64x2_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VI64x2FromF64x2U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3871.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenlow8x16_s.
pub fn constructor_pulley_vwidenlow8x16_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenLow8x16S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3878.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenlow8x16_u.
pub fn constructor_pulley_vwidenlow8x16_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenLow8x16U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3885.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenlow16x8_s.
pub fn constructor_pulley_vwidenlow16x8_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenLow16x8S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3892.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenlow16x8_u.
pub fn constructor_pulley_vwidenlow16x8_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenLow16x8U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3899.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenlow32x4_s.
pub fn constructor_pulley_vwidenlow32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenLow32x4S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3906.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenlow32x4_u.
pub fn constructor_pulley_vwidenlow32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenLow32x4U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3913.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenhigh8x16_s.
pub fn constructor_pulley_vwidenhigh8x16_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenHigh8x16S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3920.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenhigh8x16_u.
pub fn constructor_pulley_vwidenhigh8x16_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenHigh8x16U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3927.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenhigh16x8_s.
pub fn constructor_pulley_vwidenhigh16x8_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenHigh16x8S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3934.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenhigh16x8_u.
pub fn constructor_pulley_vwidenhigh16x8_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenHigh16x8U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3941.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenhigh32x4_s.
pub fn constructor_pulley_vwidenhigh32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenHigh32x4S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3948.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenhigh32x4_u.
pub fn constructor_pulley_vwidenhigh32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenHigh32x4U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3955.
    return v5;
}

// Generated as internal constructor for term pulley_vnarrow16x8_s.
pub fn constructor_pulley_vnarrow16x8_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vnarrow16x8S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3962.
    return v6;
}

// Generated as internal constructor for term pulley_vnarrow16x8_u.
pub fn constructor_pulley_vnarrow16x8_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vnarrow16x8U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3969.
    return v6;
}

// Generated as internal constructor for term pulley_vnarrow32x4_s.
pub fn constructor_pulley_vnarrow32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vnarrow32x4S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3976.
    return v6;
}

// Generated as internal constructor for term pulley_vnarrow32x4_u.
pub fn constructor_pulley_vnarrow32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vnarrow32x4U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3983.
    return v6;
}

// Generated as internal constructor for term pulley_vnarrow64x2_s.
pub fn constructor_pulley_vnarrow64x2_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vnarrow64x2S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3990.
    return v6;
}

// Generated as internal constructor for term pulley_vnarrow64x2_u.
pub fn constructor_pulley_vnarrow64x2_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vnarrow64x2U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 3997.
    return v6;
}

// Generated as internal constructor for term pulley_vunarrow64x2_u.
pub fn constructor_pulley_vunarrow64x2_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vunarrow64x2U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4004.
    return v6;
}

// Generated as internal constructor for term pulley_vfpromotelow.
pub fn constructor_pulley_vfpromotelow<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VFpromoteLow {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4011.
    return v5;
}

// Generated as internal constructor for term pulley_vfdemote.
pub fn constructor_pulley_vfdemote<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VFdemote {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4018.
    return v5;
}

// Generated as internal constructor for term pulley_vsubi8x16.
pub fn constructor_pulley_vsubi8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubI8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4025.
    return v6;
}

// Generated as internal constructor for term pulley_vsubi16x8.
pub fn constructor_pulley_vsubi16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubI16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4032.
    return v6;
}

// Generated as internal constructor for term pulley_vsubi32x4.
pub fn constructor_pulley_vsubi32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubI32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4039.
    return v6;
}

// Generated as internal constructor for term pulley_vsubi64x2.
pub fn constructor_pulley_vsubi64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubI64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4046.
    return v6;
}

// Generated as internal constructor for term pulley_vsubf64x2.
pub fn constructor_pulley_vsubf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4053.
    return v6;
}

// Generated as internal constructor for term pulley_vsubi8x16_sat.
pub fn constructor_pulley_vsubi8x16_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubI8x16Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4060.
    return v6;
}

// Generated as internal constructor for term pulley_vsubu8x16_sat.
pub fn constructor_pulley_vsubu8x16_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubU8x16Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4067.
    return v6;
}

// Generated as internal constructor for term pulley_vsubi16x8_sat.
pub fn constructor_pulley_vsubi16x8_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubI16x8Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4074.
    return v6;
}

// Generated as internal constructor for term pulley_vsubu16x8_sat.
pub fn constructor_pulley_vsubu16x8_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubU16x8Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4081.
    return v6;
}

// Generated as internal constructor for term pulley_vmuli8x16.
pub fn constructor_pulley_vmuli8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VMulI8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4088.
    return v6;
}

// Generated as internal constructor for term pulley_vmuli16x8.
pub fn constructor_pulley_vmuli16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VMulI16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4095.
    return v6;
}

// Generated as internal constructor for term pulley_vmuli32x4.
pub fn constructor_pulley_vmuli32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VMulI32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4102.
    return v6;
}

// Generated as internal constructor for term pulley_vmuli64x2.
pub fn constructor_pulley_vmuli64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VMulI64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4109.
    return v6;
}

// Generated as internal constructor for term pulley_vmulf64x2.
pub fn constructor_pulley_vmulf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VMulF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4116.
    return v6;
}

// Generated as internal constructor for term pulley_vqmulrsi16x8.
pub fn constructor_pulley_vqmulrsi16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VQmulrsI16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4123.
    return v6;
}

// Generated as internal constructor for term pulley_vpopcnt8x16.
pub fn constructor_pulley_vpopcnt8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VPopcnt8x16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4130.
    return v5;
}

// Generated as internal constructor for term pulley_xextractv8x16.
pub fn constructor_pulley_xextractv8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XExtractV8x16 {
        dst: v2,
        src: arg0,
        lane: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4137.
    return v6;
}

// Generated as internal constructor for term pulley_xextractv16x8.
pub fn constructor_pulley_xextractv16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XExtractV16x8 {
        dst: v2,
        src: arg0,
        lane: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4144.
    return v6;
}

// Generated as internal constructor for term pulley_xextractv32x4.
pub fn constructor_pulley_xextractv32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XExtractV32x4 {
        dst: v2,
        src: arg0,
        lane: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4151.
    return v6;
}

// Generated as internal constructor for term pulley_xextractv64x2.
pub fn constructor_pulley_xextractv64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XExtractV64x2 {
        dst: v2,
        src: arg0,
        lane: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4158.
    return v6;
}

// Generated as internal constructor for term pulley_fextractv32x4.
pub fn constructor_pulley_fextractv32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: u8,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::FExtractV32x4 {
        dst: v2,
        src: arg0,
        lane: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4165.
    return v6;
}

// Generated as internal constructor for term pulley_fextractv64x2.
pub fn constructor_pulley_fextractv64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: u8,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::FExtractV64x2 {
        dst: v2,
        src: arg0,
        lane: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4172.
    return v6;
}

// Generated as internal constructor for term pulley_vinsertx8.
pub fn constructor_pulley_vinsertx8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
    arg2: u8,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VInsertX8 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        lane: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4179.
    return v7;
}

// Generated as internal constructor for term pulley_vinsertx16.
pub fn constructor_pulley_vinsertx16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
    arg2: u8,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VInsertX16 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        lane: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4186.
    return v7;
}

// Generated as internal constructor for term pulley_vinsertx32.
pub fn constructor_pulley_vinsertx32<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
    arg2: u8,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VInsertX32 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        lane: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4193.
    return v7;
}

// Generated as internal constructor for term pulley_vinsertx64.
pub fn constructor_pulley_vinsertx64<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
    arg2: u8,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VInsertX64 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        lane: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4200.
    return v7;
}

// Generated as internal constructor for term pulley_vinsertf32.
pub fn constructor_pulley_vinsertf32<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: FReg,
    arg2: u8,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VInsertF32 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        lane: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4207.
    return v7;
}

// Generated as internal constructor for term pulley_vinsertf64.
pub fn constructor_pulley_vinsertf64<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: FReg,
    arg2: u8,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VInsertF64 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        lane: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4214.
    return v7;
}

// Generated as internal constructor for term pulley_veq8x16.
pub fn constructor_pulley_veq8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Veq8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4221.
    return v6;
}

// Generated as internal constructor for term pulley_vneq8x16.
pub fn constructor_pulley_vneq8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vneq8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4228.
    return v6;
}

// Generated as internal constructor for term pulley_vslt8x16.
pub fn constructor_pulley_vslt8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslt8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4235.
    return v6;
}

// Generated as internal constructor for term pulley_vslteq8x16.
pub fn constructor_pulley_vslteq8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslteq8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4242.
    return v6;
}

// Generated as internal constructor for term pulley_vult8x16.
pub fn constructor_pulley_vult8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vult8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4249.
    return v6;
}

// Generated as internal constructor for term pulley_vulteq8x16.
pub fn constructor_pulley_vulteq8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vulteq8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4256.
    return v6;
}

// Generated as internal constructor for term pulley_veq16x8.
pub fn constructor_pulley_veq16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Veq16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4263.
    return v6;
}

// Generated as internal constructor for term pulley_vneq16x8.
pub fn constructor_pulley_vneq16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vneq16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4270.
    return v6;
}

// Generated as internal constructor for term pulley_vslt16x8.
pub fn constructor_pulley_vslt16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslt16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4277.
    return v6;
}

// Generated as internal constructor for term pulley_vslteq16x8.
pub fn constructor_pulley_vslteq16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslteq16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4284.
    return v6;
}

// Generated as internal constructor for term pulley_vult16x8.
pub fn constructor_pulley_vult16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vult16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4291.
    return v6;
}

// Generated as internal constructor for term pulley_vulteq16x8.
pub fn constructor_pulley_vulteq16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vulteq16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4298.
    return v6;
}

// Generated as internal constructor for term pulley_veq32x4.
pub fn constructor_pulley_veq32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Veq32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4305.
    return v6;
}

// Generated as internal constructor for term pulley_vneq32x4.
pub fn constructor_pulley_vneq32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vneq32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4312.
    return v6;
}

// Generated as internal constructor for term pulley_vslt32x4.
pub fn constructor_pulley_vslt32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslt32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4319.
    return v6;
}

// Generated as internal constructor for term pulley_vslteq32x4.
pub fn constructor_pulley_vslteq32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslteq32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4326.
    return v6;
}

// Generated as internal constructor for term pulley_vult32x4.
pub fn constructor_pulley_vult32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vult32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4333.
    return v6;
}

// Generated as internal constructor for term pulley_vulteq32x4.
pub fn constructor_pulley_vulteq32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vulteq32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4340.
    return v6;
}

// Generated as internal constructor for term pulley_veq64x2.
pub fn constructor_pulley_veq64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Veq64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4347.
    return v6;
}

// Generated as internal constructor for term pulley_vneq64x2.
pub fn constructor_pulley_vneq64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vneq64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4354.
    return v6;
}

// Generated as internal constructor for term pulley_vslt64x2.
pub fn constructor_pulley_vslt64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslt64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4361.
    return v6;
}

// Generated as internal constructor for term pulley_vslteq64x2.
pub fn constructor_pulley_vslteq64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslteq64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4368.
    return v6;
}

// Generated as internal constructor for term pulley_vult64x2.
pub fn constructor_pulley_vult64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vult64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4375.
    return v6;
}

// Generated as internal constructor for term pulley_vulteq64x2.
pub fn constructor_pulley_vulteq64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vulteq64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4382.
    return v6;
}

// Generated as internal constructor for term pulley_vneg8x16.
pub fn constructor_pulley_vneg8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vneg8x16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4389.
    return v5;
}

// Generated as internal constructor for term pulley_vneg16x8.
pub fn constructor_pulley_vneg16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vneg16x8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4396.
    return v5;
}

// Generated as internal constructor for term pulley_vneg32x4.
pub fn constructor_pulley_vneg32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vneg32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4403.
    return v5;
}

// Generated as internal constructor for term pulley_vneg64x2.
pub fn constructor_pulley_vneg64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vneg64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4410.
    return v5;
}

// Generated as internal constructor for term pulley_vnegf64x2.
pub fn constructor_pulley_vnegf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VnegF64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4417.
    return v5;
}

// Generated as internal constructor for term pulley_vmin8x16_s.
pub fn constructor_pulley_vmin8x16_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmin8x16S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4424.
    return v6;
}

// Generated as internal constructor for term pulley_vmin8x16_u.
pub fn constructor_pulley_vmin8x16_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmin8x16U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4431.
    return v6;
}

// Generated as internal constructor for term pulley_vmin16x8_s.
pub fn constructor_pulley_vmin16x8_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmin16x8S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4438.
    return v6;
}

// Generated as internal constructor for term pulley_vmin16x8_u.
pub fn constructor_pulley_vmin16x8_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmin16x8U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4445.
    return v6;
}

// Generated as internal constructor for term pulley_vmax8x16_s.
pub fn constructor_pulley_vmax8x16_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmax8x16S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4452.
    return v6;
}

// Generated as internal constructor for term pulley_vmax8x16_u.
pub fn constructor_pulley_vmax8x16_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmax8x16U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4459.
    return v6;
}

// Generated as internal constructor for term pulley_vmax16x8_s.
pub fn constructor_pulley_vmax16x8_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmax16x8S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4466.
    return v6;
}

// Generated as internal constructor for term pulley_vmax16x8_u.
pub fn constructor_pulley_vmax16x8_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmax16x8U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4473.
    return v6;
}

// Generated as internal constructor for term pulley_vmin32x4_s.
pub fn constructor_pulley_vmin32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmin32x4S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4480.
    return v6;
}

// Generated as internal constructor for term pulley_vmin32x4_u.
pub fn constructor_pulley_vmin32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmin32x4U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4487.
    return v6;
}

// Generated as internal constructor for term pulley_vmax32x4_s.
pub fn constructor_pulley_vmax32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmax32x4S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4494.
    return v6;
}

// Generated as internal constructor for term pulley_vmax32x4_u.
pub fn constructor_pulley_vmax32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmax32x4U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4501.
    return v6;
}

// Generated as internal constructor for term pulley_vabs8x16.
pub fn constructor_pulley_vabs8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vabs8x16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4508.
    return v5;
}

// Generated as internal constructor for term pulley_vabs16x8.
pub fn constructor_pulley_vabs16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vabs16x8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4515.
    return v5;
}

// Generated as internal constructor for term pulley_vabs32x4.
pub fn constructor_pulley_vabs32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vabs32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4522.
    return v5;
}

// Generated as internal constructor for term pulley_vabs64x2.
pub fn constructor_pulley_vabs64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vabs64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4529.
    return v5;
}

// Generated as internal constructor for term pulley_vabsf32x4.
pub fn constructor_pulley_vabsf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vabsf32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4536.
    return v5;
}

// Generated as internal constructor for term pulley_vabsf64x2.
pub fn constructor_pulley_vabsf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vabsf64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4543.
    return v5;
}

// Generated as internal constructor for term pulley_vmaximumf32x4.
pub fn constructor_pulley_vmaximumf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmaximumf32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4550.
    return v6;
}

// Generated as internal constructor for term pulley_vmaximumf64x2.
pub fn constructor_pulley_vmaximumf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmaximumf64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4557.
    return v6;
}

// Generated as internal constructor for term pulley_vminimumf32x4.
pub fn constructor_pulley_vminimumf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vminimumf32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4564.
    return v6;
}

// Generated as internal constructor for term pulley_vminimumf64x2.
pub fn constructor_pulley_vminimumf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vminimumf64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4571.
    return v6;
}

// Generated as internal constructor for term pulley_vshuffle.
pub fn constructor_pulley_vshuffle<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
    arg2: u128,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VShuffle {
        dst: v3,
        src1: arg0,
        src2: arg1,
        mask: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4578.
    return v7;
}

// Generated as internal constructor for term pulley_vswizzlei8x16.
pub fn constructor_pulley_vswizzlei8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vswizzlei8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4585.
    return v6;
}

// Generated as internal constructor for term pulley_vavground8x16.
pub fn constructor_pulley_vavground8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vavground8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4592.
    return v6;
}

// Generated as internal constructor for term pulley_vavground16x8.
pub fn constructor_pulley_vavground16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vavground16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4599.
    return v6;
}

// Generated as internal constructor for term pulley_veqf32x4.
pub fn constructor_pulley_veqf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VeqF32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4606.
    return v6;
}

// Generated as internal constructor for term pulley_vneqf32x4.
pub fn constructor_pulley_vneqf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VneqF32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4613.
    return v6;
}

// Generated as internal constructor for term pulley_vltf32x4.
pub fn constructor_pulley_vltf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VltF32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4620.
    return v6;
}

// Generated as internal constructor for term pulley_vlteqf32x4.
pub fn constructor_pulley_vlteqf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VlteqF32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4627.
    return v6;
}

// Generated as internal constructor for term pulley_veqf64x2.
pub fn constructor_pulley_veqf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VeqF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4634.
    return v6;
}

// Generated as internal constructor for term pulley_vneqf64x2.
pub fn constructor_pulley_vneqf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VneqF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4641.
    return v6;
}

// Generated as internal constructor for term pulley_vltf64x2.
pub fn constructor_pulley_vltf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VltF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4648.
    return v6;
}

// Generated as internal constructor for term pulley_vlteqf64x2.
pub fn constructor_pulley_vlteqf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VlteqF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4655.
    return v6;
}

// Generated as internal constructor for term pulley_vfma32x4.
pub fn constructor_pulley_vfma32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
    arg2: VReg,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::Vfma32x4 {
        dst: v3,
        a: arg0,
        b: arg1,
        c: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4662.
    return v7;
}

// Generated as internal constructor for term pulley_vfma64x2.
pub fn constructor_pulley_vfma64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
    arg2: VReg,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::Vfma64x2 {
        dst: v3,
        a: arg0,
        b: arg1,
        c: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4669.
    return v7;
}

// Generated as internal constructor for term pulley_vselect.
pub fn constructor_pulley_vselect<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: VReg,
    arg2: VReg,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::Vselect {
        dst: v3,
        cond: arg0,
        if_nonzero: arg1,
        if_zero: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4676.
    return v7;
}

// Generated as internal constructor for term pulley_xadd128.
pub fn constructor_pulley_xadd128<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: XReg,
    arg3: XReg,
) -> ValueRegs {
    let v4 = constructor_temp_writable_xreg(ctx);
    let v5 = constructor_temp_writable_xreg(ctx);
    let v6 = RawInst::Xadd128 {
        dst_lo: v4,
        dst_hi: v5,
        lhs_lo: arg0,
        lhs_hi: arg1,
        rhs_lo: arg2,
        rhs_hi: arg3,
    };
    let v7 = &constructor_raw_inst_to_inst(ctx, &v6);
    let v8 = C::emit(ctx, v7);
    let v9 = constructor_writable_xreg_to_reg(ctx, v4);
    let v10 = constructor_writable_xreg_to_reg(ctx, v5);
    let v11 = C::value_regs(ctx, v9, v10);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4683.
    return v11;
}

// Generated as internal constructor for term pulley_xsub128.
pub fn constructor_pulley_xsub128<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: XReg,
    arg3: XReg,
) -> ValueRegs {
    let v4 = constructor_temp_writable_xreg(ctx);
    let v5 = constructor_temp_writable_xreg(ctx);
    let v6 = RawInst::Xsub128 {
        dst_lo: v4,
        dst_hi: v5,
        lhs_lo: arg0,
        lhs_hi: arg1,
        rhs_lo: arg2,
        rhs_hi: arg3,
    };
    let v7 = &constructor_raw_inst_to_inst(ctx, &v6);
    let v8 = C::emit(ctx, v7);
    let v9 = constructor_writable_xreg_to_reg(ctx, v4);
    let v10 = constructor_writable_xreg_to_reg(ctx, v5);
    let v11 = C::value_regs(ctx, v9, v10);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4691.
    return v11;
}

// Generated as internal constructor for term pulley_xwidemul64_s.
pub fn constructor_pulley_xwidemul64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> ValueRegs {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::Xwidemul64S {
        dst_lo: v2,
        dst_hi: v3,
        lhs: arg0,
        rhs: arg1,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = constructor_writable_xreg_to_reg(ctx, v2);
    let v8 = constructor_writable_xreg_to_reg(ctx, v3);
    let v9 = C::value_regs(ctx, v7, v8);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4699.
    return v9;
}

// Generated as internal constructor for term pulley_xwidemul64_u.
pub fn constructor_pulley_xwidemul64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> ValueRegs {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::Xwidemul64U {
        dst_lo: v2,
        dst_hi: v3,
        lhs: arg0,
        rhs: arg1,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = constructor_writable_xreg_to_reg(ctx, v2);
    let v8 = constructor_writable_xreg_to_reg(ctx, v3);
    let v9 = C::value_regs(ctx, v7, v8);
    // Rule at /Users/egd/internal/invoke-os/server/target/debug/build/cranelift-codegen-4824050771d6eebd/out/pulley_gen.isle line 4707.
    return v9;
}
